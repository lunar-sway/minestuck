package com.mraof.minestuck.data.recipe;

import com.mraof.minestuck.Minestuck;
import com.mraof.minestuck.block.MSBlocks;
import com.mraof.minestuck.data.AspectTreeBlocksData;
import com.mraof.minestuck.data.SkaiaBlocksData;
import com.mraof.minestuck.item.MSItems;
import com.mraof.minestuck.util.ExtraForgeTags;
import com.mraof.minestuck.util.MSTags;
import net.minecraft.MethodsReturnNonnullByDefault;
import net.minecraft.advancements.Criterion;
import net.minecraft.advancements.critereon.InventoryChangeTrigger;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.data.PackOutput;
import net.minecraft.data.recipes.*;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.ItemTags;
import net.minecraft.world.item.Items;
import net.minecraft.world.item.crafting.Ingredient;
import net.minecraft.world.item.crafting.RecipeType;
import net.minecraft.world.level.ItemLike;
import net.neoforged.neoforge.common.Tags;

import javax.annotation.ParametersAreNonnullByDefault;
import java.util.Objects;

@ParametersAreNonnullByDefault
@MethodsReturnNonnullByDefault
public class MinestuckRecipeProvider extends RecipeProvider
{
	public MinestuckRecipeProvider(PackOutput output)
	{
		super(output);
	}
	
	@Override
	protected void buildRecipes(RecipeOutput recipeBuilder)
	{
		SkaiaBlocksData.addRecipes(recipeBuilder);
		AspectTreeBlocksData.addRecipes(recipeBuilder);
		
		ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, MSItems.RAW_CRUXITE.get(), 9).requires(MSBlocks.CRUXITE_BLOCK.get()).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).unlockedBy("has_cruxite_block", has(MSBlocks.CRUXITE_BLOCK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "raw_cruxite_from_block"));
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_BLOCK.get()).define('#', MSItems.RAW_CRUXITE.get()).pattern("###").pattern("###").pattern("###").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, MSItems.RAW_URANIUM.get(), 9).requires(MSBlocks.URANIUM_BLOCK.get()).unlockedBy("has__raw_uranium", has(MSItems.RAW_URANIUM.get())).unlockedBy("has_uranium_block", has(MSBlocks.URANIUM_BLOCK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "raw_uranium_from_block"));
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.URANIUM_BLOCK.get()).define('#', MSItems.RAW_URANIUM.get()).pattern("###").pattern("###").pattern("###").unlockedBy("has_raw_uranium", has(MSItems.RAW_URANIUM.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, Items.SUGAR, 9).requires(MSBlocks.SUGAR_CUBE.get()).unlockedBy("has_sugar", has(Items.SUGAR)).unlockedBy("has_sugar_cube", has(MSBlocks.SUGAR_CUBE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "sugar_from_cube"));
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SUGAR_CUBE.get()).define('#', Items.SUGAR).pattern("###").pattern("###").pattern("###").unlockedBy("has_sugar", has(Items.SUGAR)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.FOOD, MSItems.STRAWBERRY_CHUNK.get(), 4).requires(MSBlocks.STRAWBERRY.get()).unlockedBy("has_strawberry_chunks", has(MSItems.STRAWBERRY_CHUNK.get())).unlockedBy("has_strawberry_block", has(MSBlocks.STRAWBERRY.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.STRAWBERRY.get()).define('#', MSItems.STRAWBERRY_CHUNK.get()).pattern("##").pattern("##").unlockedBy("has_strawberry_chunks", has(MSItems.STRAWBERRY_CHUNK.get())).save(recipeBuilder);
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_COARSE_STONE.get()).define('#', MSBlocks.COARSE_STONE_SLAB.get()).pattern("#").pattern("#").unlockedBy("has_coarse_stone_slab", has(MSBlocks.COARSE_STONE_SLAB.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_BRICKS.get(), 4).define('#', MSBlocks.COARSE_STONE.get()).pattern("##").pattern("##").unlockedBy("has_coarse_stone", has(MSBlocks.COARSE_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_COARSE_STONE_BRICKS.get()).define('#', MSBlocks.COARSE_STONE_BRICK_SLAB.get()).pattern("#").pattern("#").unlockedBy("has_coarse_stone_brick_slab", has(MSBlocks.COARSE_STONE_BRICK_SLAB.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_COLUMN.get(), 3).define('#', MSBlocks.COARSE_STONE_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_coarse_stone_bricks", has(MSBlocks.COARSE_STONE_BRICKS.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_COARSE_STONE_BRICKS.get()).requires(MSBlocks.COARSE_STONE_BRICKS.get()).requires(Items.VINE).unlockedBy("has_coarse_stone_bricks", has(MSBlocks.COARSE_STONE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_BRICKS.get(), 4).define('#', MSBlocks.SHADE_STONE.get()).pattern("##").pattern("##").unlockedBy("has_shade_stone", has(MSBlocks.SHADE_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_SHADE_BRICKS.get()).define('#', MSBlocks.SHADE_BRICK_SLAB.get()).pattern("#").pattern("#").unlockedBy("has_shade_brick_slab", has(MSBlocks.SHADE_BRICK_SLAB.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_SHADE_BRICKS.get()).requires(MSBlocks.SHADE_BRICKS.get()).requires(MSBlocks.GLOWING_MUSHROOM.get()).unlockedBy("has_shade_bricks", has(MSBlocks.SHADE_BRICKS.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLOOD_SHADE_BRICKS.get()).requires(MSBlocks.SHADE_BRICKS.get()).requires(MSBlocks.COAGULATED_BLOOD.get()).unlockedBy("has_shade_bricks", has(MSBlocks.SHADE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_COLUMN.get(), 3).define('#', MSBlocks.SHADE_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_shade_bricks", has(MSBlocks.SHADE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_BRICKS.get(), 4).define('#', MSBlocks.MYCELIUM_STONE.get()).pattern("##").pattern("##").unlockedBy("has_mycelium_stone", has(MSBlocks.MYCELIUM_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_MYCELIUM_BRICKS.get()).define('#', MSBlocks.MYCELIUM_BRICK_SLAB.get()).pattern("#").pattern("#").unlockedBy("has_mycelium_brick_slab", has(MSBlocks.MYCELIUM_BRICK_SLAB.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_COLUMN.get(), 3).define('#', MSBlocks.MYCELIUM_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_mycelium_bricks", has(MSBlocks.MYCELIUM_BRICKS.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_MYCELIUM_BRICKS.get()).requires(MSBlocks.MYCELIUM_BRICKS.get()).requires(Items.VINE).unlockedBy("has_mycelium_bricks", has(MSBlocks.MYCELIUM_BRICKS.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_MYCELIUM_BRICKS.get()).requires(MSBlocks.MYCELIUM_BRICKS.get()).requires(Items.RED_MUSHROOM).unlockedBy("has_mycelium_bricks", has(MSBlocks.MYCELIUM_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_FROST_TILE.get()).define('#', MSBlocks.FROST_TILE_SLAB.get()).pattern("#").pattern("#").unlockedBy("has_frost_tile_slab", has(MSBlocks.FROST_TILE_SLAB.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_BRICKS.get(), 4).define('#', MSBlocks.FROST_TILE.get()).pattern("##").pattern("##").unlockedBy("has_frost_tile", has(MSBlocks.FROST_TILE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_FROST_BRICKS.get()).define('#', MSBlocks.FROST_BRICK_SLAB.get()).pattern("#").pattern("#").unlockedBy("has_frost_brick_slab", has(MSBlocks.FROST_BRICK_SLAB.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_COLUMN.get(), 3).define('#', MSBlocks.FROST_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_frost_bricks", has(MSBlocks.FROST_BRICKS.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_FROST_BRICKS.get()).requires(MSBlocks.FROST_BRICKS.get()).requires(Items.VINE).requires(Items.BONE_MEAL).unlockedBy("has_frost_bricks", has(MSBlocks.FROST_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CHALK.get(), 4).define('#', MSBlocks.CHALK.get()).pattern("##").pattern("##").unlockedBy("has_chalk", has(MSBlocks.CHALK.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_BRICKS.get(), 4).define('#', MSBlocks.POLISHED_CHALK.get()).pattern("##").pattern("##").unlockedBy("has_polished_chalk", has(MSBlocks.POLISHED_CHALK.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_CHALK_BRICKS.get(), 4).define('#', MSBlocks.CHALK_BRICKS.get()).pattern("##").pattern("##").unlockedBy("has_chalk_bricks", has(MSBlocks.CHALK_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_COLUMN.get(), 3).define('#', MSBlocks.CHALK_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_chalk_bricks", has(MSBlocks.CHALK_BRICKS.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_CHALK_BRICKS.get()).requires(MSBlocks.CHALK_BRICKS.get()).requires(Items.VINE).unlockedBy("has_chalk_bricks", has(MSBlocks.CHALK_BRICKS.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_CHALK_BRICKS.get()).requires(MSBlocks.MOSSY_CHALK_BRICKS.get()).requires(Items.BONE_MEAL).unlockedBy("has_mossy_chalk_bricks", has(MSBlocks.MOSSY_CHALK_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_BRICKS.get(), 4).define('#', MSBlocks.PINK_STONE.get()).pattern("##").pattern("##").unlockedBy("has_pink_stone", has(MSBlocks.PINK_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_PINK_STONE_BRICKS.get()).define('#', MSBlocks.PINK_STONE_BRICK_SLAB.get()).pattern("#").pattern("#").unlockedBy("has_pink_stone_brick_slab", has(MSBlocks.PINK_STONE_BRICK_SLAB.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_PINK_STONE_BRICKS.get()).requires(MSBlocks.PINK_STONE_BRICKS.get()).requires(Items.VINE).unlockedBy("has_vine", has(Items.VINE)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_COLUMN.get(), 3).define('#', MSBlocks.PINK_STONE_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_pink_stone_bricks", has(MSBlocks.PINK_STONE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_BRICKS.get(), 4).define('#', MSBlocks.BROWN_STONE.get()).pattern("##").pattern("##").unlockedBy("has_brown_stone", has(MSBlocks.BROWN_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_COLUMN.get(), 3).define('#', MSBlocks.BROWN_STONE_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_brown_stone_bricks", has(MSBlocks.BROWN_STONE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_GREEN_STONE.get(), 4).define('#', MSBlocks.GREEN_STONE.get()).pattern("##").pattern("##").unlockedBy("has_green_stone", has(MSBlocks.GREEN_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_BRICKS.get(), 4).define('#', MSBlocks.POLISHED_GREEN_STONE.get()).pattern("##").pattern("##").unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_COLUMN.get(), 3).define('#', MSBlocks.GREEN_STONE_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_green_stone_bricks", has(MSBlocks.GREEN_STONE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS.get(), 2).define('#', MSBlocks.POLISHED_GREEN_STONE.get()).pattern("##").unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.VERTICAL_GREEN_STONE_BRICKS.get(), 2).define('#', MSBlocks.POLISHED_GREEN_STONE.get()).pattern("#").pattern("#").unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_BRICK_EMBEDDED_LADDER.get(), 3).define('#', MSBlocks.GREEN_STONE_BRICKS.get()).pattern("# #").pattern("###").pattern("# #").unlockedBy("has_green_stone_bricks", has(MSBlocks.GREEN_STONE_BRICKS.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_DECREPIT_STONE_BRICKS.get()).requires(MSBlocks.DECREPIT_STONE_BRICKS.get()).requires(Items.VINE).unlockedBy("has_vine", has(Items.VINE)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_MOSSY_STONE_BRICKS.get()).requires(MSBlocks.MOSSY_DECREPIT_STONE_BRICKS.get()).requires(MSBlocks.COAGULATED_BLOOD.get()).unlockedBy("has_coagulated_blood", has(MSBlocks.COAGULATED_BLOOD.get())).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.COARSE_STONE_STAIRS, MSBlocks.COARSE_STONE).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.COARSE_STONE_BRICK_STAIRS, MSBlocks.COARSE_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.SHADE_STAIRS, MSBlocks.SHADE_STONE).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.SHADE_BRICK_STAIRS, MSBlocks.SHADE_BRICKS).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.FROST_TILE_STAIRS, MSBlocks.FROST_TILE).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.FROST_BRICK_STAIRS, MSBlocks.FROST_BRICKS).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.MYCELIUM_STAIRS, MSBlocks.MYCELIUM_STONE).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.MYCELIUM_BRICK_STAIRS, MSBlocks.MYCELIUM_BRICKS).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.CHALK_STAIRS, MSBlocks.CHALK).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.CHALK_BRICK_STAIRS, MSBlocks.CHALK_BRICKS).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.PINK_STONE_STAIRS, MSBlocks.PINK_STONE).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.PINK_STONE_BRICK_STAIRS, MSBlocks.PINK_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.BROWN_STONE_STAIRS, MSBlocks.BROWN_STONE).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.BROWN_STONE_BRICK_STAIRS, MSBlocks.BROWN_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.GREEN_STONE_STAIRS, MSBlocks.GREEN_STONE).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.GREEN_STONE_BRICK_STAIRS, MSBlocks.GREEN_STONE_BRICKS).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.STEEP_GREEN_STONE_BRICK_STAIRS_BASE.get(), 2).define('#', MSBlocks.GREEN_STONE_BRICK_STAIRS.get()).pattern("##").unlockedBy("has_green_stone_brick_stairs", has(MSBlocks.GREEN_STONE_BRICK_STAIRS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.STEEP_GREEN_STONE_BRICK_STAIRS_TOP.get(), 2).define('#', MSBlocks.GREEN_STONE_BRICK_STAIRS.get()).pattern("#").pattern("#").unlockedBy("has_green_stone_brick_stairs", has(MSBlocks.GREEN_STONE_BRICK_STAIRS.get())).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.FLOWERY_MOSSY_STONE_BRICK_STAIRS, MSBlocks.FLOWERY_MOSSY_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.COARSE_STONE_SLAB, MSBlocks.COARSE_STONE).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.COARSE_STONE_BRICK_SLAB, MSBlocks.COARSE_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.SHADE_SLAB, MSBlocks.SHADE_STONE).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.SHADE_BRICK_SLAB, MSBlocks.SHADE_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.FROST_TILE_SLAB, MSBlocks.FROST_TILE).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.FROST_BRICK_SLAB, MSBlocks.FROST_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.CHALK_SLAB, MSBlocks.CHALK).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.CHALK_BRICK_SLAB, MSBlocks.CHALK_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.MYCELIUM_SLAB, MSBlocks.MYCELIUM_STONE).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.MYCELIUM_BRICK_SLAB, MSBlocks.MYCELIUM_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.PINK_STONE_SLAB, MSBlocks.PINK_STONE).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.PINK_STONE_BRICK_SLAB, MSBlocks.PINK_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.BROWN_STONE_SLAB, MSBlocks.BROWN_STONE).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.BROWN_STONE_BRICK_SLAB, MSBlocks.BROWN_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.GREEN_STONE_SLAB, MSBlocks.GREEN_STONE).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.GREEN_STONE_BRICK_SLAB, MSBlocks.GREEN_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.FLOWERY_MOSSY_STONE_BRICK_SLAB, MSBlocks.FLOWERY_MOSSY_STONE_BRICKS).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SANDSTONE_COLUMN.get(), 3).define('#', Items.SANDSTONE).pattern("#").pattern("#").pattern("#").unlockedBy("has_sandstone", has(Items.SANDSTONE)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_SANDSTONE_COLUMN.get(), 3).define('#', Items.CHISELED_SANDSTONE).pattern("#").pattern("#").pattern("#").unlockedBy("has_chiseled_sandstone", has(Items.CHISELED_SANDSTONE)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.RED_SANDSTONE_COLUMN.get(), 3).define('#', Items.RED_SANDSTONE).pattern("#").pattern("#").pattern("#").unlockedBy("has_red_sandstone", has(Items.RED_SANDSTONE)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_RED_SANDSTONE_COLUMN.get(), 3).define('#', Items.CHISELED_RED_SANDSTONE).pattern("#").pattern("#").pattern("#").unlockedBy("has_chiseled_red_sandstone", has(Items.CHISELED_RED_SANDSTONE)).save(recipeBuilder);
		
		
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.SPIKES.get()).define('#', Items.IRON_INGOT).define('n', Items.IRON_NUGGET).pattern("n n").pattern("# #").pattern("###").unlockedBy("has_iron_ingot", has(Items.IRON_INGOT)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.RETRACTABLE_SPIKES.get()).define('#', Items.IRON_INGOT).define('p', Items.PISTON).define('s', MSBlocks.SPIKES.get()).define('w', ItemTags.WOODEN_PRESSURE_PLATES).pattern(" s ").pattern("#w#").pattern("#p#").unlockedBy("has_spikes", has(MSBlocks.SPIKES.get())).save(recipeBuilder);
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GLOWING_WOOD.get(), 3).define('#', MSBlocks.GLOWING_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.GLOWING_LOGS)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GLOWING_PLANKS.get(), 4).requires(MSTags.Items.GLOWING_LOGS).group("planks").unlockedBy("has_log", has(MSTags.Items.GLOWING_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADEWOOD.get(), 3).define('#', MSBlocks.SHADEWOOD_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.SHADEWOOD_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SCARRED_SHADEWOOD.get(), 3).define('#', MSBlocks.SCARRED_SHADEWOOD_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.SHADEWOOD_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.ROTTED_SHADEWOOD.get(), 3).define('#', MSBlocks.ROTTED_SHADEWOOD_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.SHADEWOOD_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.STRIPPED_SHADEWOOD.get(), 3).define('#', MSBlocks.STRIPPED_SHADEWOOD_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.SHADEWOOD_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.STRIPPED_SCARRED_SHADEWOOD.get(), 3).define('#', MSBlocks.STRIPPED_SCARRED_SHADEWOOD_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.SHADEWOOD_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.STRIPPED_ROTTED_SHADEWOOD.get(), 3).define('#', MSBlocks.STRIPPED_ROTTED_SHADEWOOD_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.SHADEWOOD_LOGS)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADEWOOD_PLANKS.get(), 4).requires(MSTags.Items.SHADEWOOD_LOGS).group("planks").unlockedBy("has_log", has(MSTags.Items.SHADEWOOD_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_WOOD.get(), 3).define('#', MSBlocks.FROST_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.FROST_LOGS)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_PLANKS.get(), 4).requires(MSTags.Items.FROST_LOGS).group("planks").unlockedBy("has_log", has(MSTags.Items.FROST_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.RAINBOW_WOOD.get(), 3).define('#', MSBlocks.RAINBOW_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.RAINBOW_LOGS)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.RAINBOW_PLANKS.get(), 4).requires(MSTags.Items.RAINBOW_LOGS).group("planks").unlockedBy("has_log", has(MSTags.Items.RAINBOW_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.END_WOOD.get(), 3).define('#', MSBlocks.END_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.END_LOGS)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.END_PLANKS.get(), 4).requires(MSTags.Items.END_LOGS).group("planks").unlockedBy("has_log", has(MSTags.Items.END_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.VINE_WOOD.get(), 3).define('#', MSBlocks.VINE_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.VINE_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_VINE_WOOD.get(), 3).define('#', MSBlocks.FLOWERY_VINE_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.FLOWERY_VINE_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.DEAD_WOOD.get(), 3).define('#', MSBlocks.DEAD_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.DEAD_LOGS)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.DEAD_PLANKS.get(), 4).requires(MSTags.Items.DEAD_LOGS).group("planks").unlockedBy("has_log", has(MSTags.Items.DEAD_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CINDERED_WOOD.get(), 3).define('#', MSBlocks.CINDERED_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSBlocks.CINDERED_LOG.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CINDERED_PLANKS.get(), 4).requires(MSTags.Items.CINDERED_LOGS).group("planks").unlockedBy("has_log", has(MSTags.Items.CINDERED_LOGS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PETRIFIED_WOOD.get(), 3).define('#', MSBlocks.PETRIFIED_LOG.get()).pattern("##").pattern("##").group("bark").unlockedBy("has_log", has(MSTags.Items.PETRIFIED_LOGS)).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.RAINBOW_STAIRS, MSBlocks.RAINBOW_PLANKS, "has_planks").group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.END_STAIRS, MSBlocks.END_PLANKS, "has_planks").group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.DEAD_STAIRS, MSBlocks.DEAD_PLANKS, "has_planks").group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.RAINBOW_SLAB, MSBlocks.RAINBOW_PLANKS, "has_planks").group("wooden_slab").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.END_SLAB, MSBlocks.END_PLANKS, "has_planks").group("wooden_slab").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.DEAD_SLAB, MSBlocks.DEAD_PLANKS, "has_planks").group("wooden_slab").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GLOWING_BOOKSHELF.get()).define('b', Items.BOOK).define('p', MSBlocks.GLOWING_PLANKS.get()).pattern("ppp").pattern("bpb").pattern("ppp").group("bookshelf").unlockedBy("has_planks", has(MSBlocks.GLOWING_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_BOOKSHELF.get()).define('b', Items.BOOK).define('p', MSBlocks.FROST_PLANKS.get()).pattern("ppp").pattern("bpb").pattern("ppp").group("bookshelf").unlockedBy("has_planks", has(MSBlocks.FROST_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.RAINBOW_BOOKSHELF.get()).define('b', Items.BOOK).define('p', MSBlocks.RAINBOW_PLANKS.get()).pattern("ppp").pattern("bpb").pattern("ppp").group("bookshelf").unlockedBy("has_planks", has(MSBlocks.RAINBOW_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.END_BOOKSHELF.get()).define('b', Items.BOOK).define('p', MSBlocks.END_PLANKS.get()).pattern("ppp").pattern("bpb").pattern("ppp").group("bookshelf").unlockedBy("has_planks", has(MSBlocks.END_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.DEAD_BOOKSHELF.get()).define('b', Items.BOOK).define('p', MSBlocks.DEAD_PLANKS.get()).pattern("ppp").pattern("bpb").pattern("ppp").group("bookshelf").unlockedBy("has_planks", has(MSBlocks.DEAD_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_BOOKSHELF.get()).define('b', Items.BOOK).define('p', MSBlocks.TREATED_PLANKS.get()).pattern("ppp").pattern("bpb").pattern("ppp").group("bookshelf").unlockedBy("has_planks", has(MSBlocks.TREATED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.GLOWING_LADDER.get(), 4).define('s', Items.STICK).define('p', MSBlocks.GLOWING_PLANKS.get()).pattern("s s").pattern("sps").pattern("s s").group("ladder").unlockedBy("has_planks", has(MSBlocks.GLOWING_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.FROST_LADDER.get(), 4).define('s', Items.STICK).define('p', MSBlocks.FROST_PLANKS.get()).pattern("s s").pattern("sps").pattern("s s").group("ladder").unlockedBy("has_planks", has(MSBlocks.FROST_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.RAINBOW_LADDER.get(), 4).define('s', Items.STICK).define('p', MSBlocks.RAINBOW_PLANKS.get()).pattern("s s").pattern("sps").pattern("s s").group("ladder").unlockedBy("has_planks", has(MSBlocks.RAINBOW_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.END_LADDER.get(), 4).define('s', Items.STICK).define('p', MSBlocks.END_PLANKS.get()).pattern("s s").pattern("sps").pattern("s s").group("ladder").unlockedBy("has_planks", has(MSBlocks.END_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.DEAD_LADDER.get(), 4).define('s', Items.STICK).define('p', MSBlocks.DEAD_PLANKS.get()).pattern("s s").pattern("sps").pattern("s s").group("ladder").unlockedBy("has_planks", has(MSBlocks.DEAD_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.TREATED_LADDER.get(), 4).define('s', Items.STICK).define('p', MSBlocks.TREATED_PLANKS.get()).pattern("s s").pattern("sps").pattern("s s").group("ladder").unlockedBy("has_planks", has(MSBlocks.TREATED_PLANKS.get())).save(recipeBuilder);
		
		ShapelessRecipeBuilder.shapeless(RecipeCategory.DECORATIONS, MSBlocks.COMPUTER.get()).requires(MSItems.ENERGY_CORE.get()).requires(MSItems.COMPUTER_PARTS.get()).unlockedBy("has_computer_parts", has(MSItems.COMPUTER_PARTS.get())).requires(Items.QUARTZ).requires(Items.REDSTONE).requires(MSItems.RAW_CRUXITE.get()).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.URANIUM_COOKER.get()).define('e', MSItems.ENERGY_CORE.get()).define('i', Tags.Items.INGOTS_IRON).define('F', Items.FURNACE).pattern("iii").pattern("iFi").pattern("iei").unlockedBy("has_energy_core", has(MSItems.ENERGY_CORE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.SKAIANET_DENIER.get()).define('e', MSItems.ENERGY_CORE.get()).define('i', Tags.Items.INGOTS_IRON).define('p', MSItems.COMPUTER_PARTS.get()).define('r', Items.LIGHTNING_ROD).pattern("iri").pattern("ipi").pattern("iei").unlockedBy("has_energy_core", has(MSItems.ENERGY_CORE.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, MSItems.GUTTER_THUMB_DRIVE.get()).requires(MSItems.ANCIENT_THUMB_DRIVE.get()).requires(Items.HONEYCOMB).unlockedBy("has_ancient_thumb_drive", has(MSItems.ANCIENT_THUMB_DRIVE.get())).save(recipeBuilder);
		
		ShapelessRecipeBuilder.shapeless(RecipeCategory.DECORATIONS, Items.SPRUCE_PLANKS).requires(MSBlocks.WOODEN_CACTUS.get()).group("planks").unlockedBy("has_cactus", has(MSBlocks.WOODEN_CACTUS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "spruce_planks_from_wooden_cactus"));
		ShapedRecipeBuilder.shaped(RecipeCategory.FOOD, MSBlocks.APPLE_CAKE.get()).define('m', Items.MILK_BUCKET).define('a', Items.APPLE).define('w', Items.WHEAT).define('e', Items.EGG).pattern("mmm").pattern("aea").pattern("www").unlockedBy("has_egg", has(Items.EGG)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.CHESSBOARD.get()).define('W', Items.WHITE_TERRACOTTA).define('B', Items.BLACK_TERRACOTTA).pattern("WBW").pattern("BWB").pattern("WBW").group("chessboard").unlockedBy("has_white_terracotta", has(Items.WHITE_TERRACOTTA)).unlockedBy("has_black_terracotta", has(Items.BLACK_TERRACOTTA)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chessboard_white"));
		ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, MSBlocks.CHESSBOARD.get()).define('W', Items.WHITE_TERRACOTTA).define('B', Items.BLACK_TERRACOTTA).pattern("BWB").pattern("WBW").pattern("BWB").group("chessboard").unlockedBy("has_white_terracotta", has(Items.WHITE_TERRACOTTA)).unlockedBy("has_black_terracotta", has(Items.BLACK_TERRACOTTA)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chessboard_black"));
		ShapedRecipeBuilder.shaped(RecipeCategory.MISC, MSItems.CLOTHES_IRON.get()).define('s', Tags.Items.STONE).define('i', Tags.Items.INGOTS_IRON).define('r', Tags.Items.RODS_WOODEN).pattern(" rr").pattern("sss").pattern("iii").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).unlockedBy("has_iron_ingot", has(Tags.Items.INGOTS_IRON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.MISC, MSItems.HORN.get()).define('w', Items.WHITE_WOOL).define('i', Tags.Items.INGOTS_IRON).define('r', Tags.Items.RODS_WOODEN).pattern("  i").pattern(" r ").pattern("w  ").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).unlockedBy("has_iron_ingot", has(Tags.Items.INGOTS_IRON)).unlockedBy("has_white_wool", has(Items.WHITE_WOOL)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, MSItems.BI_DYE.get(), 2).requires(Items.BLUE_DYE).unlockedBy("has_blue_dye", has(Items.BLUE_DYE)).requires(Items.PINK_DYE).unlockedBy("has_pink_dye", has(Items.PINK_DYE)).requires(Items.PURPLE_DYE).unlockedBy("has_purple_dye", has(Items.PURPLE_DYE)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.MISC, MSItems.LIP_BALM.get()).define('n', Items.IRON_NUGGET).define('w', Items.HONEYCOMB).pattern("nwn").pattern(" n ").unlockedBy("has_honeycomb", has(Items.HONEYCOMB)).unlockedBy("has_iron_nugget", has(Items.IRON_NUGGET)).save(recipeBuilder);
		
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.CLAW_HAMMER.get()).define('i', Tags.Items.INGOTS_IRON).define('s', Tags.Items.RODS_WOODEN).pattern(" ii").pattern("is ").pattern(" s ").unlockedBy("has_iron_ingot", has(Tags.Items.INGOTS_IRON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.SLEDGE_HAMMER.get()).define('i', Tags.Items.INGOTS_IRON).define('s', Tags.Items.RODS_WOODEN).define('S', Tags.Items.STONE).pattern("iSi").pattern(" s ").pattern(" s ").unlockedBy("has_iron_ingot", has(Tags.Items.INGOTS_IRON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.KATANA.get()).define('i', Tags.Items.INGOTS_IRON).define('s', Tags.Items.RODS_WOODEN).pattern("  i").pattern(" i ").pattern("s  ").unlockedBy("has_iron_ingot", has(Tags.Items.INGOTS_IRON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.DAGGER.get()).define('i', Tags.Items.INGOTS_IRON).define('s', Tags.Items.RODS_WOODEN).pattern("s").pattern("i").pattern("i").unlockedBy("has_iron_ingot", has(Tags.Items.INGOTS_IRON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.HOUSE_KEY.get()).define('n', Tags.Items.NUGGETS_IRON).define('i', Tags.Items.INGOTS_IRON).pattern(" in").pattern(" in").pattern(" i ").unlockedBy("has_iron_ingot", has(Tags.Items.INGOTS_IRON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.MACUAHUITL.get()).define('P', ItemTags.PLANKS).define('s', Tags.Items.RODS_WOODEN).define('O', Items.OBSIDIAN).pattern("OPO").pattern("OPO").pattern(" s ").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.OBSIDIAN_AXE_KNIFE.get()).define('s', Tags.Items.RODS_WOODEN).define('O', Items.OBSIDIAN).pattern("  O").pattern(" Os").pattern("Os ").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.SICKLE.get()).define('i', Tags.Items.INGOTS_IRON).define('s', Tags.Items.RODS_WOODEN).pattern("ii ").pattern("  i").pattern(" s ").unlockedBy("has_iron_ingot", has(Tags.Items.INGOTS_IRON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.DEUCE_CLUB.get()).define('P', ItemTags.PLANKS).define('s', Tags.Items.RODS_WOODEN).pattern("  P").pattern(" s ").pattern("s  ").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.CANE.get()).define('s', Tags.Items.RODS_WOODEN).pattern("  s").pattern(" s ").pattern("s  ").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.BEAR_POKING_STICK.get()).define('s', Tags.Items.RODS_WOODEN).define('l', Tags.Items.LEATHER).pattern("  s").pattern(" s ").pattern("l  ").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.UMBRELLA.get()).define('s', Tags.Items.RODS_WOODEN).define('w', Items.BLACK_WOOL).pattern(" w ").pattern("wsw").pattern(" s ").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.WOODEN_LANCE.get()).define('s', Tags.Items.RODS_WOODEN).define('P', ItemTags.PLANKS).define('w', Items.WOODEN_SWORD).pattern("wP ").pattern("PP ").pattern("  s").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.FAN.get()).define('s', Tags.Items.RODS_WOODEN).define('p', Items.PAPER).pattern("  p").pattern(" pp").pattern("pps").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.IRON_CANE.get()).define('i', Tags.Items.INGOTS_IRON).define('c', MSItems.CANE.get()).pattern("  i").pattern(" c ").pattern("i  ").unlockedBy("has_iron_ingot", has(Tags.Items.INGOTS_IRON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.WOODEN_SPOON.get()).define('s', Tags.Items.RODS_WOODEN).define('b', Items.BOWL).pattern("b").pattern("s").pattern("s").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.FORK.get()).define('S', Tags.Items.STONE).pattern("S S").pattern(" S ").pattern(" S ").unlockedBy("has_stone", has(Tags.Items.STONE)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.POINTY_STICK.get(), 1).define('s', Tags.Items.RODS_WOODEN).pattern("s").pattern("s").pattern("s").unlockedBy("has_stick", has(Tags.Items.RODS_WOODEN)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.KNITTING_NEEDLE.get(), 2).define('i', Items.IRON_INGOT).define('n', Items.IRON_NUGGET).pattern("  n").pattern(" i ").pattern("i  ").unlockedBy("has_iron_ingot", has(Items.IRON_INGOT)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.SHURIKEN.get(), 2).define('i', Items.IRON_INGOT).define('n', Items.IRON_NUGGET).pattern(" i ").pattern("ini").pattern(" i ").unlockedBy("has_iron_ingot", has(Items.IRON_INGOT)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.COMBAT, MSItems.MAKESHIFT_CLAWS_DRAWN.get(), 1).define('s', ItemTags.STONE_TOOL_MATERIALS).define('P', ItemTags.PLANKS).pattern("s s").pattern("sPs").pattern("P P").unlockedBy("has_cobblestone", has(Items.COBBLESTONE)).save(recipeBuilder);
		
		ShapedRecipeBuilder.shaped(RecipeCategory.MISC, MSItems.ENERGY_CORE.get()).define('u', ExtraForgeTags.Items.URANIUM_CHUNKS).define('c', MSItems.RAW_CRUXITE.get()).pattern("cuc").pattern("ucu").pattern("cuc").unlockedBy("has_raw_uranium", has(MSItems.RAW_URANIUM.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.MISC, MSItems.PLUTONIUM_CORE.get()).define('e', MSItems.ENERGY_CORE.get()).define('i', Items.IRON_INGOT).define('n', Items.IRON_NUGGET).define('p', Items.ENDER_PEARL).pattern("nin").pattern("pep").pattern("nin").unlockedBy("has_energy_core", has(MSItems.ENERGY_CORE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.MISC, MSItems.TEMPLE_SCANNER.get()).define('e', MSItems.ENERGY_CORE.get()).define('c', MSItems.RAW_CRUXITE.get()).define('i', Items.IRON_INGOT).define('r', Items.REDSTONE).define('g', Items.GLASS_PANE).pattern("igi").pattern("iei").pattern("crc").unlockedBy("has_energy_core", has(MSItems.ENERGY_CORE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.MISC, MSItems.BLANK_DISK.get()).define('n', Items.GOLD_NUGGET).define('c', MSItems.RAW_CRUXITE.get()).pattern(" c ").pattern("cnc").pattern(" c ").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.MISC, MSItems.MAILBOX.get()).define('c', Ingredient.of(Tags.Items.CHESTS)).define('r', Ingredient.of(Tags.Items.RODS)).define('i', Items.IRON_INGOT).pattern("ici").pattern(" r ").pattern(" r ").unlockedBy("has_chest", has(Tags.Items.CHESTS)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.MISC, MSItems.CAPTCHA_CARD.get()).define('p', Items.PAPER).define('c', MSItems.RAW_CRUXITE.get()).pattern("ppp").pattern("pcp").pattern("ppp").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		//TODO custom ingredient type to disallow punched cards or cards with items to be used here
		NonMirroredRecipeBuilder.nonMirroredRecipe(RecipeCategory.MISC, MSItems.STACK_MODUS_CARD.get()).define('a', Ingredient.of(MSItems.CAPTCHA_CARD.get())).define('c', MSItems.RAW_CRUXITE.get()).define('C', MSBlocks.CRUXITE_BLOCK.get()).pattern("Cac").unlockedBy("has_card", has(MSItems.CAPTCHA_CARD.get())).save(recipeBuilder);
		NonMirroredRecipeBuilder.nonMirroredRecipe(RecipeCategory.MISC, MSItems.QUEUE_MODUS_CARD.get()).define('a', Ingredient.of(MSItems.CAPTCHA_CARD.get())).define('c', MSItems.RAW_CRUXITE.get()).define('C', MSBlocks.CRUXITE_BLOCK.get()).pattern("caC").unlockedBy("has_card", has(MSItems.CAPTCHA_CARD.get())).save(recipeBuilder);
		
		ShapelessRecipeBuilder.shapeless(RecipeCategory.FOOD, MSItems.BUG_ON_A_STICK.get(), 3).requires(Ingredient.of(Tags.Items.RODS_WOODEN), 3).requires(MSItems.JAR_OF_BUGS.get()).unlockedBy("has_jag_of_bugs", has(MSItems.JAR_OF_BUGS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.FOOD, MSItems.GRUB_SAUCE.get(), 3).define('p', Items.PAPER).define('b', MSTags.Items.BUGS).pattern("bbb").pattern("p p").pattern(" p ").unlockedBy("has_bugs", has(MSTags.Items.BUGS)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.FOOD, MSItems.BUG_MAC.get(), 2).requires(Items.BREAD, 1).requires(MSTags.Items.BUGS).requires(MSTags.Items.BUGS).requires(MSItems.FRENCH_FRY.get(), 4).requires(MSItems.GRUB_SAUCE.get(), 1).unlockedBy("has_grub_sauce", has(MSItems.GRUB_SAUCE.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.FOOD, MSItems.SALAD.get()).requires(Items.BOWL).requires(ItemTags.LEAVES).unlockedBy("has_bowl", has(Items.BOWL)).save(recipeBuilder);
		
		ShapelessRecipeBuilder.shapeless(RecipeCategory.DECORATIONS, MSBlocks.TRANS_PORTALIZER.get()).requires(MSBlocks.TRANSPORTALIZER.get()).requires(Items.PINK_DYE).requires(Items.LIGHT_BLUE_DYE).unlockedBy("has_transportalizer", has(MSBlocks.TRANSPORTALIZER.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.WIRELESS_REDSTONE_TRANSMITTER.get()).define('e', MSItems.PLUTONIUM_CORE.get()).define('i', Items.IRON_INGOT).define('c', Items.COMPARATOR).define('q', MSItems.COMPUTER_PARTS.get()).pattern("cqc").pattern("iei").pattern("iii").unlockedBy("has_plutonium_core", has(MSItems.PLUTONIUM_CORE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.WIRELESS_REDSTONE_RECEIVER.get()).define('c', Items.COMPARATOR).define('i', Items.IRON_INGOT).define('r', Items.REDSTONE).define('q', Items.QUARTZ).define('s', Tags.Items.STONE).pattern("rqr").pattern("scs").pattern("ici").unlockedBy("has_plutonium_core", has(MSItems.PLUTONIUM_CORE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.SOLID_SWITCH.get(), 2).define('g', Items.GLOWSTONE).define('i', Items.IRON_INGOT).define('r', Items.REDSTONE).pattern("iri").pattern("rgr").pattern("iri").unlockedBy("has_glowstone", has(Items.GLOWSTONE)).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.REDSTONE, MSBlocks.VARIABLE_SOLID_SWITCH.get()).requires(MSBlocks.SOLID_SWITCH.get()).requires(Items.COMPARATOR).unlockedBy("has_solid_switch", has(MSBlocks.SOLID_SWITCH.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.REDSTONE, MSBlocks.ONE_SECOND_INTERVAL_TIMED_SOLID_SWITCH.get()).requires(MSBlocks.SOLID_SWITCH.get()).requires(Items.CLOCK).requires(Items.REPEATER).unlockedBy("has_solid_switch", has(MSBlocks.SOLID_SWITCH.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.REDSTONE, MSBlocks.TWO_SECOND_INTERVAL_TIMED_SOLID_SWITCH.get()).requires(MSBlocks.SOLID_SWITCH.get()).requires(Items.CLOCK).requires(Items.REPEATER).requires(Items.REPEATER).unlockedBy("has_solid_switch", has(MSBlocks.SOLID_SWITCH.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.ITEM_MAGNET.get()).define('e', MSItems.PLUTONIUM_CORE.get()).define('i', Items.IRON_INGOT).define('r', Items.REDSTONE).define('g', Items.GLASS_PANE).pattern("iri").pattern("geg").pattern("iri").unlockedBy("has_plutonium_core", has(MSItems.PLUTONIUM_CORE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.REDSTONE_CLOCK.get()).define('c', Items.CLOCK).define('i', Items.IRON_INGOT).define('r', Items.REPEATER).define('q', Items.QUARTZ).define('P', ItemTags.PLANKS).pattern("PiP").pattern("rcr").pattern("PqP").unlockedBy("has_clock", has(Items.CLOCK)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.ROTATOR.get()).define('p', Items.PISTON).define('i', Items.IRON_INGOT).define('r', Items.REDSTONE).pattern("ipi").pattern("rir").pattern("iri").unlockedBy("has_piston", has(Items.PISTON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.TOGGLER.get()).define('t', Items.REPEATER).define('i', Items.IRON_INGOT).define('r', Items.REDSTONE).pattern("iti").pattern("rir").pattern("iri").unlockedBy("has_piston", has(Items.PISTON)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.REMOTE_COMPARATOR.get()).define('e', MSItems.PLUTONIUM_CORE.get()).define('o', Items.OBSERVER).define('i', Items.IRON_INGOT).define('c', Items.COMPARATOR).pattern("ici").pattern("oeo").pattern("iii").unlockedBy("has_plutonium_core", has(MSItems.PLUTONIUM_CORE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.BLOCK_PRESSURE_PLATE.get()).define('p', Items.STONE_PRESSURE_PLATE).define('s', Items.STONE).define('i', Items.IRON_INGOT).define('r', Items.REDSTONE).pattern("sps").pattern("sis").pattern("srs").unlockedBy("has_stone_pressure_plate", has(Items.STONE_PRESSURE_PLATE)).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, MSBlocks.BLOCK_TELEPORTER.get()).define('e', MSItems.PLUTONIUM_CORE.get()).define('i', Items.IRON_INGOT).define('r', Items.REDSTONE).define('q', MSItems.COMPUTER_PARTS.get()).pattern("iei").pattern("iqi").pattern("iri").unlockedBy("has_plutonium_core", has(MSItems.PLUTONIUM_CORE.get())).save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.PERFECTLY_GENERIC_STAIRS, MSBlocks.GENERIC_OBJECT).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.PERFECTLY_GENERIC_SLAB, MSBlocks.GENERIC_OBJECT).group("wooden_slab").save(recipeBuilder);
		//PGO wall has slightly different recipe to not overlap with trapdoors
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PERFECTLY_GENERIC_WALL.get(), 6)
				.define('#', MSBlocks.GENERIC_OBJECT.get()).define('b', MSBlocks.PERFECTLY_GENERIC_BUTTON.get())
				.pattern(" b ")
				.pattern("###")
				.pattern("###")
				.group("stone_wall")
				.unlockedBy("has_generic_object", has(MSBlocks.GENERIC_OBJECT.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PERFECTLY_GENERIC_FENCE.get(), 3).define('#', MSBlocks.GENERIC_OBJECT.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_generic_object", has(MSBlocks.GENERIC_OBJECT.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PERFECTLY_GENERIC_FENCE_GATE.get(), 1).define('#', MSBlocks.GENERIC_OBJECT.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_generic_object", has(MSBlocks.GENERIC_OBJECT.get())).save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.PERFECTLY_GENERIC_BUTTON, MSBlocks.GENERIC_OBJECT).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.PERFECTLY_GENERIC_PRESSURE_PLATE, MSBlocks.GENERIC_OBJECT).group("wooden_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PERFECTLY_GENERIC_DOOR.get(), 3).define('#', MSBlocks.GENERIC_OBJECT.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_generic_object", has(MSBlocks.GENERIC_OBJECT.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PERFECTLY_GENERIC_TRAPDOOR.get(), 2).define('#', MSBlocks.GENERIC_OBJECT.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_generic_object", has(MSBlocks.GENERIC_OBJECT.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.PERFECTLY_GENERIC_SIGN, MSBlocks.GENERIC_OBJECT).save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.PERFECTLY_GENERIC_HANGING_SIGN, MSBlocks.GENERIC_OBJECT).save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.CRUXITE_STAIRS, MSBlocks.CRUXITE_BLOCK).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.CRUXITE_SLAB, MSBlocks.CRUXITE_BLOCK).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.CRUXITE_WALL, MSBlocks.CRUXITE_BLOCK).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.CRUXITE_BUTTON, MSBlocks.CRUXITE_BLOCK)
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.CRUXITE_PRESSURE_PLATE, MSBlocks.CRUXITE_BLOCK).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_DOOR.get(), 3).define('#', MSBlocks.SMOOTH_CRUXITE_BLOCK.get()).pattern("## ").pattern("## ").pattern("## ").group("cruxite_blocks").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_TRAPDOOR.get(), 2).define('#', MSBlocks.SMOOTH_CRUXITE_BLOCK.get()).pattern("###").pattern("###").group("cruxite_blocks").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CRUXITE_BLOCK.get(), 4).define('#', MSBlocks.SMOOTH_CRUXITE_BLOCK.get()).pattern("## ").pattern("## ").group("cruxite_blocks").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_CRUXITE_STAIRS, MSBlocks.POLISHED_CRUXITE_BLOCK).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_CRUXITE_SLAB, MSBlocks.POLISHED_CRUXITE_BLOCK).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.POLISHED_CRUXITE_WALL, MSBlocks.POLISHED_CRUXITE_BLOCK).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_BRICKS.get(), 4).define('#', MSBlocks.CRUXITE_BLOCK.get()).pattern("## ").pattern("## ").group("cruxite_blocks").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.CRUXITE_BRICK_STAIRS, MSBlocks.CRUXITE_BRICKS).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.CRUXITE_BRICK_SLAB, MSBlocks.CRUXITE_BRICKS).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.CRUXITE_BRICK_WALL, MSBlocks.CRUXITE_BRICKS).group("cruxite_blocks")
				.unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SMOOTH_CRUXITE_BLOCK.get(), 0.1f, 200).group("cruxite_blocks").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_CRUXITE_BLOCK.get(), 4).define('#', MSBlocks.CRUXITE_BRICKS.get()).pattern("## ").pattern("## ").group("cruxite_blocks").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_PILLAR.get(), 2).define('#', MSBlocks.SMOOTH_CRUXITE_BLOCK.get()).pattern("#  ").pattern("#  ").group("cruxite_blocks").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_LAMP.get(), 1).define('#', MSItems.RAW_CRUXITE.get()).define('$', MSItems.RAW_URANIUM.get()).define('%', Items.TORCH).pattern("$#$").pattern("#%#").pattern("$#$").group("cruxite_blocks").unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder);
		
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_STAIRS.get(),1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_SLAB.get(),2).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_WALL.get(),1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_wall_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_BRICKS.get(),1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_bricks_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_BRICK_STAIRS.get(),1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_BRICK_SLAB.get(),1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_BRICK_WALL.get(),1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_brick_wall_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_CRUXITE_BLOCK.get(),1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_cruxite_block_from_stonecutting"));
		
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CRUXITE_STAIRS.get(), 1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_cruxite_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CRUXITE_SLAB.get(), 2).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_cruxite_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CRUXITE_WALL.get(), 1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_cruxite_wall_from_stonecutting"));
		
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_BRICK_STAIRS.get(), 1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_brick_stairs_from_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_BRICK_SLAB.get(), 2).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_brick_slab_from_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_BRICK_WALL.get(), 1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_brick_wall_from_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CRUXITE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_CRUXITE_BLOCK.get(), 1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_cruxite_block_from_bricks_stonecutting"));
		
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SMOOTH_CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CRUXITE_BLOCK.get(), 1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_cruxite_block_from_smooth_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SMOOTH_CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRUXITE_PILLAR.get(), 1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cruxite_pillar_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SMOOTH_CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CRUXITE_STAIRS.get(), 1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_cruxite_stairs_from_smooth_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SMOOTH_CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CRUXITE_SLAB.get(), 2).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_cruxite_slab_from_smooth_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SMOOTH_CRUXITE_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CRUXITE_WALL.get(), 1).unlockedBy("has_raw_cruxite", has(MSItems.RAW_CRUXITE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_cruxite_wall_from_smooth_stonecutting"));
		
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.COARSE_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRACKED_COARSE_STONE_BRICKS.get(), 0.1f, 200).unlockedBy("has_coarse_stone_bricks", has(MSBlocks.COARSE_STONE_BRICKS.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.SHADE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SMOOTH_SHADE_STONE.get(), 0.1f, 200).unlockedBy("has_shade_stone", has(MSBlocks.SHADE_STONE.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRACKED_SHADE_BRICKS.get(), 0.1f, 200).unlockedBy("has_shade_bricks", has(MSBlocks.SHADE_BRICKS.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.FROST_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRACKED_FROST_BRICKS.get(), 0.1f, 100).unlockedBy("has_frost_bricks", has(MSBlocks.FROST_BRICKS.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.MYCELIUM_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_STONE.get(), 0.1f, 200).unlockedBy("has_mycelium_cobblestone", has(MSBlocks.MYCELIUM_COBBLESTONE.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.MYCELIUM_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_MYCELIUM_STONE.get(), 0.1f, 200).unlockedBy("has_mycelium_stone", has(MSBlocks.MYCELIUM_STONE.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRACKED_MYCELIUM_BRICKS.get(), 0.1f, 200).unlockedBy("has_mycelium_bricks", has(MSBlocks.MYCELIUM_BRICKS.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.PINK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_PINK_STONE.get(), 0.1F, 200).unlockedBy("has_pink_stone", has(MSBlocks.PINK_STONE.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.PINK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRACKED_PINK_STONE_BRICKS.get(), 0.1F, 200).unlockedBy("has_pink_stone_bricks", has(MSBlocks.PINK_STONE_BRICKS.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.BROWN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_BROWN_STONE.get(), 0.1f, 200).unlockedBy("has_brown_stone", has(MSBlocks.BROWN_STONE.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.BROWN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRACKED_BROWN_STONE_BRICKS.get(), 0.1F, 200).unlockedBy("has_brown_stone_bricks", has(MSBlocks.BROWN_STONE_BRICKS.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSItems.CAKE_MIX.get()), RecipeCategory.FOOD, Items.CAKE, 0.0F, 200).unlockedBy("has_cake_mix", has(MSItems.CAKE_MIX.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cake_from_mix"));
		
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.CRUXITE_ORES), RecipeCategory.MISC, MSItems.RAW_CRUXITE.get(), 0.2F, 200).unlockedBy("has_cruxite_ore", has(MSTags.Items.CRUXITE_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "raw_cruxite_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.CRUXITE_ORES), RecipeCategory.MISC, MSItems.RAW_CRUXITE.get(), 0.2F, 100).unlockedBy("has_cruxite_ore", has(MSTags.Items.CRUXITE_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "raw_cruxite_from_blasting"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.URANIUM_ORES), RecipeCategory.MISC, MSItems.RAW_URANIUM.get(), 0.2F, 200).unlockedBy("has_uranium_ore", has(MSTags.Items.URANIUM_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "raw_uranium_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.URANIUM_ORES), RecipeCategory.MISC, MSItems.RAW_URANIUM.get(), 0.2F, 100).unlockedBy("has_uranium_ore", has(MSTags.Items.URANIUM_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "raw_uranium_from_blasting"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.COAL_ORES), RecipeCategory.MISC, Items.COAL, 0.1F, 200).unlockedBy("has_coal_ore", has(MSTags.Items.COAL_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coal_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.COAL_ORES), RecipeCategory.MISC, Items.COAL, 0.1F, 100).unlockedBy("has_coal_ore", has(MSTags.Items.COAL_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coal_from_blasting"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.IRON_ORES), RecipeCategory.MISC, Items.IRON_INGOT, 0.7F, 200).unlockedBy("has_iron_ore", has(MSTags.Items.IRON_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "iron_ingot_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.IRON_ORES), RecipeCategory.MISC, Items.IRON_INGOT, 0.7F, 100).unlockedBy("has_iron_ore", has(MSTags.Items.IRON_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "iron_ingot_from_blasting"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.GOLD_ORES), RecipeCategory.MISC, Items.GOLD_INGOT, 1.0F, 200).unlockedBy("has_gold_ore", has(MSTags.Items.GOLD_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "gold_ingot_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.GOLD_ORES), RecipeCategory.MISC, Items.GOLD_INGOT, 1.0F, 100).unlockedBy("has_gold_ore", has(MSTags.Items.GOLD_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "gold_ingot_from_blasting"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.REDSTONE_ORES), RecipeCategory.MISC, Items.REDSTONE, 0.7F, 200).unlockedBy("has_redstone_ore", has(MSTags.Items.REDSTONE_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "redstone_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.REDSTONE_ORES), RecipeCategory.MISC, Items.REDSTONE, 0.7F, 100).unlockedBy("has_redstone_ore", has(MSTags.Items.REDSTONE_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "redstone_from_blasting"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.QUARTZ_ORES), RecipeCategory.MISC, Items.QUARTZ, 0.2F, 200).unlockedBy("has_quartz_ore", has(MSTags.Items.QUARTZ_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "quartz_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.QUARTZ_ORES), RecipeCategory.MISC, Items.QUARTZ, 0.2F, 100).unlockedBy("has_quartz_ore", has(MSTags.Items.QUARTZ_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "quartz_from_blasting"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.LAPIS_ORES), RecipeCategory.MISC, Items.LAPIS_LAZULI, 0.2F, 200).unlockedBy("has_lapis_ore", has(MSTags.Items.LAPIS_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "lapis_lazuli_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.LAPIS_ORES), RecipeCategory.MISC, Items.LAPIS_LAZULI, 0.2F, 100).unlockedBy("has_lapis_ore", has(MSTags.Items.LAPIS_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "lapis_lazuli_from_blasting"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.DIAMOND_ORES), RecipeCategory.MISC, Items.DIAMOND, 1.0F, 200).unlockedBy("has_diamond_ore", has(MSTags.Items.DIAMOND_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "diamond_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.DIAMOND_ORES), RecipeCategory.MISC, Items.DIAMOND, 1.0F, 100).unlockedBy("has_diamond_ore", has(MSTags.Items.DIAMOND_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "diamond_from_blasting"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSTags.Items.EMERALD_ORES), RecipeCategory.MISC, Items.EMERALD, 1.0F, 200).unlockedBy("has_emerald_ore", has(MSTags.Items.EMERALD_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "emerald_from_smelting"));
		SimpleCookingRecipeBuilder.blasting(Ingredient.of(MSTags.Items.EMERALD_ORES), RecipeCategory.MISC, Items.EMERALD, 1.0F, 100).unlockedBy("has_emerald_ore", has(MSTags.Items.EMERALD_ORES)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "emerald_from_blasting"));
		
		
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.CRUXITE_DOWEL.get()), RecipeCategory.MISC, MSItems.RAW_CRUXITE.get(), 0.0F, 200).unlockedBy("has_cruxite_dowel", has(MSBlocks.CRUXITE_DOWEL.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "raw_cruxite_from_dowel"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.GOLD_SEEDS.get()), RecipeCategory.MISC, Items.GOLD_NUGGET, 0.1F, 200).unlockedBy("has_gold_seeds", has(MSBlocks.GOLD_SEEDS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "gold_nugget_from_seeds"));
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.WOODEN_CACTUS.get()), RecipeCategory.MISC, Items.CHARCOAL, 0.15F, 200).unlockedBy("has_wooden_cactus", has(MSBlocks.WOODEN_CACTUS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "charcoal_from_wooden_cactus"));
		
		cookingRecipesFor(recipeBuilder, Ingredient.of(MSItems.BEEF_SWORD.get()), RecipeCategory.COMBAT, MSItems.STEAK_SWORD.get(), 0.5F, "has_beef_sword", has(MSItems.BEEF_SWORD.get()));
		
		IrradiatingRecipeBuilder.irradiating(Ingredient.of(Items.BEEF), MSItems.IRRADIATED_STEAK.get(), 0.2F, 20).save(recipeBuilder);
		IrradiatingRecipeBuilder.irradiating(Ingredient.of(MSItems.BEEF_SWORD.get()), MSItems.IRRADIATED_STEAK_SWORD.get(), 0.35F, 20).save(recipeBuilder);
		IrradiatingRecipeBuilder.irradiating(Ingredient.of(Items.STICK), MSItems.URANIUM_POWERED_STICK.get(), 0.1F, 100).save(recipeBuilder);
		IrradiatingRecipeBuilder.irradiating(Ingredient.of(Items.MUSHROOM_STEW), Items.SLIME_BALL, 0.1F, 20).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "slimeball_from_irradiating"));
		IrradiatingFallbackRecipeBuilder.fallback(RecipeType.SMOKING).build(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "irradiate_smoking_fallback"));
		
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_COARSE_STONE.get()).unlockedBy("has_coarse_stone", has(MSBlocks.COARSE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_coarse_stone_from_coarse_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_BRICKS.get()).unlockedBy("has_coarse_stone", has(MSBlocks.COARSE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coarse_stone_bricks_from_coarse_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_COARSE_STONE_BRICKS.get()).unlockedBy("has_coarse_stone_bricks", has(MSBlocks.COARSE_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_coarse_stone_bricks_from_coarse_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_COLUMN.get()).unlockedBy("has_coarse_stone_bricks", has(MSBlocks.COARSE_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coarse_stone_column_from_coarse_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_STAIRS.get()).unlockedBy("has_coarse_stone", has(MSBlocks.COARSE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coarse_stone_stairs_from_coarse_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_SLAB.get(), 2).unlockedBy("has_coarse_stone", has(MSBlocks.COARSE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coarse_stone_slab_from_coarse_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_BRICK_STAIRS.get()).unlockedBy("has_coarse_stone_bricks", has(MSBlocks.COARSE_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coarse_stone_brick_stairs_from_coarse_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_coarse_stone_bricks", has(MSBlocks.COARSE_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coarse_stone_brick_slab_from_coarse_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SHADE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_BRICKS.get()).unlockedBy("has_shade_stone", has(MSBlocks.SHADE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "shade_bricks_from_shade_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SHADE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_STAIRS.get()).unlockedBy("has_shade_stone", has(MSBlocks.SHADE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "shade_stairs_from_shade_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SHADE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_SLAB.get(), 2).unlockedBy("has_shade_stone", has(MSBlocks.SHADE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "shade_slab_from_shade_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_BRICK_STAIRS.get()).unlockedBy("has_shade_bricks", has(MSBlocks.SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "shade_brick_stairs_from_shade_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_BRICK_SLAB.get(), 2).unlockedBy("has_shade_bricks", has(MSBlocks.SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "shade_brick_slab_from_shade_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_SHADE_BRICKS.get()).unlockedBy("has_shade_bricks", has(MSBlocks.SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_shade_bricks_from_shade_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_COLUMN.get()).unlockedBy("has_shade_bricks", has(MSBlocks.SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "shade_column_from_shade_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_TILE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_FROST_TILE.get()).unlockedBy("has_frost_tile", has(MSBlocks.FROST_TILE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_frost_tile_from_frost_tile_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_TILE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_BRICKS.get()).unlockedBy("has_frost_tile", has(MSBlocks.FROST_TILE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "frost_bricks_from_frost_tile_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_FROST_BRICKS.get()).unlockedBy("has_frost_bricks", has(MSBlocks.FROST_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_frost_bricks_from_frost_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_COLUMN.get()).unlockedBy("has_frost_bricks", has(MSBlocks.FROST_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "frost_column_from_frost_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_TILE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_TILE_STAIRS.get()).unlockedBy("has_frost_tile", has(MSBlocks.FROST_TILE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "frost_tile_stairs_from_frost_tile_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_TILE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_TILE_SLAB.get(), 2).unlockedBy("has_frost_tile", has(MSBlocks.FROST_TILE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "frost_tile_slab_from_frost_tile_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_BRICK_STAIRS.get()).unlockedBy("has_frost_bricks", has(MSBlocks.FROST_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "frost_brick_stairs_from_frost_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_BRICK_SLAB.get(), 2).unlockedBy("has_frost_bricks", has(MSBlocks.FROST_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "frost_brick_slab_from_frost_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_BRICKS.get()).unlockedBy("has_mycelium_stone", has(MSBlocks.MYCELIUM_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_bricks_from_mycelium_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_MYCELIUM_BRICKS.get()).unlockedBy("has_mycelium_bricks", has(MSBlocks.MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_mycelium_bricks_from_mycelium_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_COLUMN.get()).unlockedBy("has_mycelium_bricks", has(MSBlocks.MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_column_from_mycelium_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_STAIRS.get()).unlockedBy("has_mycelium_stone", has(MSBlocks.MYCELIUM_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_stairs_from_mycelium_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_BRICK_STAIRS.get()).unlockedBy("has_mycelium_bricks", has(MSBlocks.MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_brick_stairs_from_mycelium_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_SLAB.get(), 2).unlockedBy("has_mycelium_stone", has(MSBlocks.MYCELIUM_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_slab_from_mycelium_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_BRICK_SLAB.get(), 2).unlockedBy("has_mycelium_bricks", has(MSBlocks.MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_brick_slab_from_mycelium_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_BRICKS.get()).unlockedBy("has_black_stone", has(MSBlocks.BLACK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_stone_bricks_from_black_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_BLACK_STONE_BRICKS.get()).unlockedBy("has_black_stone_bricks", has(MSBlocks.BLACK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_black_stone_bricks_from_black_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_COLUMN.get()).unlockedBy("has_black_stone_bricks", has(MSBlocks.BLACK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_stone_column_from_black_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_STAIRS.get()).unlockedBy("has_black_stone", has(MSBlocks.BLACK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_stone_stairs_from_black_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_BRICK_STAIRS.get()).unlockedBy("has_black_stone_bricks", has(MSBlocks.BLACK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_stone_brick_stairs_from_black_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_SLAB.get(), 2).unlockedBy("has_black_stone", has(MSBlocks.BLACK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_stone_slab_from_black_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_black_stone_bricks", has(MSBlocks.BLACK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_stone_brick_slab_from_black_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_BLACK_STONE_BRICK_STAIRS.get()).unlockedBy("has_magmatic_black_stone_bricks", has(MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "magmatic_black_stone_brick_stairs_from_magmatic_black_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_BLACK_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_magmatic_black_stone_bricks", has(MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "magmatic_black_stone_brick_slab_from_magmatic_black_stone_bricks_stonecutting"));
		
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.IGNEOUS_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_BRICKS.get()).unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_igneous_bricks_from_igneous_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_IGNEOUS_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_IGNEOUS_STONE.get()).unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_igneous_stone_from_polished_igneous_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_IGNEOUS_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_PILLAR.get()).unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_igneous_pillar_from_polished_igneous_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.IGNEOUS_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.IGNEOUS_STONE_STAIRS.get()).unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "igneous_stone_stairs_from_igneous_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_IGNEOUS_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_BRICK_STAIRS.get()).unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_igneous_brick_stairs_from_polished_igneous_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.IGNEOUS_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.IGNEOUS_STONE_SLAB.get(), 2).unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "igneous_stone_slab_from_igneous_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_IGNEOUS_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_BRICK_SLAB.get(), 2).unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_igneous_brick_slab_from_polished_igneous_bricks_stonecutting"));
		
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_STAIRS.get()).unlockedBy("has_chalk", has(MSBlocks.CHALK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chalk_stairs_from_chalk_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_SLAB.get(), 2).unlockedBy("has_chalk", has(MSBlocks.CHALK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chalk_slab_from_chalk_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CHALK.get()).unlockedBy("has_chalk", has(MSBlocks.CHALK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_chalk_from_chalk_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_BRICKS.get()).unlockedBy("has_chalk", has(MSBlocks.CHALK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chalk_bricks_from_chalk_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_CHALK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_BRICKS.get()).unlockedBy("has_polished_chalk", has(MSBlocks.POLISHED_CHALK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chalk_bricks_from_polished_chalk_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_CHALK_BRICKS.get()).unlockedBy("has_chalk_bricks", has(MSBlocks.CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_chalk_bricks_from_chalk_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_COLUMN.get()).unlockedBy("has_chalk_bricks", has(MSBlocks.CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chalk_column_from_chalk_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_BRICK_STAIRS.get()).unlockedBy("has_chalk_bricks", has(MSBlocks.CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chalk_brick_stairs_from_chalk_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_BRICK_SLAB.get(), 2).unlockedBy("has_chalk_bricks", has(MSBlocks.CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chalk_brick_slab_from_chalk_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PINK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_BRICKS.get()).unlockedBy("has_pink_stone", has(MSBlocks.PINK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pink_stone_bricks_from_pink_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PINK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_PINK_STONE_BRICKS.get()).unlockedBy("has_pink_stone_bricks", has(MSBlocks.PINK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_pink_stone_bricks_from_pink_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PINK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_COLUMN.get()).unlockedBy("has_pink_stone_bricks", has(MSBlocks.PINK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pink_stone_column_from_pink_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PINK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_STAIRS.get()).unlockedBy("has_pink_stone", has(MSBlocks.PINK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pink_stone_stairs_from_pink_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PINK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_SLAB.get(), 2).unlockedBy("has_pink_stone", has(MSBlocks.PINK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pink_stone_slab_from_pink_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PINK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_BRICK_STAIRS.get()).unlockedBy("has_pink_stone_bricks", has(MSBlocks.PINK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pink_stone_brick_stairs_from_pink_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PINK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_pink_stone_bricks", has(MSBlocks.PINK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pink_stone_brick_slab_from_pink_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BROWN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_BRICKS.get()).unlockedBy("has_brown_stone", has(MSBlocks.BROWN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "brown_stone_bricks_from_brown_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_BROWN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_BRICKS.get()).unlockedBy("has_polished_brown_stone", has(MSBlocks.POLISHED_BROWN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "brown_stone_bricks_from_polished_brown_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BROWN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_COLUMN.get()).unlockedBy("has_brown_stone_bricks", has(MSBlocks.BROWN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "brown_stone_column_from_brown_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BROWN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_STAIRS.get()).unlockedBy("has_brown_stone", has(MSBlocks.BROWN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "brown_stone_stairs_from_brown_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BROWN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_SLAB.get(), 2).unlockedBy("has_brown_stone", has(MSBlocks.BROWN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "brown_stone_slab_from_brown_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BROWN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_BRICK_STAIRS.get()).unlockedBy("has_brown_stone_bricks", has(MSBlocks.BROWN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "brown_stone_brick_stairs_from_brown_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BROWN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_brown_stone_bricks", has(MSBlocks.BROWN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "brown_stone_brick_slab_from_brown_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_GREEN_STONE.get()).unlockedBy("has_green_stone", has(MSBlocks.GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_green_stone_from_green_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_BRICKS.get()).unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "green_stone_bricks_from_polished_green_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS.get()).unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "horizontal_green_stone_bricks_from_polished_green_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.VERTICAL_GREEN_STONE_BRICKS.get()).unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "vertical_green_stone_bricks_from_polished_green_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_GREEN_STONE_BRICKS.get()).unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_green_stone_bricks_from_polished_green_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_COLUMN.get()).unlockedBy("has_green_stone_bricks", has(MSBlocks.GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "green_stone_column_from_green_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_BRICK_TRIM.get()).unlockedBy("has_green_stone_bricks", has(MSBlocks.GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "green_stone_brick_trim_from_green_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_STAIRS.get()).unlockedBy("has_green_stone", has(MSBlocks.GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "green_stone_stairs_from_green_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_SLAB.get(), 2).unlockedBy("has_green_stone", has(MSBlocks.GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "green_stone_slab_from_green_stone_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_BRICK_STAIRS.get()).unlockedBy("has_green_stone_bricks", has(MSBlocks.GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "green_stone_brick_stairs_from_green_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_green_stone_bricks", has(MSBlocks.GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "green_stone_brick_slab_from_green_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.LACQUERED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_LOG.get()).unlockedBy("has_lacquered_uncarved_wood", has(MSBlocks.LACQUERED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "carved_log_from_lacquered_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.LACQUERED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_WOODEN_LEAF.get(), 4).unlockedBy("has_lacquered_uncarved_wood", has(MSBlocks.LACQUERED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "carved_wooden_leaf_from_lacquered_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_HEAVY_PLANKS.get()).unlockedBy("has_uncarved_wood", has(MSBlocks.UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "carved_heavy_planks_from_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_PLANKS.get()).unlockedBy("has_uncarved_wood", has(MSBlocks.UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "carved_planks_from_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_UNCARVED_WOOD.get()).unlockedBy("has_uncarved_wood", has(MSBlocks.UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_uncarved_wood_from_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_KNOTTED_WOOD.get()).unlockedBy("has_uncarved_wood", has(MSBlocks.UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "carved_knotted_wood_from_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_BUSH.get(), 4).unlockedBy("has_uncarved_wood", has(MSBlocks.UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "carved_bush_from_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.TREATED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_HEAVY_PLANKS.get()).unlockedBy("has_treated_uncarved_wood", has(MSBlocks.TREATED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "treated_heavy_planks_from_treated_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.TREATED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_PLANKS.get()).unlockedBy("has_treated_uncarved_wood", has(MSBlocks.TREATED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "treated_planks_from_treated_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.TREATED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_TREATED_UNCARVED_WOOD.get()).unlockedBy("has_treated_uncarved_wood", has(MSBlocks.TREATED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_treated_uncarved_wood_from_treated_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.TREATED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_CARVED_KNOTTED_WOOD.get()).unlockedBy("has_treated_uncarved_wood", has(MSBlocks.TREATED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "treated_carved_knotted_wood_from_treated_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.LACQUERED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_HEAVY_PLANKS.get()).unlockedBy("has_lacquered_uncarved_wood", has(MSBlocks.LACQUERED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "lacquered_heavy_planks_from_lacquered_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.LACQUERED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_PLANKS.get()).unlockedBy("has_lacquered_uncarved_wood", has(MSBlocks.LACQUERED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "lacquered_planks_from_lacquered_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.LACQUERED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_LACQUERED_UNCARVED_WOOD.get()).unlockedBy("has_lacquered_uncarved_wood", has(MSBlocks.LACQUERED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_lacquered_uncarved_wood_from_lacquered_uncarved_wood"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.LACQUERED_UNCARVED_WOOD.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_CARVED_KNOTTED_WOOD.get()).unlockedBy("has_lacquered_uncarved_wood", has(MSBlocks.LACQUERED_UNCARVED_WOOD.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "lacquered_carved_knotted_wood_from_lacquered_uncarved_wood"));
		
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(Items.STONE_BRICKS), RecipeCategory.BUILDING_BLOCKS, MSBlocks.DECREPIT_STONE_BRICKS.get()).unlockedBy("has_stone_bricks", has(Items.STONE_BRICKS)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "decrepit_stone_bricks_from_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(Items.STONE_BRICKS), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUSHABLE_BLOCK.get()).unlockedBy("has_stone_bricks", has(Items.STONE_BRICKS)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pushable_block_from_stone_bricks_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(Items.STONE), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FRAGILE_STONE.get()).unlockedBy("has_stone", has(Items.STONE)).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "fragile_stone_from_stone_stonecutting"));
		
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GENERIC_OBJECT.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PERFECTLY_GENERIC_STAIRS.get()).unlockedBy("has_generic_object", has(MSBlocks.GENERIC_OBJECT.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "generic_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GENERIC_OBJECT.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PERFECTLY_GENERIC_SLAB.get(), 2).unlockedBy("has_generic_object", has(MSBlocks.GENERIC_OBJECT.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "generic_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GENERIC_OBJECT.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PERFECTLY_GENERIC_WALL.get(), 2).unlockedBy("has_generic_object", has(MSBlocks.GENERIC_OBJECT.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "generic_wall_from_stonecutting"));
		
		
		CommonRecipes.stairsRecipe(MSBlocks.URANIUM_STAIRS, MSBlocks.URANIUM_BLOCK).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.URANIUM_SLAB, MSBlocks.URANIUM_BLOCK).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.URANIUM_WALL, MSBlocks.URANIUM_BLOCK).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.URANIUM_BUTTON, MSItems.RAW_URANIUM).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.URANIUM_PRESSURE_PLATE, MSBlocks.URANIUM_BLOCK).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.URANIUM_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.URANIUM_STAIRS.get()).unlockedBy("has_uranium_block", has(MSBlocks.URANIUM_BLOCK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "uranium_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.URANIUM_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.URANIUM_SLAB.get(), 2).unlockedBy("has_uranium_block", has(MSBlocks.URANIUM_BLOCK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "uranium_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.URANIUM_BLOCK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.URANIUM_WALL.get(), 2).unlockedBy("has_uranium_block", has(MSBlocks.URANIUM_BLOCK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "uranium_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.COARSE_STONE_WALL, MSBlocks.COARSE_STONE).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.COARSE_STONE_BUTTON, MSBlocks.COARSE_STONE).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.COARSE_STONE_PRESSURE_PLATE, MSBlocks.COARSE_STONE).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_WALL.get(), 2).unlockedBy("has_coarse_stone", has(MSBlocks.COARSE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coarse_stone_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.COARSE_STONE_BRICK_WALL, MSBlocks.COARSE_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.COARSE_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.COARSE_STONE_BRICK_WALL.get(), 2).unlockedBy("has_coarse_stone_bricks", has(MSBlocks.COARSE_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "coarse_stone_brick_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.SHADE_WALL, MSBlocks.SHADE_STONE).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.SHADE_BUTTON, MSBlocks.SHADE_STONE).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.SHADE_PRESSURE_PLATE, MSBlocks.SHADE_STONE).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SHADE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_WALL.get(), 2).unlockedBy("has_shade_stone", has(MSBlocks.SHADE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "shade_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.SHADE_BRICK_WALL, MSBlocks.SHADE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADE_BRICK_WALL.get(), 2).unlockedBy("has_shade_bricks", has(MSBlocks.SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "shade_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.SMOOTH_SHADE_STONE_STAIRS, MSBlocks.SMOOTH_SHADE_STONE).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.SMOOTH_SHADE_STONE_SLAB, MSBlocks.SMOOTH_SHADE_STONE).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.SMOOTH_SHADE_STONE_WALL, MSBlocks.SMOOTH_SHADE_STONE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SMOOTH_SHADE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SMOOTH_SHADE_STONE_STAIRS.get()).unlockedBy("has_smooth_shade_stone", has(MSBlocks.SMOOTH_SHADE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "smooth_shade_stone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SMOOTH_SHADE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SMOOTH_SHADE_STONE_SLAB.get(), 2).unlockedBy("has_smooth_shade_stone", has(MSBlocks.SMOOTH_SHADE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "smooth_shade_stone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.SMOOTH_SHADE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.SMOOTH_SHADE_STONE_WALL.get(), 2).unlockedBy("has_smooth_shade_stone", has(MSBlocks.SMOOTH_SHADE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "smooth_shade_stone_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.MOSSY_SHADE_BRICK_STAIRS, MSBlocks.MOSSY_SHADE_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.MOSSY_SHADE_BRICK_SLAB, MSBlocks.MOSSY_SHADE_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.MOSSY_SHADE_BRICK_WALL, MSBlocks.MOSSY_SHADE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_SHADE_BRICK_STAIRS.get()).unlockedBy("has_mossy_shade_bricks", has(MSBlocks.MOSSY_SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_shade_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_SHADE_BRICK_SLAB.get(), 2).unlockedBy("has_mossy_shade_bricks", has(MSBlocks.MOSSY_SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_shade_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_SHADE_BRICK_WALL.get(), 2).unlockedBy("has_mossy_shade_bricks", has(MSBlocks.MOSSY_SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_shade_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.BLOOD_SHADE_BRICK_STAIRS, MSBlocks.BLOOD_SHADE_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.BLOOD_SHADE_BRICK_SLAB, MSBlocks.BLOOD_SHADE_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.BLOOD_SHADE_BRICK_WALL, MSBlocks.BLOOD_SHADE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLOOD_SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLOOD_SHADE_BRICK_STAIRS.get()).unlockedBy("has_blood_shade_bricks", has(MSBlocks.BLOOD_SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "blood_shade_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLOOD_SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLOOD_SHADE_BRICK_SLAB.get(), 2).unlockedBy("has_blood_shade_bricks", has(MSBlocks.BLOOD_SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "blood_shade_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLOOD_SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLOOD_SHADE_BRICK_WALL.get(), 2).unlockedBy("has_blood_shade_bricks", has(MSBlocks.BLOOD_SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "blood_shade_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.TAR_SHADE_BRICK_STAIRS, MSBlocks.TAR_SHADE_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.TAR_SHADE_BRICK_SLAB, MSBlocks.TAR_SHADE_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.TAR_SHADE_BRICK_WALL, MSBlocks.TAR_SHADE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.TAR_SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.TAR_SHADE_BRICK_STAIRS.get()).unlockedBy("has_tar_shade_bricks", has(MSBlocks.TAR_SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "tar_shade_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.TAR_SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.TAR_SHADE_BRICK_SLAB.get(), 2).unlockedBy("has_tar_shade_bricks", has(MSBlocks.TAR_SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "tar_shade_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.TAR_SHADE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.TAR_SHADE_BRICK_WALL.get(), 2).unlockedBy("has_tar_shade_bricks", has(MSBlocks.TAR_SHADE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "tar_shade_brick_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.FROST_TILE_WALL, MSBlocks.FROST_TILE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_TILE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_TILE_WALL.get(), 2).unlockedBy("has_frost_tile", has(MSBlocks.FROST_TILE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "frost_tile_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.FROST_BRICK_WALL, MSBlocks.FROST_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FROST_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_BRICK_WALL.get(), 2).unlockedBy("has_frost_bricks", has(MSBlocks.FROST_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "frost_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.FLOWERY_FROST_BRICK_STAIRS, MSBlocks.FLOWERY_FROST_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.FLOWERY_FROST_BRICK_SLAB, MSBlocks.FLOWERY_FROST_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.FLOWERY_FROST_BRICK_WALL, MSBlocks.FLOWERY_FROST_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_FROST_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_FROST_BRICK_STAIRS.get()).unlockedBy("has_flowery_frost_bricks", has(MSBlocks.FLOWERY_FROST_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_frost_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_FROST_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_FROST_BRICK_SLAB.get(), 2).unlockedBy("has_flowery_frost_bricks", has(MSBlocks.FLOWERY_FROST_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_frost_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_FROST_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_FROST_BRICK_WALL.get(), 2).unlockedBy("has_flowery_frost_bricks", has(MSBlocks.FLOWERY_FROST_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_frost_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.CAST_IRON_STAIRS, MSBlocks.CAST_IRON).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.CAST_IRON_SLAB, MSBlocks.CAST_IRON).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.CAST_IRON_WALL, MSBlocks.CAST_IRON).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.CAST_IRON_BUTTON, MSBlocks.CAST_IRON).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.CAST_IRON_PRESSURE_PLATE, MSBlocks.CAST_IRON).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_STAIRS.get()).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_SLAB.get(), 2).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_WALL.get(), 2).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_wall_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_FRAME.get(), 1).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_frame_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_CAST_IRON.get()).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chiseled_cast_iron_from_cast_iron_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_TILE.get()).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_tile_from_cast_iron_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_TILE_STAIRS.get()).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_tile_stairs_from_cast_iron_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_TILE_SLAB.get(), 2).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_tile_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_SHEET.get()).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_sheet_from_cast_iron_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_SHEET_STAIRS.get()).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_sheet_stairs_from_cast_iron_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CAST_IRON.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_SHEET_SLAB.get(), 2).unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "cast_iron_sheet_slab_from_stonecutting"));
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_TILE.get(), 4).define('#', MSBlocks.CAST_IRON.get()).pattern("##").pattern("##").unlockedBy("has_cast_iron", has(MSBlocks.CAST_IRON.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_TILE_STAIRS.get(), 4).define('#', MSBlocks.CAST_IRON_TILE.get()).pattern("#  ").pattern("## ").pattern("###").unlockedBy("has_cast_iron_tile", has(MSBlocks.CAST_IRON_TILE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CAST_IRON_TILE_SLAB.get(), 6).define('#', MSBlocks.CAST_IRON_TILE.get()).pattern("###").group("wooden_slab").unlockedBy("has_cast_iron_tile", has(MSBlocks.CAST_IRON_TILE.get())).save(recipeBuilder);
		
		CommonRecipes.wallRecipe(MSBlocks.MYCELIUM_STONE_WALL, MSBlocks.MYCELIUM_STONE).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.MYCELIUM_STONE_BUTTON, MSBlocks.MYCELIUM_STONE).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.MYCELIUM_STONE_PRESSURE_PLATE, MSBlocks.MYCELIUM_STONE).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_STONE_WALL.get(), 2).unlockedBy("has_mycelium_stone", has(MSBlocks.MYCELIUM_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_stone_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.MYCELIUM_COBBLESTONE_STAIRS, MSBlocks.MYCELIUM_COBBLESTONE).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.MYCELIUM_COBBLESTONE_SLAB, MSBlocks.MYCELIUM_COBBLESTONE).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.MYCELIUM_COBBLESTONE_WALL, MSBlocks.MYCELIUM_COBBLESTONE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_COBBLESTONE_STAIRS.get()).unlockedBy("has_mycelium_cobblestone", has(MSBlocks.MYCELIUM_COBBLESTONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_cobblestone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_COBBLESTONE_SLAB.get(), 2).unlockedBy("has_mycelium_cobblestone", has(MSBlocks.MYCELIUM_COBBLESTONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_cobblestone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_COBBLESTONE_WALL.get(), 2).unlockedBy("has_mycelium_cobblestone", has(MSBlocks.MYCELIUM_COBBLESTONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_cobblestone_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_MYCELIUM_STONE_STAIRS, MSBlocks.POLISHED_MYCELIUM_STONE).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_MYCELIUM_STONE_SLAB, MSBlocks.POLISHED_MYCELIUM_STONE).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.POLISHED_MYCELIUM_STONE_WALL, MSBlocks.POLISHED_MYCELIUM_STONE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_MYCELIUM_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_MYCELIUM_STONE_STAIRS.get()).unlockedBy("has_polished_mycelium_stone", has(MSBlocks.POLISHED_MYCELIUM_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_mycelium_stone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_MYCELIUM_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_MYCELIUM_STONE_SLAB.get(), 2).unlockedBy("has_polished_mycelium_stone", has(MSBlocks.POLISHED_MYCELIUM_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_mycelium_stone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_MYCELIUM_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_MYCELIUM_STONE_WALL.get(), 2).unlockedBy("has_polished_mycelium_stone", has(MSBlocks.POLISHED_MYCELIUM_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_mycelium_stone_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.MYCELIUM_BRICK_WALL, MSBlocks.MYCELIUM_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MYCELIUM_BRICK_WALL.get(), 2).unlockedBy("has_mycelium_bricks", has(MSBlocks.MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mycelium_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.MOSSY_MYCELIUM_BRICK_STAIRS, MSBlocks.MOSSY_MYCELIUM_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.MOSSY_MYCELIUM_BRICK_SLAB, MSBlocks.MOSSY_MYCELIUM_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.MOSSY_MYCELIUM_BRICK_WALL, MSBlocks.MOSSY_MYCELIUM_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_MYCELIUM_BRICK_STAIRS.get()).unlockedBy("has_mossy_mycelium_bricks", has(MSBlocks.MOSSY_MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_mycelium_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_MYCELIUM_BRICK_SLAB.get(), 2).unlockedBy("has_mossy_mycelium_bricks", has(MSBlocks.MOSSY_MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_mycelium_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_MYCELIUM_BRICK_WALL.get(), 2).unlockedBy("has_mossy_mycelium_bricks", has(MSBlocks.MOSSY_MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_mycelium_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.FLOWERY_MYCELIUM_BRICK_STAIRS, MSBlocks.FLOWERY_MYCELIUM_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.FLOWERY_MYCELIUM_BRICK_SLAB, MSBlocks.FLOWERY_MYCELIUM_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.FLOWERY_MYCELIUM_BRICK_WALL, MSBlocks.FLOWERY_MYCELIUM_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_MYCELIUM_BRICK_STAIRS.get()).unlockedBy("has_flowery_mycelium_bricks", has(MSBlocks.FLOWERY_MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_mycelium_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_MYCELIUM_BRICK_SLAB.get(), 2).unlockedBy("has_flowery_mycelium_bricks", has(MSBlocks.FLOWERY_MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_mycelium_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_MYCELIUM_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_MYCELIUM_BRICK_WALL.get(), 2).unlockedBy("has_flowery_mycelium_bricks", has(MSBlocks.FLOWERY_MYCELIUM_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_mycelium_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.BLACK_STONE_STAIRS, MSBlocks.BLACK_STONE).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.BLACK_STONE_SLAB, MSBlocks.BLACK_STONE).save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.BLACK_STONE_WALL, MSBlocks.BLACK_STONE).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.BLACK_STONE_BUTTON, MSBlocks.BLACK_STONE).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.BLACK_STONE_PRESSURE_PLATE, MSBlocks.BLACK_STONE).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_WALL.get(), 2).unlockedBy("has_black_stone", has(MSBlocks.BLACK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_stone_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.BLACK_COBBLESTONE_STAIRS, MSBlocks.BLACK_COBBLESTONE).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.BLACK_COBBLESTONE_SLAB, MSBlocks.BLACK_COBBLESTONE).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.BLACK_COBBLESTONE_WALL, MSBlocks.BLACK_COBBLESTONE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_COBBLESTONE_STAIRS.get()).unlockedBy("has_black_cobblestone", has(MSBlocks.BLACK_COBBLESTONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_cobblestone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_COBBLESTONE_SLAB.get(), 2).unlockedBy("has_black_cobblestone", has(MSBlocks.BLACK_COBBLESTONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_cobblestone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_COBBLESTONE_WALL.get(), 2).unlockedBy("has_black_cobblestone", has(MSBlocks.BLACK_COBBLESTONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_cobblestone_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_BLACK_STONE_STAIRS, MSBlocks.POLISHED_BLACK_STONE).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_BLACK_STONE_SLAB, MSBlocks.POLISHED_BLACK_STONE).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.POLISHED_BLACK_STONE_WALL, MSBlocks.POLISHED_BLACK_STONE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_BLACK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_BLACK_STONE_STAIRS.get()).unlockedBy("has_polished_black_stone", has(MSBlocks.POLISHED_BLACK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_black_stone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_BLACK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_BLACK_STONE_SLAB.get(), 2).unlockedBy("has_polished_black_stone", has(MSBlocks.POLISHED_BLACK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_black_stone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_BLACK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_BLACK_STONE_WALL.get(), 2).unlockedBy("has_polished_black_stone", has(MSBlocks.POLISHED_BLACK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_black_stone_wall_from_stonecutting"));
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_BRICKS.get(), 4).define('#', MSBlocks.BLACK_STONE.get()).pattern("##").pattern("##").unlockedBy("has_black_stone", has(MSBlocks.BLACK_STONE.get())).save(recipeBuilder);
		CommonRecipes.stairsRecipe(MSBlocks.BLACK_STONE_BRICK_STAIRS, MSBlocks.BLACK_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.BLACK_STONE_BRICK_SLAB, MSBlocks.BLACK_STONE_BRICKS).save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.BLACK_STONE_BRICK_WALL, MSBlocks.BLACK_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BLACK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_BRICK_WALL.get(), 2).unlockedBy("has_black_stone_bricks", has(MSBlocks.BLACK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "black_stone_brick_wall_from_stonecutting"));
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_BLACK_STONE_BRICKS.get()).define('#', MSBlocks.BLACK_STONE_BRICK_SLAB.get()).pattern("#").pattern("#").unlockedBy("has_black_stone_brick_slab", has(MSBlocks.BLACK_STONE_BRICK_SLAB.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE_COLUMN.get(), 3).define('#', MSBlocks.BLACK_STONE_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_black_stone_bricks", has(MSBlocks.BLACK_STONE_BRICKS.get())).save(recipeBuilder);
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get(), 4).define('#', MSBlocks.BLACK_STONE_BRICKS.get()).define('M', Items.MAGMA_BLOCK).pattern("#M").pattern("M#").unlockedBy("has_black_stone_bricks", has(MSBlocks.BLACK_STONE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_BLACK_STONE_BRICK_WALL.get(), 6).define('#', MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get()).pattern("###").pattern("###").group("stone_wall").unlockedBy("has_magmatic_black_stone_bricks", has(MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get())).save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_BLACK_STONE_BRICK_WALL.get(), 2).unlockedBy("has_magmatic_black_stone_bricks", has(MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "magmatic_black_stone_brick_wall_from_stonecutting"));
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_BLACK_STONE_BRICK_STAIRS.get(), 4).define('#', MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get()).pattern("#  ").pattern("## ").pattern("###").unlockedBy("has_magmatic_black_stone_bricks", has(MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_BLACK_STONE_BRICK_SLAB.get(), 6).define('#', MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get()).pattern("###").unlockedBy("has_magmatic_black_stone_bricks", has(MSBlocks.MAGMATIC_BLACK_STONE_BRICKS.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.BLACK_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BLACK_STONE.get(), 0.1f, 200).unlockedBy("has_black_cobblestone", has(MSBlocks.BLACK_COBBLESTONE.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.BLACK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_BLACK_STONE.get(), 0.1f, 200).unlockedBy("has_black_stone", has(MSBlocks.BLACK_STONE.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.BLACK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRACKED_BLACK_STONE_BRICKS.get(), 0.1f, 200).unlockedBy("has_black_stone_bricks", has(MSBlocks.BLACK_STONE_BRICKS.get())).save(recipeBuilder);
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.IGNEOUS_STONE_WALL.get(), 6).define('#', MSBlocks.IGNEOUS_STONE.get()).pattern("###").pattern("###").group("stone_wall").unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.IGNEOUS_STONE_STAIRS.get(), 4).define('#', MSBlocks.IGNEOUS_STONE.get()).pattern("#  ").pattern("## ").pattern("###").unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.IGNEOUS_STONE_SLAB.get(), 6).define('#', MSBlocks.IGNEOUS_STONE.get()).pattern("###").unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.IGNEOUS_STONE_BUTTON.get()).requires(MSBlocks.IGNEOUS_STONE.get()).unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.IGNEOUS_STONE_PRESSURE_PLATE.get(), 1).define('#', MSBlocks.IGNEOUS_STONE.get()).pattern("##").group("stone_pressure_plate").unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.IGNEOUS_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.IGNEOUS_STONE_WALL.get(), 2).unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "igneous_stone_wall_from_stonecutting"));
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_STONE.get(), 4).define('#', MSBlocks.IGNEOUS_STONE.get()).pattern("##").pattern("##").unlockedBy("has_igneous_stone", has(MSBlocks.IGNEOUS_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_STAIRS.get(), 4).define('#', MSBlocks.POLISHED_IGNEOUS_STONE.get()).pattern("#  ").pattern("## ").pattern("###").group("wooden_stairs").unlockedBy("has_polished_igneous_stone", has(MSBlocks.POLISHED_IGNEOUS_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_SLAB.get(), 6).define('#', MSBlocks.POLISHED_IGNEOUS_STONE.get()).pattern("###").group("wooden_slab").unlockedBy("has_polished_igneous_stone", has(MSBlocks.POLISHED_IGNEOUS_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_WALL.get(), 6).define('#', MSBlocks.POLISHED_IGNEOUS_STONE.get()).pattern("###").pattern("###").group("stone_wall").unlockedBy("has_polished_igneous_stone", has(MSBlocks.POLISHED_IGNEOUS_STONE.get())).save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_IGNEOUS_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_STAIRS.get()).unlockedBy("has_polished_igneous_stone", has(MSBlocks.POLISHED_IGNEOUS_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_igneous_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_IGNEOUS_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_SLAB.get(), 2).unlockedBy("has_polished_igneous_stone", has(MSBlocks.POLISHED_IGNEOUS_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_igneous_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_IGNEOUS_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_WALL.get(), 2).unlockedBy("has_polished_igneous_stone", has(MSBlocks.POLISHED_IGNEOUS_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_igneous_wall_from_stonecutting"));
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_BRICKS.get(), 4).define('#', MSBlocks.POLISHED_IGNEOUS_STONE.get()).pattern("##").pattern("##").unlockedBy("has_polished_igneous_stone", has(MSBlocks.POLISHED_IGNEOUS_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_BRICK_WALL.get(), 6).define('#', MSBlocks.POLISHED_IGNEOUS_BRICKS.get()).pattern("###").pattern("###").group("stone_wall").unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_IGNEOUS_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_BRICK_WALL.get(), 2).unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_igneous_brick_wall_from_stonecutting"));
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_BRICK_STAIRS.get(), 4).define('#', MSBlocks.POLISHED_IGNEOUS_BRICKS.get()).pattern("#  ").pattern("## ").pattern("###").unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_BRICK_SLAB.get(), 6).define('#', MSBlocks.POLISHED_IGNEOUS_BRICKS.get()).pattern("###").unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder);
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHISELED_IGNEOUS_STONE.get()).define('#', MSBlocks.POLISHED_IGNEOUS_BRICK_SLAB.get()).pattern("#").pattern("#").unlockedBy("has_polished_igneous_brick_slab", has(MSBlocks.POLISHED_IGNEOUS_BRICK_SLAB.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_IGNEOUS_PILLAR.get(), 3).define('#', MSBlocks.POLISHED_IGNEOUS_BRICKS.get()).pattern("#").pattern("#").pattern("#").unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder);
		SimpleCookingRecipeBuilder.smelting(Ingredient.of(MSBlocks.POLISHED_IGNEOUS_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CRACKED_POLISHED_IGNEOUS_BRICKS.get(), 0.1f, 200).unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder);
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get(), 4).define('#', MSBlocks.POLISHED_IGNEOUS_BRICKS.get()).define('M', Items.MAGMA_BLOCK).pattern("#M").pattern("M#").unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "magmatic_polished_igneous_bricks_from_magma"));
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get(), 4).define('#', MSBlocks.MAGMATIC_IGNEOUS_STONE.get()).pattern("##").pattern("##").unlockedBy("has_magmatic_igneous_stone", has(MSBlocks.MAGMATIC_IGNEOUS_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICK_WALL.get(), 6).define('#', MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get()).pattern("###").pattern("###").group("stone_wall").unlockedBy("has_magmatic_polished_igneous_bricks", has(MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICK_WALL.get(), 2).unlockedBy("has_magmatic_polished_igneous_bricks", has(MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "magmatic_polished_igneous_brick_wall_from_stonecutting"));
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICK_STAIRS.get(), 4).define('#', MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get()).pattern("#  ").pattern("## ").pattern("###").unlockedBy("has_magmatic_polished_igneous_bricks", has(MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICK_SLAB.get(), 6).define('#', MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get()).pattern("###").unlockedBy("has_magmatic_polished_igneous_bricks", has(MSBlocks.MAGMATIC_POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder);
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_STONE_STAIRS.get(), 4).define('#', MSBlocks.PUMICE_STONE.get()).pattern("#  ").pattern("## ").pattern("###").group("wooden_stairs").unlockedBy("has_pumice_stone", has(MSBlocks.PUMICE_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_STONE_SLAB.get(), 6).define('#', MSBlocks.PUMICE_STONE.get()).pattern("###").group("wooden_slab").unlockedBy("has_pumice_stone", has(MSBlocks.PUMICE_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_STONE_WALL.get(), 6).define('#', MSBlocks.PUMICE_STONE.get()).pattern("###").pattern("###").group("stone_wall").unlockedBy("has_pumice_stone", has(MSBlocks.PUMICE_STONE.get())).save(recipeBuilder);
		ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_STONE_BUTTON.get()).requires(MSBlocks.PUMICE_STONE.get()).unlockedBy("has_pumice_stone", has(MSBlocks.PUMICE_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_STONE_PRESSURE_PLATE.get(), 1).define('#', MSBlocks.PUMICE_STONE.get()).pattern("##").group("stone_pressure_plate").unlockedBy("has_pumice_stone", has(MSBlocks.PUMICE_STONE.get())).save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PUMICE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_STONE_STAIRS.get()).unlockedBy("has_pumice_stone", has(MSBlocks.PUMICE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pumice_stone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PUMICE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_STONE_SLAB.get(), 2).unlockedBy("has_pumice_stone", has(MSBlocks.PUMICE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pumice_stone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PUMICE_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_STONE_WALL.get(), 2).unlockedBy("has_pumice_stone", has(MSBlocks.PUMICE_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pumice_stone_wall_from_stonecutting"));
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_BRICKS.get(), 4).define('#', MSBlocks.PUMICE_STONE.get()).pattern("##").pattern("##").unlockedBy("has_pumice_stone", has(MSBlocks.PUMICE_STONE.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_BRICK_STAIRS.get(), 4).define('#', MSBlocks.PUMICE_BRICKS.get()).pattern("#  ").pattern("## ").pattern("###").group("wooden_stairs").unlockedBy("has_pumice_bricks", has(MSBlocks.PUMICE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_BRICK_SLAB.get(), 6).define('#', MSBlocks.PUMICE_BRICKS.get()).pattern("###").group("wooden_slab").unlockedBy("has_pumice_bricks", has(MSBlocks.PUMICE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_BRICK_WALL.get(), 6).define('#', MSBlocks.PUMICE_BRICKS.get()).pattern("###").pattern("###").group("stone_wall").unlockedBy("has_pumice_bricks", has(MSBlocks.PUMICE_BRICKS.get())).save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PUMICE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_BRICK_STAIRS.get()).unlockedBy("has_pumice_bricks", has(MSBlocks.PUMICE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pumice_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PUMICE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_BRICK_SLAB.get(), 2).unlockedBy("has_pumice_bricks", has(MSBlocks.PUMICE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pumice_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PUMICE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_BRICK_WALL.get(), 2).unlockedBy("has_pumice_bricks", has(MSBlocks.PUMICE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pumice_brick_wall_from_stonecutting"));
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_TILES.get(), 4).define('#', MSBlocks.PUMICE_BRICKS.get()).pattern("##").pattern("##").unlockedBy("has_pumice_bricks", has(MSBlocks.PUMICE_BRICKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_TILE_STAIRS.get(), 4).define('#', MSBlocks.PUMICE_TILES.get()).pattern("#  ").pattern("## ").pattern("###").group("wooden_stairs").unlockedBy("has_pumice_tiles", has(MSBlocks.PUMICE_TILES.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_TILE_SLAB.get(), 6).define('#', MSBlocks.PUMICE_TILES.get()).pattern("###").group("wooden_slab").unlockedBy("has_pumice_tiles", has(MSBlocks.PUMICE_TILES.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_TILE_WALL.get(), 6).define('#', MSBlocks.PUMICE_TILES.get()).pattern("###").pattern("###").group("stone_wall").unlockedBy("has_pumice_tiles", has(MSBlocks.PUMICE_TILES.get())).save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PUMICE_TILES.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_TILE_STAIRS.get()).unlockedBy("has_pumice_tiles", has(MSBlocks.PUMICE_TILES.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pumice_tile_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PUMICE_TILES.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_TILE_SLAB.get(), 2).unlockedBy("has_pumice_tiles", has(MSBlocks.PUMICE_TILES.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pumice_tile_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PUMICE_TILES.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PUMICE_TILE_WALL.get(), 2).unlockedBy("has_pumice_tiles", has(MSBlocks.PUMICE_TILES.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pumice_tile_wall_from_stonecutting"));
		
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.HEAT_LAMP.get(), 8).define('#', MSBlocks.POLISHED_IGNEOUS_BRICKS.get()).define('A', MSItems.MOLTEN_AMBER_BUCKET.get()).pattern("###").pattern("#A#").pattern("###").unlockedBy("has_polished_igneous_bricks", has(MSBlocks.POLISHED_IGNEOUS_BRICKS.get())).save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.FLOWERY_MOSSY_COBBLESTONE_STAIRS, MSBlocks.FLOWERY_MOSSY_COBBLESTONE).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.FLOWERY_MOSSY_COBBLESTONE_SLAB, MSBlocks.FLOWERY_MOSSY_COBBLESTONE).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.FLOWERY_MOSSY_COBBLESTONE_WALL, MSBlocks.FLOWERY_MOSSY_COBBLESTONE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_MOSSY_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_MOSSY_COBBLESTONE_STAIRS.get()).unlockedBy("has_flowery_mossy_cobblestone", has(MSBlocks.FLOWERY_MOSSY_COBBLESTONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_mossy_cobblestone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_MOSSY_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_MOSSY_COBBLESTONE_SLAB.get(), 2).unlockedBy("has_flowery_mossy_cobblestone", has(MSBlocks.FLOWERY_MOSSY_COBBLESTONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_mossy_cobblestone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_MOSSY_COBBLESTONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_MOSSY_COBBLESTONE_WALL.get(), 2).unlockedBy("has_flowery_mossy_cobblestone", has(MSBlocks.FLOWERY_MOSSY_COBBLESTONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_mossy_cobblestone_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.CHALK_WALL, MSBlocks.CHALK).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.CHALK_BUTTON, MSBlocks.CHALK).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.CHALK_PRESSURE_PLATE, MSBlocks.CHALK).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_WALL.get(), 2).unlockedBy("has_chalk", has(MSBlocks.CHALK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chalk_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_CHALK_STAIRS, MSBlocks.POLISHED_CHALK).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_CHALK_SLAB, MSBlocks.POLISHED_CHALK).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.POLISHED_CHALK_WALL, MSBlocks.POLISHED_CHALK).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_CHALK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CHALK_STAIRS.get()).unlockedBy("has_polished_chalk", has(MSBlocks.POLISHED_CHALK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_chalk_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_CHALK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CHALK_SLAB.get(), 2).unlockedBy("has_polished_chalk", has(MSBlocks.POLISHED_CHALK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_chalk_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_CHALK.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_CHALK_WALL.get(), 2).unlockedBy("has_polished_chalk", has(MSBlocks.POLISHED_CHALK.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_chalk_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.CHALK_BRICK_WALL, MSBlocks.CHALK_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHALK_BRICK_WALL.get(), 2).unlockedBy("has_chalk_bricks", has(MSBlocks.CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "chalk_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.MOSSY_CHALK_BRICK_STAIRS, MSBlocks.MOSSY_CHALK_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.MOSSY_CHALK_BRICK_SLAB, MSBlocks.MOSSY_CHALK_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.MOSSY_CHALK_BRICK_WALL, MSBlocks.MOSSY_CHALK_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_CHALK_BRICK_STAIRS.get()).unlockedBy("has_mossy_chalk_bricks", has(MSBlocks.MOSSY_CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_chalk_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_CHALK_BRICK_SLAB.get(), 2).unlockedBy("has_mossy_chalk_bricks", has(MSBlocks.MOSSY_CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_chalk_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_CHALK_BRICK_WALL.get(), 2).unlockedBy("has_mossy_chalk_bricks", has(MSBlocks.MOSSY_CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_chalk_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.FLOWERY_CHALK_BRICK_STAIRS, MSBlocks.FLOWERY_CHALK_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.FLOWERY_CHALK_BRICK_SLAB, MSBlocks.FLOWERY_CHALK_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.FLOWERY_CHALK_BRICK_WALL, MSBlocks.FLOWERY_CHALK_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_CHALK_BRICK_STAIRS.get()).unlockedBy("has_flowery_chalk_bricks", has(MSBlocks.FLOWERY_CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_chalk_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_CHALK_BRICK_SLAB.get(), 2).unlockedBy("has_flowery_chalk_bricks", has(MSBlocks.FLOWERY_CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_chalk_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.FLOWERY_CHALK_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.FLOWERY_CHALK_BRICK_WALL.get(), 2).unlockedBy("has_flowery_chalk_bricks", has(MSBlocks.FLOWERY_CHALK_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "flowery_chalk_brick_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.PINK_STONE_WALL, MSBlocks.PINK_STONE).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.PINK_STONE_BUTTON, MSBlocks.PINK_STONE).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.PINK_STONE_PRESSURE_PLATE, MSBlocks.PINK_STONE).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PINK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_WALL.get(), 2).unlockedBy("has_pink_stone", has(MSBlocks.PINK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pink_stone_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_PINK_STONE_STAIRS, MSBlocks.POLISHED_PINK_STONE).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_PINK_STONE_SLAB, MSBlocks.POLISHED_PINK_STONE).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.POLISHED_PINK_STONE_WALL, MSBlocks.POLISHED_PINK_STONE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_PINK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_PINK_STONE_STAIRS.get()).unlockedBy("has_polished_pink_stone", has(MSBlocks.POLISHED_PINK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_pink_stone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_PINK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_PINK_STONE_SLAB.get(), 2).unlockedBy("has_polished_pink_stone", has(MSBlocks.POLISHED_PINK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_pink_stone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_PINK_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_PINK_STONE_WALL.get(), 2).unlockedBy("has_polished_pink_stone", has(MSBlocks.POLISHED_PINK_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_pink_stone_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.PINK_STONE_BRICK_WALL, MSBlocks.PINK_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.PINK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.PINK_STONE_BRICK_WALL.get(), 2).unlockedBy("has_pink_stone_bricks", has(MSBlocks.PINK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "pink_stone_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.MOSSY_PINK_STONE_BRICK_STAIRS, MSBlocks.MOSSY_PINK_STONE_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.MOSSY_PINK_STONE_BRICK_SLAB, MSBlocks.MOSSY_PINK_STONE_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.MOSSY_PINK_STONE_BRICK_WALL, MSBlocks.MOSSY_PINK_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_PINK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_PINK_STONE_BRICK_STAIRS.get()).unlockedBy("has_mossy_pink_stone_bricks", has(MSBlocks.MOSSY_PINK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_pink_stone_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_PINK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_PINK_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_mossy_pink_stone_bricks", has(MSBlocks.MOSSY_PINK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_pink_stone_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_PINK_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_PINK_STONE_BRICK_WALL.get(), 2).unlockedBy("has_mossy_pink_stone_bricks", has(MSBlocks.MOSSY_PINK_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_pink_stone_brick_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.BROWN_STONE_WALL, MSBlocks.BROWN_STONE).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.BROWN_STONE_BUTTON, MSBlocks.BROWN_STONE).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.BROWN_STONE_PRESSURE_PLATE, MSBlocks.BROWN_STONE).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BROWN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_WALL.get(), 2).unlockedBy("has_brown_stone", has(MSBlocks.BROWN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "brown_stone_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_BROWN_STONE_STAIRS, MSBlocks.POLISHED_BROWN_STONE).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_BROWN_STONE_SLAB, MSBlocks.POLISHED_BROWN_STONE).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.POLISHED_BROWN_STONE_WALL, MSBlocks.POLISHED_BROWN_STONE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_BROWN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_BROWN_STONE_STAIRS.get()).unlockedBy("has_polished_brown_stone", has(MSBlocks.POLISHED_BROWN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_brown_stone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_BROWN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_BROWN_STONE_SLAB.get(), 2).unlockedBy("has_polished_brown_stone", has(MSBlocks.POLISHED_BROWN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_brown_stone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_BROWN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_BROWN_STONE_WALL.get(), 2).unlockedBy("has_polished_brown_stone", has(MSBlocks.POLISHED_BROWN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_brown_stone_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.BROWN_STONE_BRICK_WALL, MSBlocks.BROWN_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.BROWN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.BROWN_STONE_BRICK_WALL.get(), 2).unlockedBy("has_brown_stone_bricks", has(MSBlocks.BROWN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "brown_stone_brick_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.GREEN_STONE_WALL, MSBlocks.GREEN_STONE).group("stone_wall").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.GREEN_STONE_BUTTON, MSBlocks.GREEN_STONE).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.GREEN_STONE_PRESSURE_PLATE, MSBlocks.GREEN_STONE).group("stone_pressure_plate").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_WALL.get(), 2).unlockedBy("has_green_stone", has(MSBlocks.GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "green_stone_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_GREEN_STONE_STAIRS, MSBlocks.POLISHED_GREEN_STONE).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_GREEN_STONE_SLAB, MSBlocks.POLISHED_GREEN_STONE).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.POLISHED_GREEN_STONE_WALL, MSBlocks.POLISHED_GREEN_STONE).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_GREEN_STONE_STAIRS.get()).unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_green_stone_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_GREEN_STONE_SLAB.get(), 2).unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_green_stone_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.POLISHED_GREEN_STONE.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.POLISHED_GREEN_STONE_WALL.get(), 2).unlockedBy("has_polished_green_stone", has(MSBlocks.POLISHED_GREEN_STONE.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "polished_green_stone_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.GREEN_STONE_BRICK_WALL, MSBlocks.GREEN_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.GREEN_STONE_BRICK_WALL.get(), 2).unlockedBy("has_green_stone_bricks", has(MSBlocks.GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "green_stone_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.HORIZONTAL_GREEN_STONE_BRICK_STAIRS, MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.HORIZONTAL_GREEN_STONE_BRICK_SLAB, MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.HORIZONTAL_GREEN_STONE_BRICK_WALL, MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.HORIZONTAL_GREEN_STONE_BRICK_STAIRS.get()).unlockedBy("has_horizontal_green_stone_bricks", has(MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "horizontal_green_stone_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.HORIZONTAL_GREEN_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_horizontal_green_stone_bricks", has(MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "horizontal_green_stone_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.HORIZONTAL_GREEN_STONE_BRICK_WALL.get(), 2).unlockedBy("has_horizontal_green_stone_bricks", has(MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "horizontal_green_stone_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.VERTICAL_GREEN_STONE_BRICK_STAIRS, MSBlocks.VERTICAL_GREEN_STONE_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.VERTICAL_GREEN_STONE_BRICK_SLAB, MSBlocks.VERTICAL_GREEN_STONE_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.VERTICAL_GREEN_STONE_BRICK_WALL, MSBlocks.VERTICAL_GREEN_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.VERTICAL_GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.VERTICAL_GREEN_STONE_BRICK_STAIRS.get()).unlockedBy("has_vertical_green_stone_bricks", has(MSBlocks.VERTICAL_GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "vertical_green_stone_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.VERTICAL_GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.VERTICAL_GREEN_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_vertical_green_stone_bricks", has(MSBlocks.VERTICAL_GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "vertical_green_stone_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.VERTICAL_GREEN_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.VERTICAL_GREEN_STONE_BRICK_WALL.get(), 2).unlockedBy("has_vertical_green_stone_bricks", has(MSBlocks.VERTICAL_GREEN_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "vertical_green_stone_brick_wall_from_stonecutting"));
		
		CommonRecipes.wallRecipe(MSBlocks.FLOWERY_MOSSY_STONE_BRICK_WALL, MSBlocks.FLOWERY_MOSSY_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.DECREPIT_STONE_BRICK_STAIRS, MSBlocks.DECREPIT_STONE_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.DECREPIT_STONE_BRICK_SLAB, MSBlocks.DECREPIT_STONE_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.DECREPIT_STONE_BRICK_WALL, MSBlocks.DECREPIT_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.DECREPIT_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.DECREPIT_STONE_BRICK_STAIRS.get()).unlockedBy("has_decrepit_stone_bricks", has(MSBlocks.DECREPIT_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "decrepit_stone_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.DECREPIT_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.DECREPIT_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_decrepit_stone_bricks", has(MSBlocks.DECREPIT_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "decrepit_stone_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.DECREPIT_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.DECREPIT_STONE_BRICK_WALL.get(), 2).unlockedBy("has_decrepit_stone_bricks", has(MSBlocks.DECREPIT_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "decrepit_stone_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.MOSSY_DECREPIT_STONE_BRICK_STAIRS, MSBlocks.MOSSY_DECREPIT_STONE_BRICKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.MOSSY_DECREPIT_STONE_BRICK_SLAB, MSBlocks.MOSSY_DECREPIT_STONE_BRICKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.wallRecipe(MSBlocks.MOSSY_DECREPIT_STONE_BRICK_WALL, MSBlocks.MOSSY_DECREPIT_STONE_BRICKS).group("stone_wall").save(recipeBuilder);
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_DECREPIT_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_DECREPIT_STONE_BRICK_STAIRS.get()).unlockedBy("has_mossy_decrepit_stone_bricks", has(MSBlocks.MOSSY_DECREPIT_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_decrepit_stone_brick_stairs_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_DECREPIT_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_DECREPIT_STONE_BRICK_SLAB.get(), 2).unlockedBy("has_mossy_decrepit_stone_bricks", has(MSBlocks.MOSSY_DECREPIT_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_decrepit_stone_brick_slab_from_stonecutting"));
		SingleItemRecipeBuilder.stonecutting(Ingredient.of(MSBlocks.MOSSY_DECREPIT_STONE_BRICKS.get()), RecipeCategory.BUILDING_BLOCKS, MSBlocks.MOSSY_DECREPIT_STONE_BRICK_WALL.get(), 2).unlockedBy("has_mossy_decrepit_stone_bricks", has(MSBlocks.MOSSY_DECREPIT_STONE_BRICKS.get())).save(recipeBuilder, new ResourceLocation(Minestuck.MOD_ID, "mossy_decrepit_stone_brick_wall_from_stonecutting"));
		
		CommonRecipes.stairsRecipe(MSBlocks.UNCARVED_WOOD_STAIRS, MSBlocks.UNCARVED_WOOD).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.UNCARVED_WOOD_SLAB, MSBlocks.UNCARVED_WOOD).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.UNCARVED_WOOD_BUTTON, MSBlocks.UNCARVED_WOOD).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.UNCARVED_WOOD_PRESSURE_PLATE, MSBlocks.UNCARVED_WOOD).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.UNCARVED_WOOD_FENCE.get(), 3).define('#', MSBlocks.UNCARVED_WOOD.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_uncarved_wood", has(MSBlocks.UNCARVED_WOOD.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.UNCARVED_WOOD_FENCE_GATE.get(), 1).define('#', MSBlocks.UNCARVED_WOOD.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_uncarved_wood", has(MSBlocks.UNCARVED_WOOD.get())).save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.CHIPBOARD_STAIRS, MSBlocks.CHIPBOARD).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.CHIPBOARD_SLAB, MSBlocks.CHIPBOARD).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.CHIPBOARD_BUTTON, MSBlocks.CHIPBOARD).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.CHIPBOARD_PRESSURE_PLATE, MSBlocks.CHIPBOARD).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHIPBOARD_FENCE.get(), 3).define('#', MSBlocks.CHIPBOARD.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_chipboard", has(MSBlocks.CHIPBOARD.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CHIPBOARD_FENCE_GATE.get(), 1).define('#', MSBlocks.CHIPBOARD.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_chipboard", has(MSBlocks.CHIPBOARD.get())).save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.CARVED_HEAVY_PLANK_STAIRS, MSBlocks.CARVED_HEAVY_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.CARVED_HEAVY_PLANK_SLAB, MSBlocks.CARVED_HEAVY_PLANKS).group("wooden_slab").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.CARVED_STAIRS, MSBlocks.CARVED_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.CARVED_SLAB, MSBlocks.CARVED_PLANKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.CARVED_BUTTON, MSBlocks.CARVED_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.CARVED_PRESSURE_PLATE, MSBlocks.CARVED_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_FENCE.get(), 3).define('#', MSBlocks.CARVED_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_carved_planks", has(MSBlocks.CARVED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_FENCE_GATE.get(), 1).define('#', MSBlocks.CARVED_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_carved_planks", has(MSBlocks.CARVED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_DOOR.get(), 3).define('#', MSBlocks.CARVED_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_carved_planks", has(MSBlocks.CARVED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CARVED_TRAPDOOR.get(), 2).define('#', MSBlocks.CARVED_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_carved_planks", has(MSBlocks.CARVED_PLANKS.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.CARVED_SIGN.get(), MSBlocks.CARVED_PLANKS.get()).group("carved_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.CARVED_HANGING_SIGN.get(), MSBlocks.UNCARVED_WOOD.get()).group("carved_hanging_sign").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_UNCARVED_STAIRS, MSBlocks.POLISHED_UNCARVED_WOOD).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_UNCARVED_SLAB, MSBlocks.POLISHED_UNCARVED_WOOD).group("wooden_slab").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.TREATED_UNCARVED_WOOD_STAIRS, MSBlocks.TREATED_UNCARVED_WOOD).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.TREATED_UNCARVED_WOOD_SLAB, MSBlocks.TREATED_UNCARVED_WOOD).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.TREATED_UNCARVED_WOOD_BUTTON, MSBlocks.TREATED_UNCARVED_WOOD).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.TREATED_UNCARVED_WOOD_PRESSURE_PLATE, MSBlocks.TREATED_UNCARVED_WOOD).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_UNCARVED_WOOD_FENCE.get(), 3).define('#', MSBlocks.TREATED_UNCARVED_WOOD.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_treated_uncarved_wood", has(MSBlocks.TREATED_UNCARVED_WOOD.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_UNCARVED_WOOD_FENCE_GATE.get(), 1).define('#', MSBlocks.TREATED_UNCARVED_WOOD.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_treated_uncarved_wood", has(MSBlocks.TREATED_UNCARVED_WOOD.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.TREATED_SIGN, MSBlocks.TREATED_PLANKS).group("treated_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.TREATED_HANGING_SIGN, MSBlocks.TREATED_UNCARVED_WOOD).group("treated_hanging_sign").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.TREATED_CHIPBOARD_STAIRS, MSBlocks.TREATED_CHIPBOARD).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.TREATED_CHIPBOARD_SLAB, MSBlocks.TREATED_CHIPBOARD).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.TREATED_CHIPBOARD_BUTTON, MSBlocks.TREATED_CHIPBOARD).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.TREATED_CHIPBOARD_PRESSURE_PLATE, MSBlocks.TREATED_CHIPBOARD).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_CHIPBOARD_FENCE.get(), 3).define('#', MSBlocks.TREATED_CHIPBOARD.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_treated_chipboard", has(MSBlocks.TREATED_CHIPBOARD.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_CHIPBOARD_FENCE_GATE.get(), 1).define('#', MSBlocks.TREATED_CHIPBOARD.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_treated_chipboard", has(MSBlocks.TREATED_CHIPBOARD.get())).save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.TREATED_HEAVY_PLANK_STAIRS, MSBlocks.TREATED_HEAVY_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.TREATED_HEAVY_PLANK_SLAB, MSBlocks.TREATED_HEAVY_PLANKS).group("wooden_slab").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.TREATED_PLANKS_STAIRS, MSBlocks.TREATED_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.TREATED_PLANKS_SLAB, MSBlocks.TREATED_PLANKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.TREATED_BUTTON, MSBlocks.TREATED_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.TREATED_PRESSURE_PLATE, MSBlocks.TREATED_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_FENCE.get(), 3).define('#', MSBlocks.TREATED_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_treated_planks", has(MSBlocks.TREATED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_FENCE_GATE.get(), 1).define('#', MSBlocks.TREATED_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_treated_planks", has(MSBlocks.TREATED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_DOOR.get(), 3).define('#', MSBlocks.TREATED_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_treated_planks", has(MSBlocks.TREATED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.TREATED_TRAPDOOR.get(), 2).define('#', MSBlocks.TREATED_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_treated_planks", has(MSBlocks.TREATED_PLANKS.get())).save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_TREATED_UNCARVED_STAIRS, MSBlocks.POLISHED_TREATED_UNCARVED_WOOD).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_TREATED_UNCARVED_SLAB, MSBlocks.POLISHED_TREATED_UNCARVED_WOOD).group("wooden_slab").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.LACQUERED_UNCARVED_WOOD_STAIRS, MSBlocks.LACQUERED_UNCARVED_WOOD).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.LACQUERED_UNCARVED_WOOD_SLAB, MSBlocks.LACQUERED_UNCARVED_WOOD).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.LACQUERED_UNCARVED_WOOD_BUTTON, MSBlocks.LACQUERED_UNCARVED_WOOD).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.LACQUERED_UNCARVED_WOOD_PRESSURE_PLATE, MSBlocks.LACQUERED_UNCARVED_WOOD).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_UNCARVED_WOOD_FENCE.get(), 3).define('#', MSBlocks.LACQUERED_UNCARVED_WOOD.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_lacquered_uncarved_wood", has(MSBlocks.LACQUERED_UNCARVED_WOOD.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_UNCARVED_WOOD_FENCE_GATE.get(), 1).define('#', MSBlocks.LACQUERED_UNCARVED_WOOD.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_lacquered_uncarved_wood", has(MSBlocks.LACQUERED_UNCARVED_WOOD.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.LACQUERED_SIGN, MSBlocks.LACQUERED_PLANKS).group("lacquered_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.LACQUERED_HANGING_SIGN, MSBlocks.LACQUERED_UNCARVED_WOOD).group("lacquered_hanging_sign").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.LACQUERED_CHIPBOARD_STAIRS, MSBlocks.LACQUERED_CHIPBOARD).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.LACQUERED_CHIPBOARD_SLAB, MSBlocks.LACQUERED_CHIPBOARD).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.LACQUERED_CHIPBOARD_BUTTON, MSBlocks.LACQUERED_CHIPBOARD).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.LACQUERED_CHIPBOARD_PRESSURE_PLATE, MSBlocks.LACQUERED_CHIPBOARD).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_CHIPBOARD_FENCE.get(), 3).define('#', MSBlocks.LACQUERED_CHIPBOARD.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_lacquered_chipboard", has(MSBlocks.LACQUERED_CHIPBOARD.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_CHIPBOARD_FENCE_GATE.get(), 1).define('#', MSBlocks.LACQUERED_CHIPBOARD.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_lacquered_chipboard", has(MSBlocks.LACQUERED_CHIPBOARD.get())).save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.LACQUERED_HEAVY_PLANK_STAIRS, MSBlocks.LACQUERED_HEAVY_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.LACQUERED_HEAVY_PLANK_SLAB, MSBlocks.LACQUERED_HEAVY_PLANKS).group("wooden_slab").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.LACQUERED_STAIRS, MSBlocks.LACQUERED_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.LACQUERED_SLAB, MSBlocks.LACQUERED_PLANKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.LACQUERED_BUTTON, MSBlocks.LACQUERED_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.LACQUERED_PRESSURE_PLATE, MSBlocks.LACQUERED_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_FENCE.get(), 3).define('#', MSBlocks.LACQUERED_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_lacquered_planks", has(MSBlocks.LACQUERED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_FENCE_GATE.get(), 1).define('#', MSBlocks.LACQUERED_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_lacquered_planks", has(MSBlocks.LACQUERED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_DOOR.get(), 3).define('#', MSBlocks.LACQUERED_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_lacquered_planks", has(MSBlocks.LACQUERED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.LACQUERED_TRAPDOOR.get(), 2).define('#', MSBlocks.LACQUERED_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_lacquered_planks", has(MSBlocks.LACQUERED_PLANKS.get())).save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.POLISHED_LACQUERED_UNCARVED_STAIRS, MSBlocks.POLISHED_LACQUERED_UNCARVED_WOOD).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.POLISHED_LACQUERED_UNCARVED_SLAB, MSBlocks.POLISHED_LACQUERED_UNCARVED_WOOD).group("wooden_slab").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.GLOWING_STAIRS, MSBlocks.GLOWING_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.GLOWING_SLAB, MSBlocks.GLOWING_PLANKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.GLOWING_BUTTON, MSBlocks.GLOWING_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.GLOWING_PRESSURE_PLATE, MSBlocks.GLOWING_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GLOWING_FENCE.get(), 3).define('#', MSBlocks.GLOWING_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_glowing_planks", has(MSBlocks.GLOWING_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GLOWING_FENCE_GATE.get(), 1).define('#', MSBlocks.GLOWING_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_glowing_planks", has(MSBlocks.GLOWING_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GLOWING_DOOR.get(), 3).define('#', MSBlocks.GLOWING_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_glowing_planks", has(MSBlocks.GLOWING_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.GLOWING_TRAPDOOR.get(), 2).define('#', MSBlocks.GLOWING_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_glowing_planks", has(MSBlocks.GLOWING_PLANKS.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.GLOWING_SIGN, MSBlocks.GLOWING_PLANKS).group("glowing_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.GLOWING_HANGING_SIGN, MSBlocks.STRIPPED_GLOWING_LOG).group("glowing_hanging_sign").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.FROST_STAIRS, MSBlocks.FROST_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.FROST_SLAB, MSBlocks.FROST_PLANKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.FROST_BUTTON, MSBlocks.FROST_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.FROST_PRESSURE_PLATE, MSBlocks.FROST_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_FENCE.get(), 3).define('#', MSBlocks.FROST_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_frost_planks", has(MSBlocks.FROST_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_FENCE_GATE.get(), 1).define('#', MSBlocks.FROST_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_frost_planks", has(MSBlocks.FROST_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_DOOR.get(), 3).define('#', MSBlocks.FROST_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_frost_planks", has(MSBlocks.FROST_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.FROST_TRAPDOOR.get(), 2).define('#', MSBlocks.FROST_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_frost_planks", has(MSBlocks.FROST_PLANKS.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.FROST_SIGN, MSBlocks.FROST_PLANKS).group("frost_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.FROST_HANGING_SIGN, MSBlocks.STRIPPED_FROST_LOG).group("frost_hanging_sign").save(recipeBuilder);
		
		CommonRecipes.buttonRecipe(MSBlocks.RAINBOW_BUTTON, MSBlocks.RAINBOW_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.RAINBOW_PRESSURE_PLATE, MSBlocks.RAINBOW_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.RAINBOW_FENCE.get(), 3).define('#', MSBlocks.RAINBOW_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_rainbow_planks", has(MSBlocks.RAINBOW_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.RAINBOW_FENCE_GATE.get(), 1).define('#', MSBlocks.RAINBOW_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_rainbow_planks", has(MSBlocks.RAINBOW_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.RAINBOW_DOOR.get(), 3).define('#', MSBlocks.RAINBOW_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_rainbow_planks", has(MSBlocks.RAINBOW_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.RAINBOW_TRAPDOOR.get(), 2).define('#', MSBlocks.RAINBOW_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_rainbow_planks", has(MSBlocks.RAINBOW_PLANKS.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.RAINBOW_SIGN, MSBlocks.RAINBOW_PLANKS).group("rainbow_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.RAINBOW_HANGING_SIGN, MSBlocks.STRIPPED_RAINBOW_LOG).group("rainbow_hanging_sign").save(recipeBuilder);
		
		CommonRecipes.buttonRecipe(MSBlocks.END_BUTTON, MSBlocks.END_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.END_PRESSURE_PLATE, MSBlocks.END_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.END_FENCE.get(), 3).define('#', MSBlocks.END_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_end_planks", has(MSBlocks.END_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.END_FENCE_GATE.get(), 1).define('#', MSBlocks.END_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_end_planks", has(MSBlocks.END_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.END_DOOR.get(), 3).define('#', MSBlocks.END_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_end_planks", has(MSBlocks.END_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.END_TRAPDOOR.get(), 2).define('#', MSBlocks.END_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_end_planks", has(MSBlocks.END_PLANKS.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.END_SIGN, MSBlocks.END_PLANKS).group("end_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.END_HANGING_SIGN, MSBlocks.STRIPPED_END_LOG).group("end_hanging_sign").save(recipeBuilder);
		
		CommonRecipes.buttonRecipe(MSBlocks.DEAD_BUTTON, MSBlocks.DEAD_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.DEAD_PRESSURE_PLATE, MSBlocks.DEAD_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.DEAD_FENCE.get(), 3).define('#', MSBlocks.DEAD_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_dead_planks", has(MSBlocks.DEAD_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.DEAD_FENCE_GATE.get(), 1).define('#', MSBlocks.DEAD_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_dead_planks", has(MSBlocks.DEAD_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.DEAD_DOOR.get(), 3).define('#', MSBlocks.DEAD_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_dead_planks", has(MSBlocks.DEAD_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.DEAD_TRAPDOOR.get(), 2).define('#', MSBlocks.DEAD_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_dead_planks", has(MSBlocks.DEAD_PLANKS.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.DEAD_SIGN, MSBlocks.DEAD_PLANKS).group("dead_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.DEAD_HANGING_SIGN, MSBlocks.STRIPPED_DEAD_LOG).group("dead_hanging_sign").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.SHADEWOOD_STAIRS, MSBlocks.SHADEWOOD_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.SHADEWOOD_SLAB, MSBlocks.SHADEWOOD_PLANKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.SHADEWOOD_BUTTON, MSBlocks.SHADEWOOD_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.SHADEWOOD_PRESSURE_PLATE, MSBlocks.SHADEWOOD_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADEWOOD_FENCE.get(), 3).define('#', MSBlocks.SHADEWOOD_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_shadewood_planks", has(MSBlocks.SHADEWOOD_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADEWOOD_FENCE_GATE.get(), 1).define('#', MSBlocks.SHADEWOOD_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_shadewood_planks", has(MSBlocks.SHADEWOOD_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADEWOOD_DOOR.get(), 3).define('#', MSBlocks.SHADEWOOD_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_shadewood_planks", has(MSBlocks.SHADEWOOD_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.SHADEWOOD_TRAPDOOR.get(), 2).define('#', MSBlocks.SHADEWOOD_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_shadewood_planks", has(MSBlocks.SHADEWOOD_PLANKS.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.SHADEWOOD_SIGN, MSBlocks.SHADEWOOD_PLANKS).group("shadewood_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.SHADEWOOD_HANGING_SIGN, MSBlocks.STRIPPED_SHADEWOOD_LOG).group("shadewood_hanging_sign").save(recipeBuilder);
		
		CommonRecipes.stairsRecipe(MSBlocks.CINDERED_STAIRS, MSBlocks.CINDERED_PLANKS).group("wooden_stairs").save(recipeBuilder);
		CommonRecipes.slabRecipe(MSBlocks.CINDERED_SLAB, MSBlocks.CINDERED_PLANKS).group("wooden_slab").save(recipeBuilder);
		CommonRecipes.buttonRecipe(MSBlocks.CINDERED_BUTTON, MSBlocks.CINDERED_PLANKS).save(recipeBuilder);
		CommonRecipes.pressurePlateRecipe(MSBlocks.CINDERED_PRESSURE_PLATE, MSBlocks.CINDERED_PLANKS).group("stone_pressure_plate").save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CINDERED_FENCE.get(), 3).define('#', MSBlocks.CINDERED_PLANKS.get()).define('$', Items.STICK).pattern("#$#").pattern("#$#").group("wooden_fence").unlockedBy("has_cindered_planks", has(MSBlocks.CINDERED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CINDERED_FENCE_GATE.get(), 1).define('#', MSBlocks.CINDERED_PLANKS.get()).define('$', Items.STICK).pattern("$#$").pattern("$#$").group("wooden_fence_gate").unlockedBy("has_cindered_planks", has(MSBlocks.CINDERED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CINDERED_DOOR.get(), 3).define('#', MSBlocks.CINDERED_PLANKS.get()).pattern("## ").pattern("## ").pattern("## ").group("wooden_door").unlockedBy("has_cindered_planks", has(MSBlocks.CINDERED_PLANKS.get())).save(recipeBuilder);
		ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, MSBlocks.CINDERED_TRAPDOOR.get(), 2).define('#', MSBlocks.CINDERED_PLANKS.get()).pattern("###").pattern("###").group("wooden_trapdoor").unlockedBy("has_cindered_planks", has(MSBlocks.CINDERED_PLANKS.get())).save(recipeBuilder);
		CommonRecipes.signRecipe(MSBlocks.CINDERED_SIGN, MSBlocks.CINDERED_PLANKS).group("cindered_sign").save(recipeBuilder);
		CommonRecipes.hangingSignRecipe(MSBlocks.CINDERED_HANGING_SIGN, MSBlocks.STRIPPED_CINDERED_LOG).group("cindered_hanging_sign").save(recipeBuilder);
		
		MinestuckGristCostsProvider.buildRecipes(recipeBuilder);
		MinestuckCombinationsProvider.buildRecipes(recipeBuilder);
	}
	
	public static Criterion<InventoryChangeTrigger.TriggerInstance> has(ItemLike itemLike)
	{
		return RecipeProvider.has(itemLike);
	}
	
	@SuppressWarnings("SameParameterValue")
	private void cookingRecipesFor(RecipeOutput recipeOutput, Ingredient input, RecipeCategory category, ItemLike result, float experience, String criterionName, Criterion<?> criterion)
	{
		ResourceLocation itemName = Objects.requireNonNull(BuiltInRegistries.ITEM.getKey(result.asItem()), "Registry name for " + result + " was found to be null!");
		SimpleCookingRecipeBuilder.smelting(input, category, result, experience, 200).unlockedBy(criterionName, criterion).save(recipeOutput);
		SimpleCookingRecipeBuilder.smoking(input, category, result, experience, 100).unlockedBy(criterionName, criterion).save(recipeOutput, new ResourceLocation(itemName.getNamespace(), itemName.getPath() + "_from_smoking"));
		SimpleCookingRecipeBuilder.campfireCooking(input, category, result, experience, 600).unlockedBy(criterionName, criterion).save(recipeOutput, new ResourceLocation(itemName.getNamespace(), itemName.getPath() + "_from_campfire_cooking"));
	}
}