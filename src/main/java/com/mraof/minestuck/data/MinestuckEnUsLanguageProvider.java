package com.mraof.minestuck.data;

import com.mraof.minestuck.Minestuck;
import com.mraof.minestuck.block.MSBlocks;
import com.mraof.minestuck.block.redstone.AreaEffectBlock;
import com.mraof.minestuck.block.redstone.SummonerBlock;
import com.mraof.minestuck.block.redstone.WirelessRedstoneReceiverBlock;
import com.mraof.minestuck.client.gui.*;
import com.mraof.minestuck.client.gui.captchalouge.HashMapSylladexScreen;
import com.mraof.minestuck.client.gui.captchalouge.SylladexScreen;
import com.mraof.minestuck.client.gui.captchalouge.TreeSylladexScreen;
import com.mraof.minestuck.client.gui.playerStats.*;
import com.mraof.minestuck.client.util.GuiUtil;
import com.mraof.minestuck.client.util.MSKeyHandler;
import com.mraof.minestuck.command.*;
import com.mraof.minestuck.command.argument.*;
import com.mraof.minestuck.computer.ButtonListProgram;
import com.mraof.minestuck.computer.SburbClient;
import com.mraof.minestuck.computer.SburbServer;
import com.mraof.minestuck.effects.MSEffects;
import com.mraof.minestuck.entity.LotusFlowerEntity;
import com.mraof.minestuck.entity.MSEntityTypes;
import com.mraof.minestuck.entity.consort.MessageType;
import com.mraof.minestuck.inventory.ConsortMerchantInventory;
import com.mraof.minestuck.inventory.captchalogue.HashMapModus;
import com.mraof.minestuck.item.MSItemGroup;
import com.mraof.minestuck.item.MSItems;
import com.mraof.minestuck.item.crafting.alchemy.GristAmount;
import com.mraof.minestuck.item.crafting.alchemy.GristSet;
import com.mraof.minestuck.item.crafting.alchemy.GristType;
import com.mraof.minestuck.item.crafting.alchemy.GristTypes;
import com.mraof.minestuck.item.weapon.OnHitEffect;
import com.mraof.minestuck.jei.JeiGristCost;
import com.mraof.minestuck.network.EffectTogglePacket;
import com.mraof.minestuck.player.*;
import com.mraof.minestuck.skaianet.Generator;
import com.mraof.minestuck.skaianet.MergeResult;
import com.mraof.minestuck.skaianet.PredefineData;
import com.mraof.minestuck.skaianet.SkaianetHandler;
import com.mraof.minestuck.tileentity.TransportalizerTileEntity;
import com.mraof.minestuck.tileentity.machine.*;
import com.mraof.minestuck.tileentity.redstone.RedstoneClockTileEntity;
import com.mraof.minestuck.util.MSDamageSources;
import com.mraof.minestuck.world.GateHandler;
import com.mraof.minestuck.world.lands.GristLayerInfo;
import com.mraof.minestuck.world.lands.LandInfo;
import com.mraof.minestuck.world.lands.LandTypePair;
import com.mraof.minestuck.world.lands.terrain.*;
import com.mraof.minestuck.world.lands.title.*;
import net.minecraft.ChatFormatting;
import net.minecraft.data.DataGenerator;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.Items;
import net.minecraft.world.item.alchemy.PotionUtils;
import net.minecraft.world.item.alchemy.Potions;

public class MinestuckEnUsLanguageProvider extends MinestuckLanguageProvider
{
	MinestuckEnUsLanguageProvider(DataGenerator gen)
	{
		super(gen, Minestuck.MOD_ID, "en_us");
	}
	
	@Override
	protected void addTranslations()
	{
		add(MSBlocks.BLACK_CHESS_DIRT.get(), "Black Chess Tile");
		add(MSBlocks.WHITE_CHESS_DIRT.get(), "White Chess Tile");
		add(MSBlocks.DARK_GRAY_CHESS_DIRT.get(), "Dark Gray Chess Tile");
		add(MSBlocks.LIGHT_GRAY_CHESS_DIRT.get(), "Light Gray Chess Tile");
		add(MSBlocks.SKAIA_PORTAL.get(), "Skaia Portal");
		add(MSBlocks.BLACK_CHESS_BRICKS.get(), "Black Chess Bricks");
		add(MSBlocks.DARK_GRAY_CHESS_BRICKS.get(), "Dark Gray Chess Bricks");
		add(MSBlocks.LIGHT_GRAY_CHESS_BRICKS.get(), "Light Gray Chess Bricks");
		add(MSBlocks.WHITE_CHESS_BRICKS.get(), "White Chess Bricks");
		add(MSBlocks.BLACK_CHESS_BRICK_SMOOTH.get(), "Smooth Black Chess Brick");
		add(MSBlocks.DARK_GRAY_CHESS_BRICK_SMOOTH.get(), "Smooth Dark Gray Chess Brick");
		add(MSBlocks.LIGHT_GRAY_CHESS_BRICK_SMOOTH.get(), "Smooth Light Gray Black Chess Brick");
		add(MSBlocks.WHITE_CHESS_BRICK_SMOOTH.get(), "Smooth White Chess Brick");
		add(MSBlocks.BLACK_CHESS_BRICK_TRIM.get(), "Black Chess Brick Trim");
		add(MSBlocks.DARK_GRAY_CHESS_BRICK_TRIM.get(), "Dark Gray Chess Brick Trim");
		add(MSBlocks.LIGHT_GRAY_CHESS_BRICK_TRIM.get(), "Light Gray Chess Brick Trim");
		add(MSBlocks.WHITE_CHESS_BRICK_TRIM.get(), "White Chess Brick Trim");
		add(MSBlocks.CHECKERED_STAINED_GLASS.get(), "Checkered Stained Glass");
		add(MSBlocks.BLACK_CROWN_STAINED_GLASS.get(), "Black Crown Stained Glass");
		add(MSBlocks.BLACK_PAWN_STAINED_GLASS.get(), "Black Pawn Stained Glass");
		add(MSBlocks.WHITE_CROWN_STAINED_GLASS.get(), "White Crown Stained Glass");
		add(MSBlocks.WHITE_PAWN_STAINED_GLASS.get(), "White Pawn Stained Glass");
		add(MSBlocks.STONE_CRUXITE_ORE.get(), "Cruxite Ore");
		add(MSBlocks.COBBLESTONE_CRUXITE_ORE.get(), "Cruxite Ore");
		add(MSBlocks.SANDSTONE_CRUXITE_ORE.get(), "Cruxite Ore");
		add(MSBlocks.RED_SANDSTONE_CRUXITE_ORE.get(), "Cruxite Ore");
		add(MSBlocks.NETHERRACK_CRUXITE_ORE.get(), "Cruxite Ore");
		add(MSBlocks.END_STONE_CRUXITE_ORE.get(), "Cruxite Ore");
		add(MSBlocks.SHADE_STONE_CRUXITE_ORE.get(), "Cruxite Ore");
		add(MSBlocks.PINK_STONE_CRUXITE_ORE.get(), "Cruxite Ore");
		add(MSBlocks.STONE_URANIUM_ORE.get(), "Uranium Ore");
		add(MSBlocks.COBBLESTONE_URANIUM_ORE.get(), "Uranium Ore");
		add(MSBlocks.SANDSTONE_URANIUM_ORE.get(), "Uranium Ore");
		add(MSBlocks.RED_SANDSTONE_URANIUM_ORE.get(), "Uranium Ore");
		add(MSBlocks.NETHERRACK_URANIUM_ORE.get(), "Uranium Ore");
		add(MSBlocks.END_STONE_URANIUM_ORE.get(), "Uranium Ore");
		add(MSBlocks.SHADE_STONE_URANIUM_ORE.get(), "Uranium Ore");
		add(MSBlocks.PINK_STONE_URANIUM_ORE.get(), "Uranium Ore");
		add(MSBlocks.NETHERRACK_COAL_ORE.get(), "Coal Ore");
		add(MSBlocks.SHADE_STONE_COAL_ORE.get(), "Coal Ore");
		add(MSBlocks.PINK_STONE_COAL_ORE.get(), "Coal Ore");
		add(MSBlocks.SANDSTONE_IRON_ORE.get(), "Iron Ore");
		add(MSBlocks.RED_SANDSTONE_IRON_ORE.get(), "Iron Ore");
		add(MSBlocks.END_STONE_IRON_ORE.get(), "Iron Ore");
		add(MSBlocks.SANDSTONE_GOLD_ORE.get(), "Gold Ore");
		add(MSBlocks.RED_SANDSTONE_GOLD_ORE.get(), "Gold Ore");
		add(MSBlocks.SHADE_STONE_GOLD_ORE.get(), "Gold Ore");
		add(MSBlocks.PINK_STONE_GOLD_ORE.get(), "Gold Ore");
		add(MSBlocks.END_STONE_REDSTONE_ORE.get(), "Redstone Ore");
		add(MSBlocks.STONE_QUARTZ_ORE.get(), "Quartz Ore");
		add(MSBlocks.PINK_STONE_LAPIS_ORE.get(), "Lapis Ore");
		add(MSBlocks.PINK_STONE_DIAMOND_ORE.get(), "Diamond Ore");
		add(MSBlocks.CRUXITE_BLOCK.get(), "Cruxite Block");
		add(MSBlocks.URANIUM_BLOCK.get(), "Uranium Block");
		add(MSBlocks.GENERIC_OBJECT.get(), "Perfectly Generic Object");
		add(MSBlocks.BLUE_DIRT.get(), "Blue Dirt");
		add(MSBlocks.THOUGHT_DIRT.get(), "Thought Dirt");
		add(MSBlocks.COARSE_STONE.get(), "Coarse Stone");
		add(MSBlocks.CHISELED_COARSE_STONE.get(), "Chiseled Coarse Stone");
		add(MSBlocks.COARSE_STONE_BRICKS.get(), "Coarse Stone Bricks");
		add(MSBlocks.COARSE_STONE_COLUMN.get(), "Coarse Stone Column");
		add(MSBlocks.CHISELED_COARSE_STONE_BRICKS.get(), "Chiseled Coarse Stone Bricks");
		add(MSBlocks.CRACKED_COARSE_STONE_BRICKS.get(), "Cracked Coarse Stone Bricks");
		add(MSBlocks.MOSSY_COARSE_STONE_BRICKS.get(), "Mossy Coarse Stone Bricks");
		add(MSBlocks.SHADE_STONE.get(), "Shade Stone");
		add(MSBlocks.SMOOTH_SHADE_STONE.get(), "Smooth Shade Stone");
		add(MSBlocks.SHADE_BRICKS.get(), "Shade Bricks");
		add(MSBlocks.SHADE_COLUMN.get(), "Shade Stone Column");
		add(MSBlocks.CHISELED_SHADE_BRICKS.get(), "Chiseled Shade Bricks");
		add(MSBlocks.CRACKED_SHADE_BRICKS.get(), "Cracked Shade Bricks");
		add(MSBlocks.MOSSY_SHADE_BRICKS.get(), "Mossy Shade Bricks");
		add(MSBlocks.BLOOD_SHADE_BRICKS.get(), "Bloody Shade Bricks");
		add(MSBlocks.TAR_SHADE_BRICKS.get(), "Oily Shade Bricks");
		add(MSBlocks.FROST_TILE.get(), "Frost Tiles");
		add(MSBlocks.CHISELED_FROST_TILE.get(), "Chiseled Frost Tiles");
		add(MSBlocks.FROST_BRICKS.get(), "Frost Bricks");
		add(MSBlocks.FROST_COLUMN.get(), "Frost Column");
		add(MSBlocks.CHISELED_FROST_BRICKS.get(), "Chiseled Frost Bricks");
		add(MSBlocks.CRACKED_FROST_BRICKS.get(), "Cracked Frost Bricks");
		add(MSBlocks.FLOWERY_FROST_BRICKS.get(), "Flowery Frost Bricks");
		add(MSBlocks.CAST_IRON.get(), "Cast-Iron");
		add(MSBlocks.CHISELED_CAST_IRON.get(), "Chiseled Cast-Iron");
		add(MSBlocks.STEEL_BEAM.get(), "Steel Beam");
		add(MSBlocks.MYCELIUM_COBBLESTONE.get(), "Mycelium Cobblestone");
		add(MSBlocks.MYCELIUM_STONE.get(), "Mycelium Stone");
		add(MSBlocks.POLISHED_MYCELIUM_STONE.get(), "Polished Mycelium Stone");
		add(MSBlocks.MYCELIUM_BRICKS.get(), "Mycelium Bricks");
		add(MSBlocks.MYCELIUM_COLUMN.get(), "Mycelium Column");
		add(MSBlocks.CHISELED_MYCELIUM_BRICKS.get(), "Chiseled Mycelium Bricks");
		add(MSBlocks.CRACKED_MYCELIUM_BRICKS.get(), "Cracked Mycelium Bricks");
		add(MSBlocks.MOSSY_MYCELIUM_BRICKS.get(), "Mossy Mycelium Bricks");
		add(MSBlocks.FLOWERY_MYCELIUM_BRICKS.get(), "Flowery Mycelium Bricks");
		add(MSBlocks.BLACK_STONE.get(), "Black Stone");
		add(MSBlocks.POLISHED_BLACK_STONE.get(), "Polished Black Stone");
		add(MSBlocks.BLACK_COBBLESTONE.get(), "Black Cobblestone");
		add(MSBlocks.BLACK_STONE_BRICKS.get(), "Black Stone Bricks");
		add(MSBlocks.BLACK_STONE_COLUMN.get(), "Black Stone Column");
		add(MSBlocks.CHISELED_BLACK_STONE_BRICKS.get(), "Chiseled Black Stone Bricks");
		add(MSBlocks.CRACKED_BLACK_STONE_BRICKS.get(), "Cracked Black Stone Bricks");
		add(MSBlocks.BLACK_SAND.get(), "Black Sand");
		add(MSBlocks.DECREPIT_STONE_BRICKS.get(), "Decrepit Stone Bricks");
		add(MSBlocks.FLOWERY_MOSSY_COBBLESTONE.get(), "Flowery Mossy Cobblestone");
		add(MSBlocks.MOSSY_DECREPIT_STONE_BRICKS.get(), "Mossy Decrepit Stone Bricks");
		add(MSBlocks.FLOWERY_MOSSY_STONE_BRICKS.get(), "Flowery Mossy Decrepit Stone Bricks");
		add(MSBlocks.COARSE_END_STONE.get(), "Coarse End Stone");
		add(MSBlocks.END_GRASS.get(), "End Grass Block");
		add(MSBlocks.CHALK.get(), "Chalk");
		add(MSBlocks.POLISHED_CHALK.get(), "Polished Chalk");
		add(MSBlocks.CHALK_BRICKS.get(), "Chalk Bricks");
		add(MSBlocks.CHALK_COLUMN.get(), "Chalk Column");
		add(MSBlocks.CHISELED_CHALK_BRICKS.get(), "Chiseled Chalk Bricks");
		add(MSBlocks.MOSSY_CHALK_BRICKS.get(), "Mossy Chalk Bricks");
		add(MSBlocks.FLOWERY_CHALK_BRICKS.get(), "Flowery Chalk Bricks");
		add(MSBlocks.PINK_STONE.get(), "Pink Stone");
		add(MSBlocks.POLISHED_PINK_STONE.get(), "Polished Pink Stone");
		add(MSBlocks.PINK_STONE_BRICKS.get(), "Pink Stone Bricks");
		add(MSBlocks.CHISELED_PINK_STONE_BRICKS.get(), "Chiseled Pink Stone Bricks");
		add(MSBlocks.CRACKED_PINK_STONE_BRICKS.get(), "Cracked Pink Stone Bricks");
		add(MSBlocks.MOSSY_PINK_STONE_BRICKS.get(), "Mossy Pink Stone Bricks");
		add(MSBlocks.PINK_STONE_COLUMN.get(), "Pink Stone Column");
		add(MSBlocks.BROWN_STONE.get(), "Brown Stone");
		add(MSBlocks.POLISHED_BROWN_STONE.get(), "Polished Brown Stone");
		add(MSBlocks.BROWN_STONE_BRICKS.get(), "Brown Stone Bricks");
		add(MSBlocks.BROWN_STONE_COLUMN.get(), "Brown Stone Column");
		add(MSBlocks.CRACKED_BROWN_STONE_BRICKS.get(), "Cracked Brown Stone Bricks");
		add(MSBlocks.GREEN_STONE.get(), "Green Stone");
		add(MSBlocks.POLISHED_GREEN_STONE.get(), "Polished Green Stone");
		add(MSBlocks.GREEN_STONE_BRICKS.get(), "Green Stone Bricks");
		add(MSBlocks.GREEN_STONE_COLUMN.get(), "Green Stone Column");
		add(MSBlocks.CHISELED_GREEN_STONE_BRICKS.get(), "Chiseled Green Stone Bricks");
		add(MSBlocks.HORIZONTAL_GREEN_STONE_BRICKS.get(), "Horizontal Green Stone Bricks");
		add(MSBlocks.VERTICAL_GREEN_STONE_BRICKS.get(), "Vertical Green Stone Bricks");
		add(MSBlocks.GREEN_STONE_BRICK_TRIM.get(), "Green Stone Brick Trim");
		add(MSBlocks.GREEN_STONE_BRICK_FROG.get(), "Green Stone Brick Frog Hieroglyph");
		add(MSBlocks.GREEN_STONE_BRICK_IGUANA_LEFT.get(), "Green Stone Brick Iguana Left Hieroglyph");
		add(MSBlocks.GREEN_STONE_BRICK_IGUANA_RIGHT.get(), "Green Stone Brick Iguana Right Hieroglyph");
		add(MSBlocks.GREEN_STONE_BRICK_LOTUS.get(), "Green Stone Brick Lotus Hieroglyph");
		add(MSBlocks.GREEN_STONE_BRICK_NAK_LEFT.get(), "Green Stone Brick Nakagator Left Hieroglyph");
		add(MSBlocks.GREEN_STONE_BRICK_NAK_RIGHT.get(), "Green Stone Brick Nakagator Right Hieroglyph");
		add(MSBlocks.GREEN_STONE_BRICK_SALAMANDER_LEFT.get(), "Green Stone Brick Salamander Left Hieroglyph");
		add(MSBlocks.GREEN_STONE_BRICK_SALAMANDER_RIGHT.get(), "Green Stone Brick Salamander Right Hieroglyph");
		add(MSBlocks.GREEN_STONE_BRICK_SKAIA.get(), "Green Stone Brick Skaia Hieroglyph");
		add(MSBlocks.GREEN_STONE_BRICK_TURTLE.get(), "Green Stone Brick Turtle Hieroglyph");
		add(MSBlocks.SANDSTONE_COLUMN.get(), "Sandstone Column");
		add(MSBlocks.CHISELED_SANDSTONE_COLUMN.get(), "Chiseled Sandstone Column");
		add(MSBlocks.RED_SANDSTONE_COLUMN.get(), "Red Sandstone Column");
		add(MSBlocks.CHISELED_RED_SANDSTONE_COLUMN.get(), "Chiseled Red Sandstone Column");
		add(MSBlocks.UNCARVED_WOOD.get(), "Uncarved Wood");
		addTooltip(MSBlocks.UNCARVED_WOOD.get(), "Woodgrain terrain");
		add(MSBlocks.CHIPBOARD.get(), "Chipboard");
		add(MSBlocks.WOOD_SHAVINGS.get(), "Wood Shavings");
		add(MSBlocks.DENSE_CLOUD.get(), "Dense Cloud");
		add(MSBlocks.BRIGHT_DENSE_CLOUD.get(), "Bright Dense Cloud");
		add(MSBlocks.SUGAR_CUBE.get(), "Sugar Cube");
		add(MSBlocks.SPIKES.get(), "Spikes");
		add(MSBlocks.GLOWING_LOG.get(), "Glowing Log");
		add(MSBlocks.FROST_LOG.get(), "Frost Log");
		add(MSBlocks.RAINBOW_LOG.get(), "Rainbow Log");
		add(MSBlocks.END_LOG.get(), "End Log");
		add(MSBlocks.VINE_LOG.get(), "Vine Oak Log");
		add(MSBlocks.FLOWERY_VINE_LOG.get(), "Flowery Vine Oak Log");
		add(MSBlocks.DEAD_LOG.get(), "Dead Log");
		add(MSBlocks.PETRIFIED_LOG.get(), "Petrified Log");
		add(MSBlocks.GLOWING_WOOD.get(), "Glowing Wood");
		add(MSBlocks.FROST_WOOD.get(), "Frost Wood");
		add(MSBlocks.RAINBOW_WOOD.get(), "Rainbow Wood");
		add(MSBlocks.END_WOOD.get(), "End Wood");
		add(MSBlocks.VINE_WOOD.get(), "Vine Wood");
		add(MSBlocks.FLOWERY_VINE_WOOD.get(), "Flowery Vine Wood");
		add(MSBlocks.DEAD_WOOD.get(), "Dead Wood");
		add(MSBlocks.PETRIFIED_WOOD.get(), "Petrified Wood");
		add(MSBlocks.GLOWING_PLANKS.get(), "Glowing Planks");
		add(MSBlocks.FROST_PLANKS.get(), "Frost Planks");
		add(MSBlocks.RAINBOW_PLANKS.get(), "Rainbow Planks");
		add(MSBlocks.END_PLANKS.get(), "End Planks");
		add(MSBlocks.DEAD_PLANKS.get(), "Dead Planks");
		add(MSBlocks.TREATED_PLANKS.get(), "Treated Planks");
		add(MSBlocks.FROST_LEAVES.get(), "Frost Leaves");
		add(MSBlocks.RAINBOW_LEAVES.get(), "Rainbow Leaves");
		add(MSBlocks.END_LEAVES.get(), "End Leaves");
		add(MSBlocks.RAINBOW_SAPLING.get(), "Rainbow Sapling");
		add(MSBlocks.END_SAPLING.get(), "End Sapling");
		add(MSBlocks.BLOOD_ASPECT_LOG.get(), "Blood Log");
		add(MSBlocks.BREATH_ASPECT_LOG.get(), "Breath Log");
		add(MSBlocks.DOOM_ASPECT_LOG.get(), "Doom Log");
		add(MSBlocks.HEART_ASPECT_LOG.get(), "Heart Log");
		add(MSBlocks.HOPE_ASPECT_LOG.get(), "Hope Log");
		add(MSBlocks.LIFE_ASPECT_LOG.get(), "Life Log");
		add(MSBlocks.LIGHT_ASPECT_LOG.get(), "Light Log");
		add(MSBlocks.MIND_ASPECT_LOG.get(), "Mind Log");
		add(MSBlocks.RAGE_ASPECT_LOG.get(), "Rage Log");
		add(MSBlocks.SPACE_ASPECT_LOG.get(), "Space Log");
		add(MSBlocks.TIME_ASPECT_LOG.get(), "Time Log");
		add(MSBlocks.VOID_ASPECT_LOG.get(), "Void Log");
		add(MSBlocks.BLOOD_ASPECT_PLANKS.get(), "Blood Planks");
		add(MSBlocks.BREATH_ASPECT_PLANKS.get(), "Breath Planks");
		add(MSBlocks.DOOM_ASPECT_PLANKS.get(), "Doom Planks");
		add(MSBlocks.HEART_ASPECT_PLANKS.get(), "Heart Planks");
		add(MSBlocks.HOPE_ASPECT_PLANKS.get(), "Hope Planks");
		add(MSBlocks.LIFE_ASPECT_PLANKS.get(), "Life Planks");
		add(MSBlocks.LIGHT_ASPECT_PLANKS.get(), "Light Planks");
		add(MSBlocks.MIND_ASPECT_PLANKS.get(), "Mind Planks");
		add(MSBlocks.RAGE_ASPECT_PLANKS.get(), "Rage Planks");
		add(MSBlocks.SPACE_ASPECT_PLANKS.get(), "Space Planks");
		add(MSBlocks.TIME_ASPECT_PLANKS.get(), "Time Planks");
		add(MSBlocks.VOID_ASPECT_PLANKS.get(), "Void Planks");
		add(MSBlocks.BLOOD_ASPECT_LEAVES.get(), "Blood Leaves");
		add(MSBlocks.BREATH_ASPECT_LEAVES.get(), "Breath Leaves");
		add(MSBlocks.DOOM_ASPECT_LEAVES.get(), "Doom Leaves");
		add(MSBlocks.HEART_ASPECT_LEAVES.get(), "Heart Leaves");
		add(MSBlocks.HOPE_ASPECT_LEAVES.get(), "Hope Leaves");
		add(MSBlocks.LIFE_ASPECT_LEAVES.get(), "Life Leaves");
		add(MSBlocks.LIGHT_ASPECT_LEAVES.get(), "Light Leaves");
		add(MSBlocks.MIND_ASPECT_LEAVES.get(), "Mind Leaves");
		add(MSBlocks.RAGE_ASPECT_LEAVES.get(), "Rage Leaves");
		add(MSBlocks.SPACE_ASPECT_LEAVES.get(), "Space Leaves");
		add(MSBlocks.TIME_ASPECT_LEAVES.get(), "Time Leaves");
		add(MSBlocks.VOID_ASPECT_LEAVES.get(), "Void Leaves");
		add(MSBlocks.BLOOD_ASPECT_SAPLING.get(), "Blood Sapling");
		add(MSBlocks.BREATH_ASPECT_SAPLING.get(), "Breath Sapling");
		add(MSBlocks.DOOM_ASPECT_SAPLING.get(), "Doom Sapling");
		add(MSBlocks.HEART_ASPECT_SAPLING.get(), "Heart Sapling");
		add(MSBlocks.HOPE_ASPECT_SAPLING.get(), "Hope Sapling");
		add(MSBlocks.LIFE_ASPECT_SAPLING.get(), "Life Sapling");
		add(MSBlocks.LIGHT_ASPECT_SAPLING.get(), "Light Sapling");
		add(MSBlocks.MIND_ASPECT_SAPLING.get(), "Mind Sapling");
		add(MSBlocks.RAGE_ASPECT_SAPLING.get(), "Rage Sapling");
		add(MSBlocks.SPACE_ASPECT_SAPLING.get(), "Space Sapling");
		add(MSBlocks.TIME_ASPECT_SAPLING.get(), "Time Sapling");
		add(MSBlocks.VOID_ASPECT_SAPLING.get(), "Void Sapling");
		addTooltip(MSBlocks.BLOOD_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.BREATH_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.DOOM_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.HEART_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.HOPE_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.LIFE_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.LIGHT_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.MIND_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.RAGE_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.SPACE_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.TIME_ASPECT_SAPLING.get(), "Not yet implemented");
		addTooltip(MSBlocks.VOID_ASPECT_SAPLING.get(), "Not yet implemented");
		add(MSBlocks.GLOWING_MUSHROOM.get(), "Glowing Mushroom");
		addStoreTooltip(MSBlocks.GLOWING_MUSHROOM.get(), "This mushroom tastes a bit better than any other around here, according to myself!");
		add(MSBlocks.DESERT_BUSH.get(), "Desert Bush");
		add(MSBlocks.BLOOMING_CACTUS.get(), "Blooming Cactus");
		add(MSBlocks.PETRIFIED_GRASS.get(), "Petrified Grass");
		add(MSBlocks.PETRIFIED_POPPY.get(), "Petrified Poppy");
		add(MSBlocks.STRAWBERRY.get(), "Strawberry");
		add(MSBlocks.ATTACHED_STRAWBERRY_STEM.get(), "Strawberry Stem");
		add(MSBlocks.STRAWBERRY_STEM.get(), "Strawberry Stem");
		add(MSBlocks.TALL_END_GRASS.get(), "End Grass");
		add(MSBlocks.GLOWFLOWER.get(), "Glowflower");
		add(MSBlocks.GLOWY_GOOP.get(), "Glowy Goop");
		add(MSBlocks.COAGULATED_BLOOD.get(), "Coagulated Blood");
		add(MSBlocks.PIPE.get(), "Pipe");
		add(MSBlocks.PIPE_INTERSECTION.get(), "Pipe Intersection");
		addTooltip(MSBlocks.PIPE_INTERSECTION.get(), "Astute engineers may note the lack of any openings and inability for anything to cross this intersection. In the business this is called 'useless'");
		add(MSBlocks.PARCEL_PYXIS.get(), "Parcel Pyxis");
		addTooltip(MSBlocks.PARCEL_PYXIS.get(), "This doesn't actually seem to do anything");
		add(MSBlocks.PYXIS_LID.get(), "Parcel Pyxis Lid");
		add(MSBlocks.NAKAGATOR_STATUE.get(), "Nakagator Statue");
		add(MSBlocks.BLACK_CHESS_BRICK_STAIRS.get(), "Black Chess Brick Stairs");
		add(MSBlocks.DARK_GRAY_CHESS_BRICK_STAIRS.get(), "Dark Gray Chess Brick Stairs");
		add(MSBlocks.LIGHT_GRAY_CHESS_BRICK_STAIRS.get(), "Light Gray Chess Brick Stairs");
		add(MSBlocks.WHITE_CHESS_BRICK_STAIRS.get(), "White Chess Brick Stairs");
		add(MSBlocks.COARSE_STONE_STAIRS.get(), "Coarse Stone Stairs");
		add(MSBlocks.COARSE_STONE_BRICK_STAIRS.get(), "Coarse Stone Brick Stairs");
		add(MSBlocks.SHADE_STAIRS.get(), "Shade Stone Stairs");
		add(MSBlocks.SHADE_BRICK_STAIRS.get(), "Shade Brick Stairs");
		add(MSBlocks.FROST_TILE_STAIRS.get(), "Frost Tile Stairs");
		add(MSBlocks.FROST_BRICK_STAIRS.get(), "Frost Brick Stairs");
		add(MSBlocks.CAST_IRON_STAIRS.get(), "Cast-Iron Stairs");
		add(MSBlocks.BLACK_STONE_STAIRS.get(), "Black Stone Stairs");
		add(MSBlocks.BLACK_STONE_BRICK_STAIRS.get(), "Black Stone Brick Stairs");
		add(MSBlocks.MYCELIUM_STAIRS.get(), "Mycelium Stairs");
		add(MSBlocks.MYCELIUM_BRICK_STAIRS.get(), "Mycelium Brick Stairs");
		add(MSBlocks.FLOWERY_MOSSY_STONE_BRICK_STAIRS.get(), "Flowery Mossy Stone Brick Stairs");
		add(MSBlocks.CHALK_STAIRS.get(), "Chalk Stairs");
		add(MSBlocks.CHALK_BRICK_STAIRS.get(), "Chalk Brick Stairs");
		add(MSBlocks.PINK_STONE_STAIRS.get(), "Pink Stone Stairs");
		add(MSBlocks.PINK_STONE_BRICK_STAIRS.get(), "Pink Stone Brick Stairs");
		add(MSBlocks.BROWN_STONE_STAIRS.get(), "Brown Stone Stairs");
		add(MSBlocks.BROWN_STONE_BRICK_STAIRS.get(), "Brown Stone Brick Stairs");
		add(MSBlocks.GREEN_STONE_STAIRS.get(), "Green Stone Stairs");
		add(MSBlocks.GREEN_STONE_BRICK_STAIRS.get(), "Green Stone Brick Stairs");
		add(MSBlocks.RAINBOW_PLANKS_STAIRS.get(), "Rainbow Planks Stairs");
		add(MSBlocks.END_PLANKS_STAIRS.get(), "End Planks Stairs");
		add(MSBlocks.DEAD_PLANKS_STAIRS.get(), "Dead Planks Stairs");
		add(MSBlocks.TREATED_PLANKS_STAIRS.get(), "Treated Planks Stairs");
		add(MSBlocks.STEEP_GREEN_STONE_BRICK_STAIRS_BASE.get(), "Steep Green Stone Brick Stairs Base");
		add(MSBlocks.STEEP_GREEN_STONE_BRICK_STAIRS_TOP.get(), "Steep Green Stone Brick Stairs Top");
		add(MSBlocks.BLACK_CHESS_BRICK_SLAB.get(), "Black Chess Brick Slab");
		add(MSBlocks.DARK_GRAY_CHESS_BRICK_SLAB.get(), "Dark Gray Chess Brick Slab");
		add(MSBlocks.LIGHT_GRAY_CHESS_BRICK_SLAB.get(), "Light Gray Chess Brick Slab");
		add(MSBlocks.WHITE_CHESS_BRICK_SLAB.get(), "White Chess Brick Slab");
		add(MSBlocks.CHALK_SLAB.get(), "Chalk Slab");
		add(MSBlocks.CHALK_BRICK_SLAB.get(), "Chalk Brick Slab");
		add(MSBlocks.PINK_STONE_SLAB.get(), "Pink Stone Slab");
		add(MSBlocks.PINK_STONE_BRICK_SLAB.get(), "Pink Stone Brick Slab");
		add(MSBlocks.BROWN_STONE_SLAB.get(), "Brown Stone Slab");
		add(MSBlocks.BROWN_STONE_BRICK_SLAB.get(), "Brown Stone Brick Slab");
		add(MSBlocks.GREEN_STONE_SLAB.get(), "Green Stone Slab");
		add(MSBlocks.GREEN_STONE_BRICK_SLAB.get(), "Green Stone Brick Slab");
		add(MSBlocks.RAINBOW_PLANKS_SLAB.get(), "Rainbow Planks Slab");
		add(MSBlocks.END_PLANKS_SLAB.get(), "End Planks Slab");
		add(MSBlocks.DEAD_PLANKS_SLAB.get(), "Dead Planks Slab");
		add(MSBlocks.TREATED_PLANKS_SLAB.get(), "Treated Planks Slab");
		add(MSBlocks.BLACK_STONE_SLAB.get(), "Black Stone Slab");
		add(MSBlocks.BLACK_STONE_BRICK_SLAB.get(), "Black Stone Brick Slab");
		add(MSBlocks.MYCELIUM_SLAB.get(), "Mycelium Slab");
		add(MSBlocks.MYCELIUM_BRICK_SLAB.get(), "Mycelium Brick Slab");
		add(MSBlocks.FLOWERY_MOSSY_STONE_BRICK_SLAB.get(), "Flowery Mossy Stone Brick Slab");
		add(MSBlocks.FROST_TILE_SLAB.get(), "Frost Tile Slab");
		add(MSBlocks.FROST_BRICK_SLAB.get(), "Frost Brick Slab");
		add(MSBlocks.SHADE_SLAB.get(), "Shade Stone Slab");
		add(MSBlocks.SHADE_BRICK_SLAB.get(), "Shade Brick Slab");
		add(MSBlocks.COARSE_STONE_SLAB.get(), "Coarse Stone Slab");
		add(MSBlocks.COARSE_STONE_BRICK_SLAB.get(), "Coarse Stone Brick Slab");
		add(MSBlocks.TRAJECTORY_BLOCK.get(), "Trajectory Block");
		addTooltip(MSBlocks.TRAJECTORY_BLOCK.get(), "Propels entities in the direction it faces, with an incoming redstone strength modifier.");
		add(MSBlocks.STAT_STORER.get(), "Stat Storer");
		addTooltip(MSBlocks.STAT_STORER.get(), "Lets off a redstone signal with the strength of the signal based on the active value type stored.");
		add(MSBlocks.REMOTE_OBSERVER.get(), "Remote Observer");
		addTooltip(MSBlocks.REMOTE_OBSERVER.get(), "Lets off a full strength redstone signal if the active condition is met.");
		add(MSBlocks.WIRELESS_REDSTONE_TRANSMITTER.get(), "Wireless Redstone Transmitter");
		addTooltip(MSBlocks.WIRELESS_REDSTONE_TRANSMITTER.get(), "Sends a signal to Wireless Redstone Receiver at the input coordinates if the coordinates are loaded.");
		add(MSBlocks.WIRELESS_REDSTONE_RECEIVER.get(), "Wireless Redstone Receiver");
		addTooltip(MSBlocks.WIRELESS_REDSTONE_RECEIVER.get(), "Receives signals from Wireless Redstone Transmitters.");
		add(MSBlocks.SOLID_SWITCH.get(), "Solid Switch");
		addTooltip(MSBlocks.SOLID_SWITCH.get(), "KACHUNK");
		add(MSBlocks.VARIABLE_SOLID_SWITCH.get(), "Variable Solid Switch");
		addTooltip(MSBlocks.VARIABLE_SOLID_SWITCH.get(), "The functionality of a solid switch but throw in the ability to change what redstone power it gives off.");
		add(MSBlocks.ONE_SECOND_INTERVAL_TIMED_SOLID_SWITCH.get(), "Timed Solid Switch (One Second)");
		addTooltip(MSBlocks.ONE_SECOND_INTERVAL_TIMED_SOLID_SWITCH.get(), "Loses one value of power every second until it turns off.");
		add(MSBlocks.TWO_SECOND_INTERVAL_TIMED_SOLID_SWITCH.get(), "Timed Solid Switch (Two Second)");
		addTooltip(MSBlocks.TWO_SECOND_INTERVAL_TIMED_SOLID_SWITCH.get(), "Loses one value of power every two seconds until it turns off.");
		add(MSBlocks.SUMMONER.get(), "Summoner");
		add(MSBlocks.AREA_EFFECT_BLOCK.get(), "Area Effect Block");
		addExtra(MSBlocks.AREA_EFFECT_BLOCK.get(), AreaEffectBlock.EFFECT_CHANGE_MESSAGE, "Effect type changed to %s with the amplification strength %s.");
		add(MSBlocks.PLATFORM_GENERATOR.get(), "Platform Generator");
		add(MSBlocks.PLATFORM_BLOCK.get(), "Platform Block");
		add(MSBlocks.PLATFORM_RECEPTACLE.get(), "Platform Receptacle");
		add(MSBlocks.ITEM_MAGNET.get(), "Item Magnet");
		add(MSBlocks.REDSTONE_CLOCK.get(), "Redstone Clock");
		add(MSBlocks.ROTATOR.get(), "Rotator");
		add(MSBlocks.TOGGLER.get(), "Toggler");
		add(MSBlocks.REMOTE_COMPARATOR.get(), "Remote Comparator");
		add(MSBlocks.STRUCTURE_CORE.get(), "Structure Core");
		add(MSBlocks.FALL_PAD.get(), "Fall Pad");
		add(MSBlocks.FRAGILE_STONE.get(), "Fragile Stone");
		add(MSBlocks.RETRACTABLE_SPIKES.get(), "Retractable Spikes");
		add(MSBlocks.BLOCK_PRESSURE_PLATE.get(), "Block Pressure Plate");
		add(MSBlocks.PUSHABLE_BLOCK.get(), "Pushable Block");
		add(MSBlocks.AND_GATE_BLOCK.get(), "AND Gate");
		add(MSBlocks.OR_GATE_BLOCK.get(), "OR Gate");
		add(MSBlocks.XOR_GATE_BLOCK.get(), "XOR Gate");
		add(MSBlocks.NAND_GATE_BLOCK.get(), "NAND Gate");
		add(MSBlocks.NOR_GATE_BLOCK.get(), "NOR Gate");
		add(MSBlocks.XNOR_GATE_BLOCK.get(), "XNOR Gate");
		add(MSBlocks.GATE.get(), "Gate");
		add(MSBlocks.RETURN_NODE.get(), "Return Node");
		MSBlocks.CRUXTRUDER.forEachBlock(block -> add(block, "Cruxtruder"));
		add(MSBlocks.CRUXTRUDER_LID.get(), "Cruxtruder Lid");
		MSBlocks.TOTEM_LATHE.forEachBlock(block -> add(block, "Totem Lathe"));
		MSBlocks.ALCHEMITER.forEachBlock(block -> add(block, "Alchemiter"));
		MSBlocks.PUNCH_DESIGNIX.forEachBlock(block -> add(block, "Punch Designix"));
		add(MSBlocks.HOLOPAD.get(), "Holopad");
		add(MSBlocks.MINI_CRUXTRUDER.get(), "Miniature Cruxtruder");
		add(MSBlocks.MINI_TOTEM_LATHE.get(), "Miniature Totem Lathe");
		add(MSBlocks.MINI_ALCHEMITER.get(), "Miniature Alchemiter");
		add(MSBlocks.MINI_PUNCH_DESIGNIX.get(), "Miniature Punch Designix");
		add(MSBlocks.COMPUTER.get(), "SBURB Computer");
		add(MSBlocks.LAPTOP.get(), "Laptop");
		add(MSBlocks.CROCKERTOP.get(), "Crockertop");
		add(MSBlocks.HUBTOP.get(), "Hubtop");
		add(MSBlocks.LUNCHTOP.get(), "Lunchtop");
		add(MSBlocks.OLD_COMPUTER.get(), "Old Computer");
		add(MSBlocks.TRANSPORTALIZER.get(), "Transportalizer");
		add(MSBlocks.TRANS_PORTALIZER.get(), "TRANSportalizer");
		add(MSBlocks.SENDIFICATOR.get(), "Sendificator");
		addTooltip(MSBlocks.SENDIFICATOR.get(), "Approximately head sized");
		add(MSBlocks.GRIST_WIDGET.get(), "GristWidget 12000");
		add(MSBlocks.URANIUM_COOKER.get(), "Cookalyzer");
		add(MSBlocks.CRUXITE_DOWEL.get(), "Cruxite Dowel");
		addExtra(MSBlocks.CRUXITE_DOWEL.get(), "invalid", "Invalid Data");
		MSBlocks.LOTUS_TIME_CAPSULE_BLOCK.forEachBlock(block -> add(block, "Lotus Time Capsule"));
		add(MSBlocks.GOLD_SEEDS.get(), "Golden Seeds");
		addTooltip(MSBlocks.GOLD_SEEDS.get(), "These seeds are made out of 24-karat gold!");
		addStoreTooltip(MSBlocks.GOLD_SEEDS.get(), "Do you like regular seeds? This here is the luxury variant!");
		add(MSBlocks.WOODEN_CACTUS.get(), "Wooden Cactus");
		add(MSBlocks.APPLE_CAKE.get(), "Apple Cake");
		addStoreTooltip(MSBlocks.APPLE_CAKE.get(), "Cakes are truly the best when made with apples!");
		add(MSBlocks.BLUE_CAKE.get(), "Blue Cake");
		addStore(MSBlocks.BLUE_CAKE.get(), "Cold Cake?");
		addStoreTooltip(MSBlocks.BLUE_CAKE.get(), "Be careful with that one. It could be a Cold Cake. One bite and it will freeze you more than this weather does.");
		add(MSBlocks.COLD_CAKE.get(), "Really Cold Cake");
		addStore(MSBlocks.COLD_CAKE.get(), "Blue Cake?");
		addStoreTooltip(MSBlocks.COLD_CAKE.get(), "It's blue, so I'm pretty sure that it's the fabled Blue Cake. It is said to get you moving!");
		add(MSBlocks.RED_CAKE.get(), "Red Cake");
		addStore(MSBlocks.RED_CAKE.get(), "Hot Cake?");
		addStoreTooltip(MSBlocks.RED_CAKE.get(), "Play a prank on your friends with this really hot cake!");
		add(MSBlocks.HOT_CAKE.get(), "Really Hot Cake");
		addStore(MSBlocks.HOT_CAKE.get(), "Red Cake?");
		addStoreTooltip(MSBlocks.HOT_CAKE.get(), "Did you know that red cakes heal you? I'm 90%% sure that this is one of those cakes.");
		add(MSBlocks.REVERSE_CAKE.get(), "Reverse Cake");
		add(MSBlocks.FUCHSIA_CAKE.get(), "Fuchsia Cake");
		add(MSBlocks.NEGATIVE_CAKE.get(), "Negative Cake");
		addStore(MSBlocks.FUCHSIA_CAKE.get(), "Fuschia Cake");
		add(MSBlocks.CARROT_CAKE.get(), "Carrot Cake");
		add(MSBlocks.PRIMED_TNT.get(), "Primed TNT");
		add(MSBlocks.UNSTABLE_TNT.get(), "Unstable TNT");
		add(MSBlocks.INSTANT_TNT.get(), "Instant TNT");
		add(MSBlocks.WOODEN_EXPLOSIVE_BUTTON.get(), "TNT Button");
		add(MSBlocks.STONE_EXPLOSIVE_BUTTON.get(), "TNT Button");
		add(MSBlocks.BLENDER.get(), "Blender");
		add(MSBlocks.CHESSBOARD.get(), "Chessboard");
		add(MSBlocks.CASSETTE_PLAYER.get(), "Cassette Player");
		add(MSBlocks.MINI_FROG_STATUE.get(), "Frog Statue Replica");
		addStoreTooltip(MSBlocks.MINI_FROG_STATUE.get(), "Some say it's creepy, some say it's cute, others would say it's contraband, so keep it out of sight!");
		add(MSBlocks.MINI_WIZARD_STATUE.get(), "Small Wizard Statue");
		add(MSBlocks.MINI_TYPHEUS_STATUE.get(), "Small Denizen Statue"); //Referred to as typheus in all code except name here. Its generic now but more denizen statues may get added
		add(MSBlocks.GLOWYSTONE_DUST.get(), "Glowystone Dust");
		add(MSBlocks.OIL.get(), "Oil");
		add(MSBlocks.BLOOD.get(), "Blood");
		add(MSBlocks.BRAIN_JUICE.get(), "Brain Juice");
		add(MSBlocks.WATER_COLORS.get(), "Paint");
		add(MSBlocks.ENDER.get(), "End Fluid");
		add(MSBlocks.LIGHT_WATER.get(), "Light Water");
		
		add(MSItems.CLAW_HAMMER9j, "Claw Hammer");
		addTooltip(MSItems.CLAW_HAMMER9j, "An average hammer found in about any garage. It can also destroy blocks");
		add(MSItems.SLEDGE_HAMMER9j, "Sledgehammer");
		addTooltip(MSItems.SLEDGE_HAMMER9j, "A decently large, yet average, hammer. It can also destroy blocks");
		add(MSItems.MAILBOX9j, "Mailbox");
		addTooltip(MSItems.MAILBOX9j, "Literally just a mailbox");
		add(MSItems.BLACKSMITH_HAMMER9j, "Blacksmith's Hammer");
		addTooltip(MSItems.BLACKSMITH_HAMMER9j, "A strong hammer that would commonly be found in a blacksmiths. It can also break blocks");
		add(MSItems.POGO_HAMMER9j, "Pogo Hammer");
		addTooltip(MSItems.POGO_HAMMER9j, "A slimy hammer with the ability to bounce back your enemies. It can also break blocks");
		add(MSItems.WRINKLEFUCKER9j, "Wrinklefucker");
		addTooltip(MSItems.WRINKLEFUCKER9j, "Is there anything more iconic?");
		add(MSItems.TELESCOPIC_SASSACRUSHER9j, "Telescopic Sassacrusher");
		addTooltip(MSItems.TELESCOPIC_SASSACRUSHER9j, "OH ho! The perfect hammer for the dashing young gent who loves a pranksters gambit or a good grist horde!");
		add(MSItems.DEMOCRATIC_DEMOLITIONER9j, "DEMOCRATIC DEMOLITIONER");
		add(MSItems.REGI_HAMMER9j, "Regihammer");
		add(MSItems.FEAR_NO_ANVIL9j, "Fear No Anvil");
		addTooltip(MSItems.FEAR_NO_ANVIL9j, "Break blocks and stop clocks with the hammer of Hephaestus");
		add(MSItems.MELT_MASHER9j, "Melt-Masher");
		addTooltip(MSItems.MELT_MASHER9j, "This hot-commodity of a hammer looks like it came fresh out of the furnace! Leaves foes with third-degree burns.");
		add(MSItems.ESTROGEN_EMPOWERED_EVERYTHING_ERADICATOR9j, "Estrogen-Empowered Everything Eradicator");
		addTooltip(MSItems.ESTROGEN_EMPOWERED_EVERYTHING_ERADICATOR9j, "Eradicate everything with girl power!");
		add(MSItems.EEEEEEEEEEEE9j, "the swEEt bro and hElla jEff EstrogEn EmpowErEd EvErything Eradicator");
		addTooltip(MSItems.EEEEEEEEEEEE9j, "Eradicate everything with girl power?");
		add(MSItems.ZILLYHOO_HAMMER9j, "Warhammer of Zillyhoo");
		addTooltip(MSItems.ZILLYHOO_HAMMER9j, "HooHoo This zilly weapon is rumoured to be able to defeat the strongest enemies!");
		add(MSItems.POPAMATIC_VRILLYHOO9j, "Pop-a-matic Vrillyhoo Hammer");
		addTooltip(MSItems.POPAMATIC_VRILLYHOO9j, "Pop! Hit an enemy and let the dice fly for  damage bonus! It can Also Break blocks.");
		add(MSItems.SCARLET_ZILLYHOO9j, "Scarlet Zillyhoo");
		addTooltip(MSItems.SCARLET_ZILLYHOO9j, "A legendary weapon, forged from the most powerful of charmic destiny and..a red frog...");
		add(MSItems.MWRTHWL9j, "Mwrthwl");
		add(MSItems.SORD9j, "Sord.....");
		addTooltip(MSItems.SORD9j, "A shitty sword. Not much more too it.");
		addExtra(MSItems.SORD9j, OnHitEffect.SORD_DROP_MESSAGE, "The shittiness of the sord made it phase through your hand");
		add(MSItems.PAPER_SWORD9j, "Paper Sword");
		addTooltip(MSItems.PAPER_SWORD9j, "None shall be the wiser. It is the perfect crime.");
		add(MSItems.SWONGE9j, "Swonge");
		addTooltip(MSItems.SWONGE9j, "Schlorp.");
		add(MSItems.WET_SWONGE9j, "Wet Swonge");
		addTooltip(MSItems.WET_SWONGE9j, "Splorch.");
		add(MSItems.PUMORD9j, "Pumord");
		addTooltip(MSItems.PUMORD9j, "A sword made of pumice. Is it really much of a blade anymore?");
		add(MSItems.WET_PUMORD9j, "Wet Pumord");
		addTooltip(MSItems.WET_PUMORD9j, "Yeoch! Looks preddy hot.");
		add(MSItems.CACTACEAE_CUTLASS9j, "Cactaceae Cutlass");
		addTooltip(MSItems.CACTACEAE_CUTLASS9j, "A spiny sword made of cactus, you might hurt yourself more on the spines then the blade would your enemies");
		addStoreTooltip(MSItems.CACTACEAE_CUTLASS9j, "It's not as quenchy, but if it comes down to it you can always drink the blood of your foes.");
		add(MSItems.STEAK_SWORD9j, "Steak Sword");
		addTooltip(MSItems.STEAK_SWORD9j, "This item has two purposes: a weapon for slicing your foes AND an expensive dinner!");
		addStoreTooltip(MSItems.STEAK_SWORD9j, "A sword? Made of meat? That's like, double cool!");
		add(MSItems.BEEF_SWORD9j, "Raw Beef Sword");
		add(MSItems.IRRADIATED_STEAK_SWORD9j, "Irradiated Steak Sword");
		add(MSItems.MACUAHUITL9j, "Macuahuitl");
		add(MSItems.FROSTY_MACUAHUITL9j, "Frosty Macuahuitl");
		addTooltip(MSItems.FROSTY_MACUAHUITL9j, "Now featuring real Ice Shards");
		add(MSItems.KATANA9j, "Katana");
		addTooltip(MSItems.KATANA9j, "A powerful Katana, once wielded by the most powerful of Otaku Masters");
		add(MSItems.UNBREAKABLE_KATANA9j, "Unbreakable Katana");
		addTooltip(MSItems.UNBREAKABLE_KATANA9j, "This Katana has been fused with bedrock to make it even more kawai- I mean powerful!");
		add(MSItems.ANGEL_APOCALYPSE9j, "Angel Apocalypse");
		addTooltip(MSItems.ANGEL_APOCALYPSE9j, "This sword either starts the end of the world or prevents the end from occurring. Hopefully the latter!");
		add(MSItems.FIRE_POKER9j, "Fire Poker");
		addTooltip(MSItems.FIRE_POKER9j, "A flaming blade! Or just that thing you find next to wood fire places.....either way it can burn you enemies");
		addStoreTooltip(MSItems.FIRE_POKER9j, "Make sure you don't drop this like it's hot. Because it is hot.");
		add(MSItems.TOO_HOT_TO_HANDLE9j, "Too Hot to Handle");
		addTooltip(MSItems.TOO_HOT_TO_HANDLE9j, "This sick blade slices and burns through enemies like there is no tomorrow!");
		add(MSItems.CALEDSCRATCH9j, "Caledscratch");
		addTooltip(MSItems.CALEDSCRATCH9j, "The chosen weapon of Hephaestus, Guardian of the land of heat and clockwork. They say if you break this blade you incur their godly wrath.");
		add(MSItems.CALEDFWLCH9j, "Caledfwlch");
		addTooltip(MSItems.CALEDFWLCH9j, "Dumb Welsh Sword. Probably has some chamic destiny.");
		add(MSItems.ROYAL_DERINGER9j, "Royal Deringer");
		add(MSItems.CLAYMORE9j, "Claymore");
		addTooltip(MSItems.CLAYMORE9j, "A featherweight amongst greatswords. It's still bloody heavy, though!");
		add(MSItems.CUTLASS_OF_ZILLYWAIR9j, "Cutlass of Zillywair");
		addTooltip(MSItems.CUTLASS_OF_ZILLYWAIR9j, "HooHoo! Another Zilly weapon imported straight from Zillywair! Enemies beware!");
		add(MSItems.REGISWORD9j, "Regisword");
		addTooltip(MSItems.REGISWORD9j, "A sword once wielded by the most wicked of ArchAgents......and the most devout mail lady");
		add(MSItems.CRUEL_FATE_CRUCIBLE9j, "Cruel Fate Crucible");
		addTooltip(MSItems.CRUEL_FATE_CRUCIBLE9j, "The aura of Nemesis enacts retribution on those who hurt it's wielder");
		add(MSItems.SCARLET_RIBBITAR9j, "Scarlet Ribbitar");
		add(MSItems.DOGG_MACHETE9j, "Snoop Dogg Snow Cone Machete");
		add(MSItems.COBALT_SABRE9j, "Cobalt Cobeam Coblade");
		add(MSItems.QUANTUM_SABRE9j, "Quantum Sabre");
		add(MSItems.SHATTER_BEACON9j, "ShatterBeacon");
		add(MSItems.SHATTER_BACON9j, "ShatterBacon");
		addTooltip(MSItems.SHATTER_BACON9j, "This thing is so unspeakably greasy you are having a hard time even holding it.");
		addExtra(MSItems.SHATTER_BACON9j, OnHitEffect.SORD_DROP_MESSAGE, "The grease caused the ShatterBacon to slip from your grasp!");
		add(MSItems.SUBTRACTSHUMIDIRE_ZOMORRODNEGATIVE9j, "SUBTRACTSHUMIDIR-E ZOMORRODNEGATIVE");
		add(MSItems.DAGGER9j, "Dagger");
		add(MSItems.NIFE9j, "nife.");
		addExtra(MSItems.NIFE9j, OnHitEffect.SORD_DROP_MESSAGE, "Whoopsies doopsies you dwopped the nife!!");
		add(MSItems.LIGHT_OF_MY_KNIFE9j, "Light Of My Knife");
		add(MSItems.STARSHARD_TRI_BLADE9j, "Starshard Tri-Blade");
		add(MSItems.TOOTHRIPPER9j, "Toothripper");
		add(MSItems.BATLEACKS9j, "batleacks!!");
		addTooltip(MSItems.BATLEACKS9j, "A shitty axe. Not much more to it.");
		addExtra(MSItems.BATLEACKS9j, OnHitEffect.SORD_DROP_MESSAGE, "The shittiness of the batleacks made it phase through your hand");
		add(MSItems.COPSE_CRUSHER9j, "Coppice Crusher");
		addStoreTooltip(MSItems.COPSE_CRUSHER9j, "Good for crushing trees and your enemies!");
		add(MSItems.QUENCH_CRUSHER9j, "Quench Crusher");
		addTooltip(MSItems.QUENCH_CRUSHER9j, "Quench Crusher... isn't that the opposite of what it does? Shouldn't it be Thirst Quencher? Drought Crusher? Whatever.");
		addStoreTooltip(MSItems.QUENCH_CRUSHER9j, "This fruity-flavored axe has been passed down from generation to generation.");
		add(MSItems.MELONSBANE9j, "Melonsbane");
		addTooltip(MSItems.MELONSBANE9j, "It seems to be multipurpose; you can commit acts of violence against melons and foes.");
		addExtra(MSItems.MELONSBANE9j, "message", "M- M- M- MELON OVERLOAD!!!!!!");
		add(MSItems.CROP_CHOP9j, "Crop Chop");
		addTooltip(MSItems.CROP_CHOP9j, "Double crop from a single chop. Excellent!");
		add(MSItems.THE_LAST_STRAW9j, "The Last Straw");
		add(MSItems.BATTLEAXE9j, "Battleaxe");
		addTooltip(MSItems.BATTLEAXE9j, "Forget that sissy hatchet stuff, this is an axe made for the battlefield. Chop heads, not wood!");
		add(MSItems.CANDY_BATTLEAXE9j, "Candy Battleaxe");
		addTooltip(MSItems.CANDY_BATTLEAXE9j, "Oh, how glory and honor is sweet!");
		add(MSItems.CHOCO_LOCO_WOODSPLITTER9j, "Choco Loco Woodsplitter");
		addTooltip(MSItems.CHOCO_LOCO_WOODSPLITTER9j, "Now to match this, you'd just need armor engraved with 'I'm a chocoholic!'");
		add(MSItems.STEEL_EDGE_CANDYCUTTER9j, "Choco Loco Steeled Cocoa Candycutter");
		addTooltip(MSItems.STEEL_EDGE_CANDYCUTTER9j, "All the benefits of the Choco Loco Woodsplitter, now with more bloodshed! Perfect!");
		add(MSItems.BLACKSMITH_BANE9j, "Blacksmith's Bane");
		add(MSItems.REGIAXE9j, "Regiaxe");
		add(MSItems.GOTHY_AXE9j, "Gothy Axe");
        add(MSItems.SURPRISE_AXE9j, "Kundler Surprise Axe");
        addTooltip(MSItems.SURPRISE_AXE9j, "Who knows what surprises this bad boy has in store!");
		addExtra(MSItems.SURPRISE_AXE9j, "message", "WOW! NO WAY! You found a %s from your opponent!");
		add(MSItems.SHOCK_AXE9j, "Kundler Shock Axe");
		addTooltip(MSItems.SHOCK_AXE9j, "An electric surprise!");
		add(MSItems.SHOCK_AXE_UNPOWERED9j, "Kundler Shock Axe");
		addTooltip(MSItems.SHOCK_AXE_UNPOWERED9j, "An electric surprise!");
		add(MSItems.SCRAXE9j, "Scraxe");
		add(MSItems.LORENTZ_DISTRANSFORMATIONER9j, "Lorentz Distransformationer");
		addTooltip(MSItems.LORENTZ_DISTRANSFORMATIONER9j, "In physics, the Lorentz transformations are a six-parameter family of linear transformations from a coordinate frame in spacetime to another frame that moves at a constant velocity relative to the former. The respective inverse transformation is then parametrized by the negative of this velocity.");
		add(MSItems.PISTON_POWERED_POGO_AXEHAMMER9j, "Piston-Powered Pogo Pulverizer");
		add(MSItems.RUBY_CROAK9j, "Ruby Croak");
		add(MSItems.HEPHAESTUS_LUMBERJACK9j, "Hephaestus' Lumberjack");
		add(MSItems.FISSION_FOCUSED_FAULT_FELLER9j, "Fission-Focused Fault Feller");
		add(MSItems.BISECTOR9j, "Bisector");
		addTooltip(MSItems.BISECTOR9j, "Cleave foes in twain... with pride :]");
		add(MSItems.FINE_CHINA_AXE9j, "Fine China Axe");
		addTooltip(MSItems.FINE_CHINA_AXE9j, "Physically I'm here but mentally I'm still thinking about that ceramic battle axe...");
		add(MSItems.DICE9j, "Dice");
		addTooltip(MSItems.DICE9j, "Dungeons and Dragons anybody?");
		add(MSItems.FLUORITE_OCTET9j, "Fluorite Octet");
		addTooltip(MSItems.FLUORITE_OCTET9j, "Magical Dice! Let 'em roll!");
		add(MSItems.CAT_CLAWS_DRAWN9j, "Cat Claws");
		add(MSItems.CAT_CLAWS_SHEATHED9j, "Cat Claws");
		add(MSItems.SKELETONIZER_DRAWN9j, "Skeletonizer");
		addTooltip(MSItems.SKELETONIZER_DRAWN9j, "Why don't skeletons get upset? Because nothing gets under their skin! This weapon sure might however.");
		add(MSItems.SKELETONIZER_SHEATHED9j, "Skeletonizer");
		addTooltip(MSItems.SKELETONIZER_SHEATHED9j, "Why don't skeletons get upset? Because nothing gets under their skin! This weapon sure might however.");
		add(MSItems.SKELETON_DISPLACER_DRAWN9j, "Skeleton Displacer");
		addTooltip(MSItems.SKELETON_DISPLACER_DRAWN9j, "Effective against skeletons!");
		add(MSItems.SKELETON_DISPLACER_SHEATHED9j, "Skeleton Displacer");
		addTooltip(MSItems.SKELETON_DISPLACER_SHEATHED9j, "Effective against skeletons!");
		add(MSItems.TEARS_OF_THE_ENDERLICH_DRAWN9j, "Tears of the Enderlich");
		addTooltip(MSItems.TEARS_OF_THE_ENDERLICH_DRAWN9j, "Effective against liches!");
		add(MSItems.TEARS_OF_THE_ENDERLICH_SHEATHED9j, "Tears of the Enderlich");
		addTooltip(MSItems.TEARS_OF_THE_ENDERLICH_SHEATHED9j, "Effective against liches!");
		add(MSItems.ACTION_CLAWS_DRAWN9j, "Action Claws");
		add(MSItems.ACTION_CLAWS_SHEATHED9j, "Action Claws");
		add(MSItems.LIPSTICK_CHAINSAW9j, "Chainsaw");
		add(MSItems.LIPSTICK9j, "Jade Lipstick");
		add(MSItems.THISTLEBLOWER9j, "Thistleblower");
		add(MSItems.THISTLEBLOWER_LIPSTICK9j, "Rosy Lipstick");
		add(MSItems.EMERALD_IMMOLATOR9j, "Emerald Immolator");
		add(MSItems.EMERALD_IMMOLATOR_LIPSTICK9j, "Lipodemic Lipstick");
		add(MSItems.FROSTTOOTH9j, "Frosttooth");
		add(MSItems.FROSTTOOTH_LIPSTICK9j, "Calcium Froststick");
		addTooltip(MSItems.FROSTTOOTH_LIPSTICK9j, "Feels cold and sharp");
		add(MSItems.OBSIDIATOR9j, "Obsidiator");
		add(MSItems.OBSIDIATOR_LIPSTICK9j, "Fuschia Lipstick");
		add(MSItems.JOUSTING_LANCE9j, "Jousting Lance");
		add(MSItems.CIGARETTE_LANCE9j, "Cigarette Holder Lance");
		add(MSItems.LUCERNE_HAMMER9j, "Lucerne Hammer");
		add(MSItems.LUCERNE_HAMMER_OF_UNDYING9j, "Lucerne Hammer of Undying");
		addTooltip(MSItems.LUCERNE_HAMMER_OF_UNDYING9j, "Delays down your imminent doom");
		add(MSItems.OBSIDIAN_AXE_KNIFE9j, "Obsidian Axe Knife");
		add(MSItems.FAN9j, "Fan");
		add(MSItems.TYPHONIC_TRIVIALIZER9j, "Typhonic Trivializer");
		addTooltip(MSItems.TYPHONIC_TRIVIALIZER9j, "It's easy being breezy, with this denizen's boon");
		add(MSItems.SICKLE9j, "Sickle");
		add(MSItems.BISICKLE9j, "Bisickle");
		add(MSItems.OW_THE_EDGE9j, "oW THE EDGE");
		add(MSItems.THORNY_SUBJECT9j, "A Thorny Subject");
		add(MSItems.HEMEOREAPER9j, "Hemeoreaper");
		addTooltip(MSItems.HEMEOREAPER9j, "You get the feeling you should hide this away, or maybe paint it a nice gray.");
		add(MSItems.HOMES_SMELL_YA_LATER9j, "Homes Smell Ya Later");
		add(MSItems.FUDGESICKLE9j, "Fudgesickle");
		addTooltip(MSItems.FUDGESICKLE9j, "Whose idea was this?");
		add(MSItems.REGISICKLE9j, "Regisickle");
		addTooltip(MSItems.REGISICKLE9j, "A black sickle wielded by Dersites and Agents!");
		add(MSItems.HERETICUS_AURURM9j, "Hereticus Aururm");
		addTooltip(MSItems.HERETICUS_AURURM9j, "Did the Dersites get their Latin correct? I dunno, probably not. Go ask a Roman.");
		add(MSItems.CLAW_SICKLE9j, "Clawsickle");
		addTooltip(MSItems.CLAW_SICKLE9j, "This crabby blade can hook and pinch your enemies for you!");
		add(MSItems.CLAW_OF_NRUBYIGLITH9j, "Claw of Nrub'yiglith");
		addTooltip(MSItems.CLAW_OF_NRUBYIGLITH9j, "Even though it's no longer a part of what you presume to be a living being, it still feels... alive.");
		add(MSItems.CANDY_SICKLE9j, "Candy Sickle");
		add(MSItems.SCYTHE9j, "Scythe");
		add(MSItems.EIGHTBALL_SCYTHE9j, "Eightball Scythe");
		add(MSItems.DEUCE_CLUB9j, "Deuce Club");
		addTooltip(MSItems.DEUCE_CLUB9j, "The weakest club in the world");
		add(MSItems.STALE_BAGUETTE9j, "Stale Baguette");
		add(MSItems.GLUB_CLUB9j, "Glub Club");
		addTooltip(MSItems.GLUB_CLUB9j, "Ever been smacked with a raw fish?");
		add(MSItems.NIGHT_CLUB9j, "Nightclub");
		addTooltip(MSItems.NIGHT_CLUB9j, "Wanna go...clubbing?");
		add(MSItems.NIGHTSTICK9j, "Nightstick");
		addTooltip(MSItems.NIGHTSTICK9j, "NO CLUBBING MOVE ALONG.");
		add(MSItems.RED_EYES9j, "Red Eyes");
		add(MSItems.PRISMARINE_BASHER9j, "Prismarine Basher");
		addTooltip(MSItems.PRISMARINE_BASHER9j, "Smells like sea salt, unsurprisingly.");
		add(MSItems.CLUB_ZERO9j, "Club Zero");
		addTooltip(MSItems.CLUB_ZERO9j, "This club is so cold, even just holding it makes your hand numb. But you endure it nonetheless.");
		add(MSItems.POGO_CLUB9j, "Pogo Club");
		addTooltip(MSItems.POGO_CLUB9j, "Boing! Bounce back your foes with this bouncy weapon!");
		addStoreTooltip(MSItems.POGO_CLUB9j, "Strive to touch the sky, and smash a few skulls on the way up!");
		add(MSItems.BARBER_BASHER9j, "Barber Basher");
		add(MSItems.METAL_BAT9j, "Metal Bat");
		addTooltip(MSItems.METAL_BAT9j, "Regular weapons not working for you? Try beating foes with an average bat!");
		add(MSItems.CLOWN_CLUB9j, "Clown Club");
		addTooltip(MSItems.CLOWN_CLUB9j, "Rage inducing. Why would you make this");
		add(MSItems.SPIKED_CLUB9j, "Spiked Club");
		addTooltip(MSItems.SPIKED_CLUB9j, "About what it sounds like");
		add(MSItems.MACE9j, "Mace");
		add(MSItems.M_ACE9j, "mACE");
		add(MSItems.DESOLATOR_MACE9j, "Desolator Mace");
		addTooltip(MSItems.DESOLATOR_MACE9j, "Void your enemies existence. Is the damage really that low?");
		add(MSItems.BLAZING_GLORY9j, "Blazing Glory");
		add(MSItems.HORSE_HITCHER9j, "Cast Iron Horse Hitcher");
		add(MSItems.ACE_OF_SPADES9j, "Ace of Spades");
		addStore(MSItems.ACE_OF_SPADES9j, "Shovel Sigil");
		addStoreTooltip(MSItems.ACE_OF_SPADES9j, "Who knows, maybe this has digging magic?");
		add(MSItems.CLUB_OF_FELONY9j, "Club of Felony");
		add(MSItems.ACE_OF_CLUBS9j, "Ace of Clubs");
		addStore(MSItems.ACE_OF_CLUBS9j, "Clover Sigil");
		addStoreTooltip(MSItems.ACE_OF_CLUBS9j, "Perhaps this slip of paper has luck magic?");
		add(MSItems.CUESTICK9j, "Ultra-Violence Cuestick");
		add(MSItems.ACE_OF_DIAMONDS9j, "Ace of Diamonds");
		addStore(MSItems.ACE_OF_DIAMONDS9j, "Star Sigil");
		addStoreTooltip(MSItems.ACE_OF_DIAMONDS9j, "This star-shaped sigil probably has magical astral properties.");
		add(MSItems.ACE_OF_HEARTS9j, "Ace of Hearts");
		addStore(MSItems.ACE_OF_HEARTS9j, "Heart Sigil");
		addStoreTooltip(MSItems.ACE_OF_HEARTS9j, "This thing MUST have magical love powers!");
		add(MSItems.WHITE_KINGS_SCEPTER9j, "Kings Scepter");
		addTooltip(MSItems.WHITE_KINGS_SCEPTER9j, "Starts the Reckoning in the capable hands of a carapacian. It would be hard to call YOU capable however...");
		add(MSItems.BLACK_KINGS_SCEPTER9j, "Kings Scepter");
		addTooltip(MSItems.BLACK_KINGS_SCEPTER9j, "Super sizes and prototypes a king, but useless to you. Good for whacking however!");
		add(MSItems.CANE9j, "Cane");
		addTooltip(MSItems.CANE9j, "An average walking cane, used by the blind and those with weak knees.");
		add(MSItems.VAUDEVILLE_HOOK9j, "Vaudeville Hook");
		addTooltip(MSItems.VAUDEVILLE_HOOK9j, "This is sure to get the audience laughing with the many japes you can pull with this bad boy!");
		add(MSItems.BEAR_POKING_STICK9j, "Bear-Poking Stick");
		addTooltip(MSItems.BEAR_POKING_STICK9j, "Do not-- and I repeat, DO NOT-- poke the bear!");
		add(MSItems.CROWBAR9j, "Crowbar");
		add(MSItems.UMBRELLA9j, "Umbrella");
		addTooltip(MSItems.UMBRELLA9j, "Shit, let's be Mary Poppins.");
		add(MSItems.UPPER_CRUST_CRUST_CANE9j, "Upper Crust Crust Cane");
		addTooltip(MSItems.UPPER_CRUST_CRUST_CANE9j, "*Now* you're walking like an upper crust!");
		add(MSItems.IRON_CANE9j, "Iron-Tipped Cane");
		addTooltip(MSItems.IRON_CANE9j, "A regular cane, except that it is tipped with the power of metal!");
		addStoreTooltip(MSItems.IRON_CANE9j, "This metal rod is perfect for attracting thunder!");
		add(MSItems.ZEPHYR_CANE9j, "Zephyr Cane");
		addTooltip(MSItems.ZEPHYR_CANE9j, "Catch your breath and relax with this casual weapon by your side.");
		add(MSItems.SPEAR_CANE9j, "Spear Cane");
		addTooltip(MSItems.SPEAR_CANE9j, "Replace with blind persons cane for hilarious results.");
		add(MSItems.PARADISES_PORTABELLO9j, "Paradise's Portabello");
		addTooltip(MSItems.PARADISES_PORTABELLO9j, "A mushroom which reaches the heavens. Good for whacking people.");
		addStoreTooltip(MSItems.PARADISES_PORTABELLO9j, "This mushroom is very tall! We think Our Glorious Speaker blessed us with it as a gift!");
		add(MSItems.REGI_CANE9j, "Regicane");
		addTooltip(MSItems.REGI_CANE9j, "A black cane used only by the most elegant among Dersites.");
		add(MSItems.DRAGON_CANE9j, "Dragon Cane");
		addTooltip(MSItems.DRAGON_CANE9j, "The most Powerful and awe inspiring of canes!");
		add(MSItems.DRAGON_CANE_UNSHEATHED9j, "Dragon Cane");
		addTooltip(MSItems.DRAGON_CANE_UNSHEATHED9j, "The most Powerful and awe inspiring of canes!");
		add(MSItems.CHANCEWYRMS_EXTRA_FORTUNATE_STABBING_IMPLEMENT9j, "Chancewyrm's Extra Fortunate Stabbing Implement");
		add(MSItems.CHANCEWYRMS_EXTRA_FORTUNATE_STABBING_IMPLEMENT_UNSHEATHED9j, "Chancewyrm's Extra Fortunate Stabbing Implement");
		add(MSItems.POGO_CANE9j, "Pogo Cane");
		addTooltip(MSItems.POGO_CANE9j, "Now without leg or hand holds for even more danger!");
		add(MSItems.CANDY_CANE9j, "Candy Cane");
		addTooltip(MSItems.CANDY_CANE9j, "This striped treat never ceases to delight you, both with its flavor and its capacity for murder.");
		add(MSItems.SHARP_CANDY_CANE9j, "Sharp Candy Cane");
		addTooltip(MSItems.SHARP_CANDY_CANE9j, "You wouldn't dare put this bladed delight into your gob-hole, so instead you turn it towards your foes.");
		add(MSItems.PRIM_AND_PROPER_WALKING_POLE9j, "Prim and Proper Walking Pole");
		addTooltip(MSItems.PRIM_AND_PROPER_WALKING_POLE9j, "This cane SCREAMS propriety and 18th century heteronormativity.");
		add(MSItems.ROCKEFELLERS_WALKING_BLADECANE9j, "Rockefeller's Walking Bladecane");
		addTooltip(MSItems.ROCKEFELLERS_WALKING_BLADECANE9j, "Now you too can own an oil monopoly! Or at least walk like you do. Your confidence is all that matters in the end, anyway.");
		add(MSItems.ROCKEFELLERS_WALKING_BLADECANE_SHEATHED9j, "Rockefeller's Walking Bladecane");
		addTooltip(MSItems.ROCKEFELLERS_WALKING_BLADECANE_SHEATHED9j, "Now you too can own an oil monopoly! Or at least walk like you do. Your confidence is all that matters in the end, anyway.");
		add(MSItems.LESS_PROPER_WALKING_STICK9j, "Slightly-Less Proper Stabbing Stick");
		addTooltip(MSItems.LESS_PROPER_WALKING_STICK9j, "Fuck propriety, all that matters is that you can kill things!");
		add(MSItems.LESS_PROPER_WALKING_STICK_SHEATHED9j, "Slightly-Less Proper Stabbing Stick");
		addTooltip(MSItems.LESS_PROPER_WALKING_STICK_SHEATHED9j, "Fuck propriety, all that matters is that you can kill things!");
		add(MSItems.WOODEN_SPOON9j, "Wooden Spoon");
		addTooltip(MSItems.WOODEN_SPOON9j, "Like the kind you would eat your soup with");
		add(MSItems.SILVER_SPOON9j, "Silver Spoon");
		addTooltip(MSItems.SILVER_SPOON9j, "Could be the first silver object you've seen so far");
		add(MSItems.MELONBALLER9j, "Melonballer");
		add(MSItems.SIGHTSEEKER9j, "Sightseeker");
		add(MSItems.TERRAIN_FLATENATOR9j, "Terrain Flatenator");
		addTooltip(MSItems.TERRAIN_FLATENATOR9j, "Construction worker's pride and joy!");
		add(MSItems.NOSFERATU_SPOON9j, "Nosferatu Spoon");
		addTooltip(MSItems.NOSFERATU_SPOON9j, "The life-draining bloodlust of evil, in spoon form");
		add(MSItems.CROCKER_SPOON9j, "Junior Battlemaster's Bowlbuster Stirring Solution 50000");
		addTooltip(MSItems.CROCKER_SPOON9j, "Whip your foes into shape and bake a cake all at the same time!");
		add(MSItems.CROCKER_FORK9j, "Junior Battlemaster's Bowlbuster Poking Solution 50000");
		addTooltip(MSItems.CROCKER_FORK9j, "Did something change?");
		add(MSItems.SKAIA_FORK9j, "Skaia War Fork");
		addTooltip(MSItems.SKAIA_FORK9j, "The elegance and grace of Skaia, and the ability to poke things of a fork!");
		add(MSItems.FORK9j, "Fork");
		add(MSItems.CANDY_FORK9j, "Candy Fork");
		add(MSItems.TUNING_FORK9j, "Tuning Fork");
		addTooltip(MSItems.TUNING_FORK9j, "Does anyone hear a ringing?");
		add(MSItems.ELECTRIC_FORK9j, "Electric Fork");
		add(MSItems.EATING_FORK_GEM9j, "Eating Fork Gem");
		add(MSItems.DEVIL_FORK9j, "Devil Fork");
		add(MSItems.SPORK9j, "Spork");
		add(MSItems.GOLDEN_SPORK9j, "Golden Spork");
		addTooltip(MSItems.GOLDEN_SPORK9j, "A spoon and fork with all the awfulness of gold tools? Sign me up!");
		add(MSItems.BIDENT9j, "Bident");
		addTooltip(MSItems.BIDENT9j, "Double trouble for all your bubble scuffle needs");
		add(MSItems.EDISONS_FURY9j, "Edison's Fury");
		add(MSItems.EDISONS_SERENITY9j, "Edison's Serenity");
		add(MSItems.POINTY_STICK9j, "Pointy Stick");
		add(MSItems.KNITTING_NEEDLE9j, "Knitting Needle");
		add(MSItems.ARTIFUCKER9j, "Artifucker");
		addTooltip(MSItems.ARTIFUCKER9j, "What's the opposite of an aimbot?");
		add(MSItems.POINTER_WAND9j, "Pointer Wand");
		addTooltip(MSItems.POINTER_WAND9j, "Aimbot your way to victory!");
		add(MSItems.NEEDLE_WAND9j, "Needle Wand");
		add(MSItems.POOL_CUE_WAND9j, "Pool Cue Wand");
		add(MSItems.THORN_OF_OGLOGOTH9j, "Thorn of Oglogoth");
		addTooltip(MSItems.THORN_OF_OGLOGOTH9j, "Causer of woes, heart of darkness. Also useful for knitting");
		add(MSItems.THISTLE_OF_ZILLYWICH9j, "Thistle of Zillywich");
		addTooltip(MSItems.THISTLE_OF_ZILLYWICH9j, "Flippety dippety doo bup bup shrubber double floppy mumblescurry noodlescoop pizzabubble pizzabubble mip mip mip mip mip mip.");
		add(MSItems.QUILL_OF_ECHIDNA9j, "Quill of Echidna");
		add(MSItems.SBAHJARANG9j, "SBaHJarang");
		addTooltip(MSItems.SBAHJARANG9j, "Worst throwing weapon money can't buy");
		add(MSItems.SHURIKEN9j, "Shuriken");
		add(MSItems.CLUBS_SUITARANG9j, "Clubs Suitarang");
		add(MSItems.DIAMONDS_SUITARANG9j, "Diamonds Suitarang");
		add(MSItems.HEARTS_SUITARANG9j, "Hearts Suitarang");
		add(MSItems.SPADES_SUITARANG9j, "Spades Suitarang");
		add(MSItems.CHAKRAM9j, "Magic Chakram");
		addTooltip(MSItems.CHAKRAM9j, "Some power makes this weapon turn the exact opposite direction any time it hits something!");
		add(MSItems.UMBRAL_INFILTRATOR9j, "Umbral Infiltrator");
		addTooltip(MSItems.UMBRAL_INFILTRATOR9j, "Phases through blocks like the shadowy abyss of the denizen Nyx");
		add(MSItems.SORCERERS_PINBALL9j, "Sorcerer's Pinball");
		addTooltip(MSItems.SORCERERS_PINBALL9j, "Enchanted with real bouncy majyyk");
		add(MSItems.EMERALD_SWORD9j, "Emerald Sword");
		add(MSItems.EMERALD_AXE9j, "Emerald Axe");
		add(MSItems.EMERALD_PICKAXE9j, "Emerald Pickaxe");
		add(MSItems.EMERALD_SHOVEL9j, "Emerald Shovel");
		add(MSItems.EMERALD_HOE9j, "Emerald Hoe");
		add(MSItems.MINE_AND_GRIST9j, "Mine and Grist");
		add(MSItems.PRISMARINE_HELMET9j, "Prismarine Helmet");
		add(MSItems.PRISMARINE_CHESTPLATE9j, "Prismarine Chestplate");
		add(MSItems.PRISMARINE_LEGGINGS9j, "Prismarine Leggings");
		add(MSItems.PRISMARINE_BOOTS9j, "Prismarine Boots");
		add(MSItems.IRON_LASS_GLASSES9j, "Iron Lass Glasses");
		add(MSItems.IRON_LASS_CHESTPLATE9j, "Iron Lass Chestplate");
		add(MSItems.IRON_LASS_SKIRT9j, "Iron Lass Skirt");
		add(MSItems.IRON_LASS_SHOES9j, "Iron Lass Boots");
		add(MSItems.PROSPIT_CIRCLET9j, "Prospit Circlet");
		add(MSItems.PROSPIT_SHIRT9j, "Prospit Shirt");
		add(MSItems.PROSPIT_PANTS9j, "Prospit Pants");
		add(MSItems.PROSPIT_SHOES9j, "Prospit Shoes");
		add(MSItems.DERSE_CIRCLET9j, "Derse Circlet");
		add(MSItems.DERSE_SHIRT9j, "Derse Shirt");
		add(MSItems.DERSE_PANTS9j, "Derse Pants");
		add(MSItems.DERSE_SHOES9j, "Derse Shoes");
		add(MSItems.BOONDOLLARS9j, "Boondollars");
		addExtra(MSItems.BOONDOLLARS9j, "amount", "Amount: %s");
		add(MSItems.RAW_CRUXITE9j, "Raw Cruxite");
		add(MSItems.RAW_URANIUM9j, "Uranium Lump");
		addTooltip(MSItems.RAW_URANIUM9j, "Is this even safe to be around?");
		add(MSItems.ENERGY_CORE9j, "Energy Core");
		addTooltip(MSItems.ENERGY_CORE9j, "The power of radiation in a neat little packet.");
		add(MSItems.PLUTONIUM_CORE9j, "Plutonium Spatial Core");
		addTooltip(MSItems.PLUTONIUM_CORE9j, "It seems to pulse gently, moving its immediate surroundings slightly each time.");
		add(MSItems.TEMPLE_SCANNER9j, "Temple Scanner");
		addExtra(MSItems.TEMPLE_SCANNER9j, "successMessage", "Closest detected temple around %s blocks away");
		addExtra(MSItems.TEMPLE_SCANNER9j, "failMessage", "No temple detected nearby");
		addExtra(MSItems.TEMPLE_SCANNER9j, "noFuelMessage", "This device requires uranium to run");
		add(MSItems.CRUXITE_APPLE9j, "Cruxite Artifact");
		add(MSItems.CRUXITE_POTION9j, "Cruxite Artifact");
		add(MSItems.SBURB_CODE9j, "SBURB Code");
		addTooltip(MSItems.SBURB_CODE9j, "It seems temple hieroglyphs can be translated into computer game code using a Book and Quill.");
		add(MSItems.COMPUTER_PARTS9j, "Computer Parts");
		addTooltip(MSItems.COMPUTER_PARTS9j, "Looks like it needs some additional components to get working.");
		add(MSItems.BLANK_DISK9j, "Blank Disk");
		addTooltip(MSItems.BLANK_DISK9j, "Can be put into a computer once there is a program on it to run.");
		add(MSItems.CLIENT_DISK9j, "SBURB Client Disk");
		add(MSItems.SERVER_DISK9j, "SBURB Server Disk");
		add(MSItems.CAPTCHA_CARD9j, "Captchalogue Card");
		addExtra(MSItems.CAPTCHA_CARD9j, "empty", "Empty");
		addExtra(MSItems.CAPTCHA_CARD9j, "invalid", "Invalid Data");
		addExtra(MSItems.CAPTCHA_CARD9j, "punched", "Punched");
		addExtra(MSItems.CAPTCHA_CARD9j, "ghost", "Ghost");
		add(MSItems.STACK_MODUS_CARD9j, "Stack Modus");
		add(MSItems.QUEUE_MODUS_CARD9j, "Queue Modus");
		add(MSItems.QUEUESTACK_MODUS_CARD9j, "Queue-Stack Modus");
		add(MSItems.TREE_MODUS_CARD9j, "Tree Modus");
		add(MSItems.HASHMAP_MODUS_CARD9j, "Hashmap Modus");
		add(MSItems.SET_MODUS_CARD9j, "Set Modus");
		addTooltip(MSItems.SET_MODUS_CARD9j, "This modus is quite similar to the array modus. Surely this is what you were looking for?");
		add(MSItems.SHUNT9j, "Punch Card Shunt");
		addExtra(MSItems.SHUNT9j, "invalid", "Invalid Item");
		addExtra(MSItems.SHUNT9j, "empty", "Empty");
		add(MSItems.PHLEGM_GUSHERS9j, "Hellacious Blue Phlegm Aneurysm Gushers");
		addTooltip(MSItems.PHLEGM_GUSHERS9j, "These should be convenient, if somewhat unappetizing.");
		add(MSItems.SORROW_GUSHERS9j, "Bodacious Black Liquid Sorrow Gushers");
		addTooltip(MSItems.SORROW_GUSHERS9j, "These are pure poison.");
		add(MSItems.BUG_ON_A_STICK9j, "Bug On a Stick");
		addStoreTooltip(MSItems.BUG_ON_A_STICK9j, "Who doesn't like bugs? Someone who haven't had a bug on a stick. That's who.");
		add(MSItems.CHOCOLATE_BEETLE9j, "Chocolate Covered Beetle");
		addStoreTooltip(MSItems.CHOCOLATE_BEETLE9j, "The wonders of cocoa beans has given us this delicacy. Try now!");
		add(MSItems.CONE_OF_FLIES9j, "Cone Of Flies");
		addStoreTooltip(MSItems.CONE_OF_FLIES9j, "Want a cone of flies? They're quite popular with the kids. Everyone else too, honestly.");
		add(MSItems.GRASSHOPPER9j, "Grasshopper");
		addStoreTooltip(MSItems.GRASSHOPPER9j, "This extra-large grasshopper makes a perfect dinner.");
		add(MSItems.CICADA9j, "Cicada");
		addTooltip(MSItems.CICADA9j, "Why this looks like a member of the Magicicada genus! Known for popping out the ground in large numbers every 13 or 17 years to- hey are you still listening?");
		add(MSItems.JAR_OF_BUGS9j, "Jar Of Bugs");
		addStoreTooltip(MSItems.JAR_OF_BUGS9j, "It's like a bug on a stick but in a jar! What's not to love about it?");
		add(MSItems.BUG_MAC9j, "Bug Mac");
		addStoreTooltip(MSItems.BUG_MAC9j, "Does this come with a toy?");
		addTooltip(MSItems.BUG_MAC9j, "If you don't think about the ingredients, this delicious meal will fill you up.");
		add(MSItems.ONION9j, "Onion");
		addTooltip(MSItems.ONION9j, "This \"cool\" vegetable is actually just an onion.");
		addStore(MSItems.ONION9j, "Cool Veggie");
		addStoreTooltip(MSItems.ONION9j, "This cool vegetable is so good that it will make you cry!");
		add(MSItems.SALAD9j, "Bowl of Leaves");
		addTooltip(MSItems.SALAD9j, "It's literally just salad, Gordon Ramsay would not approve.");
		addStore(MSItems.SALAD9j, "Handpicked Greens");
		addStoreTooltip(MSItems.SALAD9j, "A bowl of our fine, handpicked greens. The perfect meal.");
		add(MSItems.DESERT_FRUIT9j, "Desert Fruit");
		addStore(MSItems.DESERT_FRUIT9j, "Quenchy Berry");
		addStoreTooltip(MSItems.DESERT_FRUIT9j, "This berry helps beat the desert heat!");
		add(MSItems.ROCK_COOKIE9j, "Rock Cookie");
		addTooltip(MSItems.ROCK_COOKIE9j, "It's as edible as a rock");
		addStore(MSItems.ROCK_COOKIE9j, "Grey-Colored Cookie");
		addStoreTooltip(MSItems.ROCK_COOKIE9j, "This here is a true wonder-cookie! Totally! And they are even cheaper than regular cookies!");
		add(MSItems.WOODEN_CARROT9j, "Wooden Carrot");
		addTooltip(MSItems.WOODEN_CARROT9j, "It's as edible as a plank.");
		add(MSItems.COCOA_WART9j, "Cocoa Wart");
		addTooltip(MSItems.COCOA_WART9j, "It has a... unique smell.");
		add(MSItems.FUNGAL_SPORE9j, "Fungal Spore");
		addTooltip(MSItems.FUNGAL_SPORE9j, "You must live off the land, and in this land, it means eating this.");
		addStore(MSItems.FUNGAL_SPORE9j, "Mushroom Skittles");
		addStoreTooltip(MSItems.FUNGAL_SPORE9j, "We harvest the mushrooms for this candy, although it's not very sweet.");
		add(MSItems.SPOREO9j, "Sporeo");
		addTooltip(MSItems.SPOREO9j, "Huh. Who knew fungal spores could be so delicious?");
		addStore(MSItems.SPOREO9j, "Skittle Cookie");
		addStoreTooltip(MSItems.SPOREO9j, "We found this spore-filled cookie sandwich in nearby ruins!");
		add(MSItems.MOREL_MUSHROOM9j, "Morel Mushroom");
		addTooltip(MSItems.MOREL_MUSHROOM9j, "A delicacy amongst both humans and consorts.");
		addStore(MSItems.MOREL_MUSHROOM9j, "THE Mushroom");
		addStoreTooltip(MSItems.MOREL_MUSHROOM9j, "This is a very rare mushroom-- not many get to see it, much less taste it!");
		add(MSItems.SUSHROOM9j, "Sushroom");
		addTooltip(MSItems.SUSHROOM9j, "Afungus.");
		add(MSItems.FRENCH_FRY9j, "French Fry");
		add(MSItems.STRAWBERRY_CHUNK9j, "Strawberry Chunk");
		addTooltip(MSItems.STRAWBERRY_CHUNK9j, "It tastes a lot better than it looks.");
		addStore(MSItems.STRAWBERRY_CHUNK9j, "Fistfull o' Strawberry");
		addStoreTooltip(MSItems.STRAWBERRY_CHUNK9j, "This sweet-and-sour fruit glob is sure to drip stuff everywhere!");
		add(MSItems.FOOD_CAN9j, "Food Can");
		addTooltip(MSItems.FOOD_CAN9j, "You could be at the forefront of carapacian fashion if you turned the label into a sash");
		add(MSItems.CANDY_CORN9j, "Candy Corn");
		add(MSItems.TUIX_BAR9j, "Tuix Bar");
		add(MSItems.BUILD_GUSHERS9j, "Build Gushers");
		add(MSItems.AMBER_GUMMY_WORM9j, "Amber Gummy Worm");
		add(MSItems.CAULK_PRETZEL9j, "Caulk Pretzel");
		add(MSItems.CHALK_CANDY_CIGARETTE9j, "Chalk Candy Cigarette");
		add(MSItems.IODINE_LICORICE9j, "Iodine Licorice");
		add(MSItems.SHALE_PEEP9j, "Shale Peep");
		add(MSItems.TAR_LICORICE9j, "Tar Black Licorice");
		add(MSItems.COBALT_GUM9j, "Cobalt Gum");
		add(MSItems.MARBLE_JAWBREAKER9j, "Marble Jawbreaker");
		add(MSItems.MERCURY_SIXLETS9j, "Mercury Sixlets");
		add(MSItems.QUARTZ_JELLY_BEAN9j, "Quartz Jelly Bean");
		add(MSItems.SULFUR_CANDY_APPLE9j, "Sulfur Candy Apple");
		add(MSItems.AMETHYST_HARD_CANDY9j, "Amethyst Hard Candy");
		add(MSItems.GARNET_TWIX9j, "Garnet Twix");
		add(MSItems.RUBY_LOLLIPOP9j, "Ruby Lollipop");
		add(MSItems.RUST_GUMMY_EYE9j, "Rust Gummy Eye");
		add(MSItems.DIAMOND_MINT9j, "Diamond Mint");
		add(MSItems.GOLD_CANDY_RIBBON9j, "Gold Candy Ribbon");
		add(MSItems.URANIUM_GUMMY_BEAR9j, "Uranium Gummy Bear");
		add(MSItems.ARTIFACT_WARHEAD9j, "Artifact War Head");
		add(MSItems.ZILLIUM_SKITTLES9j, "Zillium Skittles");
		add(MSItems.APPLE_JUICE9j, "Apple Juice");
		add(MSItems.TAB9j, "Tab");
		addStore(MSItems.TAB9j, "Sugary Drink");
		addStoreTooltip(MSItems.TAB9j, "This drink is too sweet for this world. Have a taste!");
		add(MSItems.ORANGE_FAYGO9j, "Orange Faygo");
		add(MSItems.CANDY_APPLE_FAYGO9j, "Candy-Apple Faygo");
		add(MSItems.FAYGO_COLA9j, "Faygo Cola");
		add(MSItems.COTTON_CANDY_FAYGO9j, "Cotton Candy Faygo");
		add(MSItems.CREME_SODA_FAYGO9j, "Creme Soda Faygo");
		add(MSItems.GRAPE_FAYGO9j, "Grape Faygo");
		add(MSItems.MOON_MIST_FAYGO9j, "Moonmist Faygo");
		add(MSItems.PEACH_FAYGO9j, "Peach Faygo");
		add(MSItems.REDPOP_FAYGO9j, "Redpop Faygo");
		add(MSItems.GRUB_SAUCE9j, "Grub Sauce");
		add(MSItems.IRRADIATED_STEAK9j, "Irradiated Steak");
		addTooltip(MSItems.IRRADIATED_STEAK9j, "Steak (over)cooked using the power of uranium!");
		add(MSItems.SURPRISE_EMBRYO9j, "Kundler Shelled Surprise Embryo");
		addTooltip(MSItems.SURPRISE_EMBRYO9j, "Oh boy! You sure can't wait to find out what's contained inside the Surprise Embryo!");
		addExtra(MSItems.SURPRISE_EMBRYO9j, "message", "WOW! NO WAY! You found a %s inside your Surprise Embryo!");
		add(MSItems.UNKNOWABLE_EGG9j, "The Egg of Unknowable, Horrible Truths");
		addTooltip(MSItems.UNKNOWABLE_EGG9j, "This egg somehow knows your name.");
		add(MSItems.BREADCRUMBS9j, "Breadcrumbs");
		add(MSItems.GOLDEN_GRASSHOPPER9j, "Golden Grasshopper");
		add(MSItems.BUG_NET9j, "Net");
		addTooltip(MSItems.BUG_NET9j, "Perfect for catching bugs and frogs!");
		add(MSItems.FROG9j, "Frog");
		addExtra(MSItems.FROG9j, "random", "Random Frog");
		addExtra(MSItems.FROG9j, "type.0", "Frog");
		addExtra(MSItems.FROG9j, "type.1", "Totally Normal Frog");
		addExtra(MSItems.FROG9j, "type.2", "Ruby Contraband");
		addExtra(MSItems.FROG9j, "type.3", "Tiny Genesis Frog");
		addExtra(MSItems.FROG9j, "type.4", "Frog");
		addExtra(MSItems.FROG9j, "type.5", "Golden Frog");
		addExtra(MSItems.FROG9j, "type.6", "Frog");
		addExtra(MSItems.FROG9j, "desc.4", "frog.null.name");
		addExtra(MSItems.FROG9j, "desc.6", ChatFormatting.OBFUSCATED+"Susan");
		addExtra(MSItems.FROG9j, "eyes.0", "Lighter Eyes");
		addExtra(MSItems.FROG9j, "eyes.1", "Darker Eyes");
		addExtra(MSItems.FROG9j, "eyes.2", "Blank Eyes");
		addExtra(MSItems.FROG9j, "belly.1", "Solid-Colored Belly");
		addExtra(MSItems.FROG9j, "belly.2", "Spotted Belly");
		addExtra(MSItems.FROG9j, "belly.3", "Striped Belly");
		addExtra(MSItems.FROG9j, "size.0", "Tiny");
		addExtra(MSItems.FROG9j, "size.1", "Small");
		addExtra(MSItems.FROG9j, "size.2", "Normal Sized");
		addExtra(MSItems.FROG9j, "size.3", "Big");
		addExtra(MSItems.FROG9j, "size.4", "Huge");
		add(MSItems.CARVING_TOOL9j, "Carving Tool");
		addStoreTooltip(MSItems.CARVING_TOOL9j, "You gotta BE the marble!");
		add(MSItems.CRUMPLY_HAT9j, "Crumply Hat");
		add(MSItems.STONE_EYEBALLS9j, "Stone Eyeballs");
		add(MSItems.STONE_SLAB9j, "Stone Tablet");
		addExtra(MSItems.STONE_SLAB9j, "carved", "Looks like something has been carved into it!");
		addStoreTooltip(MSItems.STONE_SLAB9j, "It's pretty rock, but I wouldn't advise rolling on it.");
		add(MSItems.OIL_BUCKET9j, "Bucket of Oil");
		add(MSItems.BLOOD_BUCKET9j, "Bucket of Blood");
		addTooltip(MSItems.BLOOD_BUCKET9j, "It looks like Kool-Aid... But you're too scared to try it yourself.");
		add(MSItems.BRAIN_JUICE_BUCKET9j, "Bucket of Brain Juice");
		add(MSItems.WATER_COLORS_BUCKET9j, "Bucket of Paint");
		addTooltip(MSItems.WATER_COLORS_BUCKET9j, "The colors just refuse to mix. It's kind of disturbing, actually.");
		add(MSItems.ENDER_BUCKET9j, "Bucket of End Fluid");
		addTooltip(MSItems.ENDER_BUCKET9j, "It seems to be liquified ender pearls.");
		add(MSItems.LIGHT_WATER_BUCKET9j, "Bucket of Glimmering Water");
		addTooltip(MSItems.LIGHT_WATER_BUCKET9j, "You're not convinced this is water. It's unnatural.");
		add(MSItems.OBSIDIAN_BUCKET9j, "Obsidian Bucket");
		add(MSItems.CAPTCHAROID_CAMERA9j, "Captcharoid Camera");
		add(MSItems.GRIMOIRE9j, "Grimoire for Summoning the Zoologically Dubious");
		addExtra(MSItems.GRIMOIRE9j, "message", "After flipping through some pages, you feel significantly more insignificant.");
		addTooltip(MSItems.GRIMOIRE9j, "This book is absolutely indispensable for enthusiasts of your ilk. Of which there are very few.");
		addStore(MSItems.GRIMOIRE9j, "Spooky Book");
		addStoreTooltip(MSItems.GRIMOIRE9j, "Our best wizard cultists tried to decipher this ancient tome, but none of them can read.");
		add(MSItems.LONG_FORGOTTEN_WARHORN9j, "The Long Forgotten Warhorn of the Acolytes");
		addTooltip(MSItems.LONG_FORGOTTEN_WARHORN9j, "Some things are better left forgotten.");
		add(MSItems.BLACK_QUEENS_RING9j, "Black Queen's Ring");
		addTooltip(MSItems.BLACK_QUEENS_RING9j, "One of a pair. If the wrong carapacian got this, the session would Ascend into chaos!");
		add(MSItems.WHITE_QUEENS_RING9j, "White Queen's Ring");
		addTooltip(MSItems.WHITE_QUEENS_RING9j, "One of a pair. Cast it into the fire!");
		add(MSItems.RAZOR_BLADE9j, "Razor Blade");
		addTooltip(MSItems.RAZOR_BLADE9j, "Only a fool would try to pick this up.");
		add(MSItems.URANIUM_POWERED_STICK9j, "Uranium-Powered Stick");
		addTooltip(MSItems.URANIUM_POWERED_STICK9j, "Never runs out of uranium!");
		add(MSItems.SCALEMATE_APPLESCAB9j, "Officer Applescab");
		add(MSItems.SCALEMATE_BERRYBREATH9j, "Inspector Berrybreath");
		add(MSItems.SCALEMATE_CINNAMONWHIFF9j, "Officer Cinnamonwhiff");
		add(MSItems.SCALEMATE_HONEYTONGUE9j, "Doctor Honeytongue");
		add(MSItems.SCALEMATE_LEMONSNOUT9j, "Senator Lemonsnout");
		add(MSItems.SCALEMATE_PINESNOUT9j, "Duke Pinesnout");
		add(MSItems.SCALEMATE_PUCEFOOT9j, "Professor Pucefoot");
		add(MSItems.SCALEMATE_PUMPKINSNUFFLE9j, "Liason Pumpkinsnuffle");
		add(MSItems.SCALEMATE_PYRALSPITE9j, "Pyralspite");
		add(MSItems.SCALEMATE_WITNESS9j, "The Witness");
		add(MSItems.IRON_BOAT9j, "Iron Boat");
		add(MSItems.GOLD_BOAT9j, "Golden Boat");
		add(MSItems.FLARP_MANUAL9j, "Flarp Manual");
		add(MSItems.SASSACRE_TEXT9j, "Sassacre Text");
		add(MSItems.WISEGUY9j, "Wise Guy");
		add(MSItems.TABLESTUCK_MANUAL9j, "Tablestuck Manual");
		add(MSItems.TILLDEATH_HANDBOOK9j, "~ATH Handbook");
		addTooltip(MSItems.TILLDEATH_HANDBOOK9j, "A Handbook for the Imminently Deceased");
		add(MSItems.BINARY_CODE9j, "Binary code");
		addTooltip(MSItems.BINARY_CODE9j, "01101010 01110101 01110011 01110100 00100000 01100001 00100000 01100010 01110101 01101110 01100011 01101000 00100000 01101111 01100110 00100000 01101111 01101110 01100101 01110011 00100000 01100001 01101110 01100100 00100000 01111010 01100101 01110010 01101111 01110011");
		add(MSItems.NONBINARY_CODE9j, "Nonbinary code");
		addTooltip(MSItems.NONBINARY_CODE9j, "6e 6f 74 20 6a 75 73 74 20 61 20 62 75 6e 63 68 20 6f 66 20 6f 6e 65 73 20 61 6e 64 20 7a 65 72 6f 73");
		add(MSItems.THRESH_DVD9j, "Thresh Prince DVD");
		add(MSItems.GAMEBRO_MAGAZINE9j, "Game Bro Magazine");
		add(MSItems.GAMEGRL_MAGAZINE9j, "Game Grl Magazine");
		add(MSItems.ICE_SHARD9j, "Ice Shard");
		add(MSItems.HORN9j, "Horn");
		addTooltip(MSItems.HORN9j, ":o)");
		add(MSItems.CAKE_MIX9j, "Cake Mix");
		add(MSItems.BARBASOL9j, "Barbasol");
		add(MSItems.BARBASOL_BOMB9j, "Betty Crocker Barbasol Bomb");
		add(MSItems.CLOTHES_IRON9j, "Clothes Iron");
		add(MSItems.BATTERY9j, "Battery");
		addStore(MSItems.BATTERY9j, "Death Gusher");
		addStoreTooltip(MSItems.BATTERY9j, "This one's tough to crunch into, and the effort's barely even worth it!");
		add(MSItems.BI_DYE9j, "Bi Dye");
		addTooltip(MSItems.BI_DYE9j, "Show off your pride to friends! Make gear to help vanquish your foes!");
		add(MSItems.LIP_BALM9j, "Lip Balm");
		addTooltip(MSItems.LIP_BALM9j, "I see you there with those dry lips. Aht aht don't lick them now.");
		addExtra(MSItems.LIP_BALM9j, "message", "Your lips are slightly more moisturized, but is it enough?");
		add(MSItems.ELECTRIC_AUTOHARP9j, "Electric Autoharp");
		add(MSItems.CARDBOARD_TUBE9j, "Cardboard Tube");
		add(MSItems.INK_SQUID_PRO_QUO9j, "Ink of Squid Pro Quo");
		addTooltip(MSItems.INK_SQUID_PRO_QUO9j, "For the love of god, don't drink it.");
		add(MSItems.CUEBALL9j, "Magic Cueball");
		add(MSItems.EIGHTBALL9j, "Magic Eightball");
		add(MSItems.CREW_POSTER9j, "Midnight Crew Poster");
		add(MSItems.SBAHJ_POSTER9j, "Sweet Bro and Hella Jeff Poster");
		add(MSItems.MUSIC_DISC_EMISSARY_OF_DANCE9j, "Music Disc");
		addExtra(MSItems.MUSIC_DISC_EMISSARY_OF_DANCE9j, "desc", "Catboss - Emissary of Dance");
		add(MSItems.MUSIC_DISC_DANCE_STAB_DANCE9j, "Music Disc");
		addExtra(MSItems.MUSIC_DISC_DANCE_STAB_DANCE9j, "desc", "Catboss - Dance-Stab-Dance");
		add(MSItems.MUSIC_DISC_RETRO_BATTLE9j, "Music Disc");
		addExtra(MSItems.MUSIC_DISC_RETRO_BATTLE9j, "desc", "SinFrog - Retro Battle Theme");
		add(MSItems.CASSETTE_MELLOHI9j, "Cassette");
		addExtra(MSItems.CASSETTE_MELLOHI9j, "desc", "C418 - mellohi");
		add(MSItems.CASSETTE_139j, "Cassette");
		addExtra(MSItems.CASSETTE_139j, "desc", "C418 - 13");
		add(MSItems.CASSETTE_BLOCKS9j, "Cassette");
		addExtra(MSItems.CASSETTE_BLOCKS9j, "desc", "C418 - blocks");
		add(MSItems.CASSETTE_CAT9j, "Cassette");
		addExtra(MSItems.CASSETTE_CAT9j, "desc", "C418 - cat");
		add(MSItems.CASSETTE_CHIRP9j, "Cassette");
		addExtra(MSItems.CASSETTE_CHIRP9j, "desc", "C418 - chirp");
		add(MSItems.CASSETTE_FAR9j, "Cassette");
		addExtra(MSItems.CASSETTE_FAR9j, "desc", "C418 - far");
		add(MSItems.CASSETTE_MALL9j, "Cassette");
		addExtra(MSItems.CASSETTE_MALL9j, "desc", "C418 - mall");
		add(MSItems.CASSETTE_EMISSARY9j, "Cassette");
		addExtra(MSItems.CASSETTE_EMISSARY9j, "desc", "Catboss - Emissary of Dance");
		add(MSItems.CASSETTE_DANCE_STAB9j, "Cassette");
		addExtra(MSItems.CASSETTE_DANCE_STAB9j, "desc", "Catboss - Dance-Stab-Dance");
		add(MSItems.CASSETTE_RETRO_BATTLE9j, "Cassette");
		addExtra(MSItems.CASSETTE_RETRO_BATTLE9j, "desc", "SinFrog - Retro Battle Theme");
		
		add("message.horrorterror.machinations", "Your blood shall fuel our machinations.");
		add("message.horrorterror.stir", "They stir in your subconscious.");
		add("message.horrorterror.suffering", "Your suffering grants us strength.");
		add("message.horrorterror.will", "Our will is your will.");
		add("message.horrorterror.done", "It is done.");
		add("message.horrorterror.conspiracies", "You are a tool. A tool through which we we exert our conspiracies.");
		add("message.horrorterror.waiting", "The moment will come when you embrace the darkness, you will accept it with open arms.");
		add("message.horrorterror.strife", "Pain fuels us.");
		add("message.horrorterror.search", "Search deeper. Gaze into the abyss with eyes wide open");
		add("message.horrorterror.blessings", "With this struggle, we grant you our blessings.");
		add("message.horrorterror.seek", "Seek out and consume the light.");
		add("message.horrorterror.shadow", "The shadows do not work for you. They are your fellow vassals in service to us");
		
		add("message.eightball.0", "As I see it, yes.");
		add("message.eightball.1", "Ask again later.");
		add("message.eightball.2", "Better not tell you now.");
		add("message.eightball.3", "Cannot predict now.");
		add("message.eightball.4", "Concentrate and ask again.");
		add("message.eightball.5", "Don’t count on it.");
		add("message.eightball.6", "It is certain.");
		add("message.eightball.7", "It is decidedly so.");
		add("message.eightball.8", "Most likely.");
		add("message.eightball.9", "My reply is no.");
		add("message.eightball.10", "My sources say no.");
		add("message.eightball.11", "Outlook not so good.");
		add("message.eightball.12", "Outlook good.");
		add("message.eightball.13", "Reply hazy, try again.");
		add("message.eightball.14", "Signs point to yes.");
		add("message.eightball.15", "Very doubtful.");
		add("message.eightball.16", "Without a doubt.");
		add("message.eightball.17", "Yes.");
		add("message.eightball.18", "Yes – definitely.");
		add("message.eightball.19", "You may rely on it.");
		
		add("message.dice.0", "You rolled a 1.");
		add("message.dice.1", "You rolled a 2.");
		add("message.dice.2", "You rolled a 3.");
		add("message.dice.3", "You rolled a 4.");
		add("message.dice.4", "You rolled a 5.");
		add("message.dice.5", "You rolled a 6.");

		addStore(Items.PUMPKIN_PIE, "Tasty Pie");
		addStoreTooltip(Items.PUMPKIN_PIE, "This pie appeared in storage a few days ago out of nowhere. No idea where it came from, but it sure is tasty!");
		addStoreTooltip(Items.WHEAT_SEEDS, "You know what tastes even better than those plant grains? Their seeds, of course!");
		addStoreTooltip(Items.MUSHROOM_STEW, "Do you enjoy mushrooms? Then this'll be a delicacy!");
		addStoreTooltip(Items.BEEF, "You want something RAW? We've got BEEF.");
		addStoreTooltip(PotionUtils.setPotion(new ItemStack(Items.POTION), Potions.WATER), "Stay hydrated with our oasis water.");
		addStoreTooltip(Items.CARROT, "Want to try something orange? We've got carrots straight from the ground.");
		addStoreTooltip(Items.MILK_BUCKET, "You won't find this in a regular bucket!");
		addStore(Items.POISONOUS_POTATO, "Green Potato");
		addStoreTooltip(Items.POISONOUS_POTATO, "This here is a rare green potato. Can you imagine how this one would taste?");
		addStoreTooltip(Items.SUGAR, "I have discovered that this substance is the secret ingredient for the cakes around here!");
		addStoreTooltip(Items.BEETROOT_SOUP, "Had enough of regular beetroots? Try our soup!");
		addStoreTooltip(Items.BEETROOT, "Haven't had enough of beetroots? There are some in store right now!");
		addStoreTooltip(Items.GOLDEN_APPLE, "This apple is said to be quite special, which is why I won't let it go for cheap!");
		addStoreTooltip(Items.MELON, "How about something juicy? Melons sure are juicy.");
		addStoreTooltip(Items.APPLE, "Want something juicy, but not so juicy that it's juice? Try regular apples!");
		addStoreTooltip(Items.WHEAT, "This is a byproduct from our seed farm, but I can assure you that it's edible.");
		addStoreTooltip(Items.COOKIE, "Cookies like these are quite hard to get, since there are very few who know the recipe.");
		addStoreTooltip(Items.POTATO, "The staple food of any Irish %1$s, grown in %1$s Ireland.");
		addStoreTooltip(Items.COCOA_BEANS, "This is supposedly able to be made into a sweet bar. We just eat them raw.");
		addStoreTooltip(Items.SALMON, "Ah, salmon. Chicken of the river.");
		addStoreTooltip(Items.COD, "More vague than 'salmon,' perfect for tricking people into thinking this is actually food.");
		addStoreTooltip(Items.FLINT, "Imported from the Land of Gravel and Arrows! Probably. Maybe.");
		addStoreTooltip(Items.DIAMOND, "This looks kinda useless, but it's too shiny to sell for cheap!");
		addStoreTooltip(Items.EMERALD, "This looks kinda useless. It probably is, actually. No one will notice if I sell it for a lot, right?");
		addStore(Items.QUARTZ, "Quartz");
		addStoreTooltip(Items.QUARTZ, "Supposedly, a great Knight of Time found some of this and made a watch company.");
		addStore(Items.CHORUS_FRUIT, "Illegal Drugs");
		addStoreTooltip(Items.CHORUS_FRUIT, "This stuff makes you go, \"how did I get here?\" Don't tell the cops!");
		addStoreTooltip(Items.BREAD, "Like wheat, but slightly more appetizing. Completely uninteresting to look at!");
		addStore(Items.ELYTRA, "Wings");
		addStoreTooltip(Items.ELYTRA, "You can probably fly with these. They're too big for me, so I don't know.");
		addStore(Items.OBSIDIAN, "Black Stone");
		addStoreTooltip(Items.OBSIDIAN, "Why would you want black stone? Because it's marked 50-percent off, of course!");
		addStore(Items.DRAGON_BREATH, "Tear Gas");
		addStoreTooltip(Items.DRAGON_BREATH, "This foul-smelling gas is sure to make any imp bawl like a newborn.");
		addStore(Items.EGG, "Plain-Looking Lopsided Ball");
		addStoreTooltip(Items.EGG, "Serves no actual function, but this rarity looks completely plain! Surely, this is the height of fine décor.");
		addStoreTooltip(Items.PAPER, "A plain canvas, untainted by any inks or dyes!");
		addStoreTooltip(Items.CLAY_BALL, "A moldable substance with a plain, muted look, free of artificial colors!");
		addStoreTooltip(Items.CACTUS, "It's the quenchiest!");
		
		add(MSItemGroup.MAIN, "Minestuck Main");
		add(MSItemGroup.LANDS, "Minestuck Lands");
		add(MSItemGroup.WEAPONS, "Minestuck Weapons");
		/*TODO
		addBiome(MSBiomes.SKAIA, "Skaia");
		defaultLandBiomes(MSBiomes.DEFAULT_LAND);
		defaultLandBiomes(MSBiomes.HIGH_HUMID_LAND);
		defaultLandBiomes(MSBiomes.NO_RAIN_LAND);
		defaultLandBiomes(MSBiomes.SNOW_LAND);
		*/
		add(MSEntityTypes.FROG, "Frog");
		add(MSEntityTypes.SALAMANDER, "Salamander");
		addExtra(MSEntityTypes.SALAMANDER, "plural", "Salamanders");
		addExtra(MSEntityTypes.SALAMANDER, "sound", "Glub");
		addExtra(MSEntityTypes.SALAMANDER, "sound.2", "GLUB");
		add(MSEntityTypes.TURTLE, "Turtle");
		addExtra(MSEntityTypes.TURTLE, "plural", "Turtles");
		addExtra(MSEntityTypes.TURTLE, "sound", "...");
		addExtra(MSEntityTypes.TURTLE, "sound.2", "..!");
		add(MSEntityTypes.NAKAGATOR, "Nakagator");
		addExtra(MSEntityTypes.NAKAGATOR, "plural", "Nakagators");
		addExtra(MSEntityTypes.NAKAGATOR, "sound", "Nak");
		addExtra(MSEntityTypes.NAKAGATOR, "sound.2", "NAK");
		add(MSEntityTypes.IGUANA, "Iguana");
		addExtra(MSEntityTypes.IGUANA, "plural", "Iguanas");
		addExtra(MSEntityTypes.IGUANA, "sound", "Thip");
		addExtra(MSEntityTypes.IGUANA, "sound.2", "THIP");
		add(MSEntityTypes.IMP, "Imp");
		addExtra(MSEntityTypes.IMP, "type", "%s Imp");
		add(MSEntityTypes.OGRE, "Ogre");
		addExtra(MSEntityTypes.OGRE, "type", "%s Ogre");
		add(MSEntityTypes.BASILISK, "Basilisk");
		addExtra(MSEntityTypes.BASILISK, "type", "%s Basilisk");
		add(MSEntityTypes.LICH, "Lich");
		addExtra(MSEntityTypes.LICH, "type", "%s Lich");
		add(MSEntityTypes.GICLOPS, "Giclops");
		addExtra(MSEntityTypes.GICLOPS, "type", "%s Giclops");
		add(MSEntityTypes.DERSITE_PAWN, "Dersite Pawn");
		add(MSEntityTypes.PROSPITIAN_PAWN, "Prospitian Pawn");
		add(MSEntityTypes.DERSITE_BISHOP, "Dersite Bishop");
		add(MSEntityTypes.PROSPITIAN_BISHOP, "Prospitian Bishop");
		add(MSEntityTypes.DERSITE_ROOK, "Dersite Rook");
		add(MSEntityTypes.PROSPITIAN_ROOK, "Prospitian Rook");
		add(MSEntityTypes.GRIST, "Grist");
		addExtra(MSEntityTypes.GRIST, "type", "%s Grist");
		add(MSEntityTypes.VITALITY_GEL, "Vitality Gel");
		add(MSEntityTypes.PLAYER_DECOY, "Player Decoy");
		add(MSEntityTypes.METAL_BOAT, "Metal Boat");
		add(MSEntityTypes.MIDNIGHT_CREW_POSTER, "Midnight Crew Poster");
		add(MSEntityTypes.SBAHJ_POSTER, "SBAHJ Poster");
		add(MSEntityTypes.SHOP_POSTER, "Shop Sign");
		add(MSEntityTypes.HOLOGRAM, "Hologram");
		add(MSEntityTypes.LOTUS_FLOWER, "Lotus Flower");
		
		addGristType(GristTypes.BUILD, "Build");
		addGristType(GristTypes.AMBER, "Amber");
		addGristType(GristTypes.CAULK, "Caulk");
		addGristType(GristTypes.CHALK, "Chalk");
		addGristType(GristTypes.IODINE, "Iodine");
		addGristType(GristTypes.SHALE, "Shale");
		addGristType(GristTypes.TAR, "Tar");
		addGristType(GristTypes.COBALT, "Cobalt");
		addGristType(GristTypes.MARBLE, "Marble");
		addGristType(GristTypes.MERCURY, "Mercury");
		addGristType(GristTypes.QUARTZ, "Quartz");
		addGristType(GristTypes.SULFUR, "Sulfur");
		addGristType(GristTypes.AMETHYST, "Amethyst");
		addGristType(GristTypes.GARNET, "Garnet");
		addGristType(GristTypes.RUBY, "Ruby");
		addGristType(GristTypes.RUST, "Rust");
		addGristType(GristTypes.DIAMOND, "Diamond");
		addGristType(GristTypes.GOLD, "Gold");
		addGristType(GristTypes.URANIUM, "Uranium");
		addGristType(GristTypes.ARTIFACT, "Artifact");
		addGristType(GristTypes.ZILLIUM, "Zillium");
		add(GristType.FORMAT, "%s Grist");
		add(GristSet.MISSING_MESSAGE, "You do not have enough grist for that. You need: %s");
		add(GristSet.GRIST_COMMA, "%s, %s");
		add(GristAmount.GRIST_AMOUNT, "%s %s");
		
		add(EnumClass.BARD, "Bard");
		add(EnumClass.HEIR, "Heir");
		add(EnumClass.KNIGHT, "Knight");
		add(EnumClass.MAGE, "Mage");
		add(EnumClass.MAID, "Maid");
		add(EnumClass.PAGE, "Page");
		add(EnumClass.PRINCE, "Prince");
		add(EnumClass.ROGUE, "Rogue");
		add(EnumClass.SEER, "Seer");
		add(EnumClass.SYLPH, "Sylph");
		add(EnumClass.THIEF, "Thief");
		add(EnumClass.WITCH, "Witch");
		add(EnumClass.LORD, "Lord");
		add(EnumClass.MUSE, "Muse");
		
		add(EnumAspect.BLOOD, "Blood");
		addDenizen(EnumAspect.BLOOD, "Jormungandr");
		add(EnumAspect.BREATH, "Breath");
		addDenizen(EnumAspect.BREATH, "Typheus");
		add(EnumAspect.DOOM, "Doom");
		addDenizen(EnumAspect.DOOM, "Nemesis");
		add(EnumAspect.HEART, "Heart");
		addDenizen(EnumAspect.HEART, "Bastet");
		add(EnumAspect.HOPE, "Hope");
		addDenizen(EnumAspect.HOPE, "Abraxas");
		add(EnumAspect.LIFE, "Life");
		addDenizen(EnumAspect.LIFE, "Hemera");
		add(EnumAspect.LIGHT, "Light");
		addDenizen(EnumAspect.LIGHT, "Cetus");
		add(EnumAspect.MIND, "Mind");
		addDenizen(EnumAspect.MIND, "Sibyl");
		add(EnumAspect.RAGE, "Rage");
		addDenizen(EnumAspect.RAGE, "Tartarus");
		add(EnumAspect.SPACE, "Space");
		addDenizen(EnumAspect.SPACE, "Echidna");
		add(EnumAspect.TIME, "Time");
		addDenizen(EnumAspect.TIME, "Hephaestus");
		add(EnumAspect.VOID, "Void");
		addDenizen(EnumAspect.VOID, "Nyx");
		add(Title.FORMAT, "%1$s of %2$s");
		
		add(Echeladder.NEW_RUNG, "You reached rung %s!");
		addRung(0, "Greentike");
		addRung(1, "Sir Dies-a-lot");
		addRung(2, "Soil Architect");
		addRung(3, "Arboreal Boxer");
		addRung(4, "Stick Sultan");
		addRung(5, "Potato Roaster");
		addRung(6, "Zombie Chum");
		addRung(7, "Imp Crusher");
		addRung(8, "Slime Enthusiast");
		addRung(9, "Burly Pocketeer");
		addRung(10, "Block Smasher");
		addRung(11, "Gadabout Explorer");
		addRung(12, "Village Protector");
		addRung(13, "Golem Gallant");
		addRung(14, "Rail Fanatic");
		addRung(15, "Dungeon Robber");
		addRung(16, "Who Needs A Map?");
		addRung(17, "Inventory Tycoon");
		addRung(18, "Diamond Smuggler");
		addRung(19, "Cuboid Captain");
		addRung(20, "Circuit Crafter");
		addRung(21, "Alchemy Brewer");
		addRung(22, "Keeper Of Consorts");
		addRung(23, "Conglomerate Caliphate");
		addRung(24, "Overworld Overlord");
		addRung(25, "Portal Knight");
		addRung(26, "Fiery Fighter");
		addRung(27, "Pigman Patriarch");
		addRung(28, "Blazing Batter");
		addRung(29, "Ghaster Blaster");
		addRung(30, "Nether Noble");
		addRung(31, "Wither Warrior");
		addRung(32, "Soulsand Summoner");
		addRung(33, "Nether Knight");
		addRung(34, "Underworld Overlord");
		addRung(35, "Ender Ender");
		addRung(36, "Eye Of The Beholder");
		addRung(37, "Pathfinder Paladin");
		addRung(38, "Finder Of Fortress");
		addRung(39, "Stronghold Savant");
		addRung(40, "Maze Magician");
		addRung(41, "Spawner Shatterer");
		addRung(42, "Tartarus Tackler");
		addRung(43, "Wyvern Whacker");
		addRung(44, "Otherworld Overlord");
		addRung(45, "Vanilla Vanquisher");
		addRung(46, "Forum Frequenter");
		addRung(47, "Forge Fidaddler");
		addRung(48, "Installed Initiate");
		addRung(49, "Master Of Mods");
		
		addAdvancement(MSAdvancementProvider.ROOT, "Minestuck", "The Beginning of Something Really Excellent");
		addAdvancement(MSAdvancementProvider.SEARCHING, "Searching For Purpose", "Build a Temple Scanner to find special ruins scattered around the land");
		addAdvancement(MSAdvancementProvider.LONG_TIME_COMING, "Long Time Coming", "Collect SBURB code from a Frog Temple! You get the sense that you need to find a disk to write it onto");
		addAdvancement(MSAdvancementProvider.CONNECT, "Connect", "Create a connection with someone");
		addAdvancement(MSAdvancementProvider.ENTRY, "A New World", "Create, and use the Cruxite Artifact");
		addAdvancement(MSAdvancementProvider.ALCHEMY, "Step Towards Alchemy", "Getting a punch designix is the first step to alchemizing something else!");
		addAdvancement(MSAdvancementProvider.NEW_MODUS, "A New Type of Frustrating", "Equip a new modus");
		addAdvancement(MSAdvancementProvider.ALL_MODI, "A Full Set", "Try a new modus type");
		addAdvancement(MSAdvancementProvider.GOLD_SEEDS, "Gold Farming", "It begins to dawn on you that everything you just did may have been a colossal waste of time");
		addAdvancement(MSAdvancementProvider.FRENCH_FRY, "Can I Get A, Uh...", "Successfully place and consume an order");
		addAdvancement(MSAdvancementProvider.MELON_OVERLOAD, "M- M- M- MELON OVERLOAAAAD!", "Become overloaded with melons");
		addAdvancement(MSAdvancementProvider.TREE_MODUS, "Uprooting", "Remove the root card in a tree modus with a bunch of items");
		addAdvancement(MSAdvancementProvider.KILL_OGRE, "The Big One", "Kill an ogre");
		addAdvancement(MSAdvancementProvider.RETURN_NODE, "There's No Place Like Home", "Find a Return Node and jump in to return home");
		addAdvancement(MSAdvancementProvider.DUNGEON, "Dungeon Explorer", "Find a Dungeon to explore!");
		addAdvancement(MSAdvancementProvider.COMMUNE, "Commune", "Visit a village and talk to a consort");
		addAdvancement(MSAdvancementProvider.BUGS, "Crunchy and High in Protein", "Eat a bug");
		addAdvancement(MSAdvancementProvider.SHADY_BUYER, "Buyer Beware", "Buy an item from a shady consort");
		
		addLand(FungiLandType.FUNGI, "Fungi");
		addLand(FungiLandType.DANK, "Dank");
		addLand(FungiLandType.MUST, "Must");
		addLand(FungiLandType.MYCELIUM, "Mycelium");
		addLand(FungiLandType.MOLD, "Mold");
		addLand(FungiLandType.MILDEW, "Mildew");
		addLand(ForestLandType.FORESTS, "Forests");
		addLand(ForestLandType.TREES, "Trees");
		addLand(ForestLandType.BOREAL_FORESTS, "Boreal Forests");
		addLand(ForestLandType.TAIGAS, "Taigas");
		addLand(ForestLandType.COLD_FORESTS, "Cold Forests");
		addLand(FrostLandType.FROST, "Frost");
		addLand(FrostLandType.ICE, "Ice");
		addLand(FrostLandType.SNOW, "Snow");
		addLand(HeatLandType.HEAT, "Heat");
		addLand(HeatLandType.FLAME, "Flames");
		addLand(HeatLandType.FIRE, "Fire");
		addLand(RockLandType.ROCK, "Rocks");
		addLand(RockLandType.STONE, "Stone");
		addLand(RockLandType.ORE, "Ore");
		addLand(RockLandType.PETRIFICATION, "Petrification");
		addLand(SandLandType.SAND, "Sand");
		addLand(SandLandType.DUNES, "Dunes");
		addLand(SandLandType.DESERTS, "Deserts");
		addLand(SandLandType.LUSH_DESERTS, "Lush Deserts");
		addLand(SandstoneLandType.SANDSTONE, "Sandstone");
		addLand(SandstoneLandType.STONY_DESERTS, "Stony Deserts");
		addLand(ShadeLandType.SHADE, "Shade");
		addLand(WoodLandType.WOOD, "Wood");
		addLand(WoodLandType.OAK, "Oak");
		addLand(WoodLandType.LUMBER, "Lumber");
		addLand(FloraLandType.FLORA, "Flora");
		addLand(FloraLandType.FLOWERS, "Flowers");
		addLand(FloraLandType.THORNS, "Thorns");
		addLand(RainbowLandType.RAINBOW, "Rainbows");
		addLand(RainbowLandType.COLORS, "Colors");
		addLand(RainLandType.RAIN, "Rain");
		addLand(RainLandType.ISLANDS, "Islands");
		addLand(RainLandType.SKY, "Sky");
		addLand(EndLandType.END, "End");
		addLand(EndLandType.DIMENSION, "Dimension");
		addLand(BucketsLandType.BUCKETS, "Buckets");
		addLand(CakeLandType.CAKE, "Cake");
		addLand(CakeLandType.DESSERTS, "Desserts");
		addLand(ClockworkLandType.CLOCKWORK, "Clockwork");
		addLand(ClockworkLandType.GEARS, "Gears");
		addLand(FrogsLandType.FROGS, "Frogs");
		addLand(LightLandType.LIGHT, "Light");
		addLand(LightLandType.BRIGHTNESS, "Brightness");
		addLand(PulseLandType.PULSE, "Pulse");
		addLand(PulseLandType.BLOOD, "Blood");
		addLand(RabbitsLandType.RABBITS, "Rabbits");
		addLand(RabbitsLandType.BUNNIES, "Bunnies");
		addLand(SilenceLandType.SILENCE, "Silence");
		addLand(ThoughtLandType.THOUGHT, "Thought");
		addLand(ThunderLandType.THUNDER, "Thunder");
		addLand(ThunderLandType.LIGHTNING, "Lightning");
		addLand(ThunderLandType.STORMS, "Storms");
		addLand(WindLandType.WIND, "Wind");
		addLand(MonstersLandType.MONSTERS, "Monsters");
		addLand(TowersLandType.TOWERS, "Towers");
		add(LandTypePair.FORMAT, "Land of %s and %s");
		add(LandInfo.LAND_ENTRY, "Welcome to %s.");
		
		addEffect(MSEffects.CREATIVE_SHOCK, "Creative Shock");
		
		addStrife(KindAbstratusList.SWORD, "Bladekind");
		addStrife(KindAbstratusList.BOW, "Bowkind");
		addStrife(KindAbstratusList.PICKAXE, "Pickaxekind");
		addStrife(KindAbstratusList.AXE, "Axekind");
		addStrife(KindAbstratusList.HOE, "Hoekind");
		addStrife(KindAbstratusList.SHOVEL, "Spadekind");
		addStrife(KindAbstratusList.HAMMER, "Hammerkind");
		addStrife(KindAbstratusList.CANE, "Canekind");
		addStrife(KindAbstratusList.CLUB, "Clubkind");
		addStrife(KindAbstratusList.SICKLE, "Sicklekind");
		addStrife(KindAbstratusList.SPORK, "Sporkkind");
		
		add(GristCacheScreen.TITLE, "Grist Cache");
		add(StrifeSpecibusScreen.TITLE, "Strife Specibus");
		add(StrifeSpecibusScreen.KIND_ABSTRATUS, "Kind Abstratus");
		add(CaptchaDeckScreen.TITLE, "Captchalogue Deck");
		add(CaptchaDeckScreen.USE_ITEM, "Use Item");
		add(EcheladderScreen.TITLE, "Echeladder");
		add(EcheladderScreen.ATTACK, "Attack");
		add(EcheladderScreen.HEALTH, "Health");
		add(EcheladderScreen.CACHE, "Cache Limit");
		add(EcheladderScreen.DAMAGE_UNDERLING, "Damage boost against underlings:");
		add(EcheladderScreen.DAMAGE_UNDERLING_INCREASE, "Damage against underlings: +%d%%");
		add(EcheladderScreen.PROTECTION_UNDERLING, "Underling damage decreased to:");
		add(EcheladderScreen.PROTECTION_UNDERLING_INCREASE, "Underling damage: -%.1f%%");
		add(InventoryEditmodeScreen.TITLE, "Deploy List");
		add(SylladexScreen.TITLE, "Sylladex");
		add(SylladexScreen.EMPTY_SYLLADEX_1, "Are you sure you want to continue?");
		add(SylladexScreen.EMPTY_SYLLADEX_2, "This will empty your sylladex.");
		add(SylladexScreen.EMPTY_SYLLADEX_BUTTON, "Empty Sylladex");
		add(AlchemiterScreen.TITLE, "Alchemiter");
		add(CruxtruderTileEntity.EMPTY, "The cruxtruder gives off an empty click. Perhaps it needs some sort of material to function?");
		add(MiniCruxtruderTileEntity.TITLE, "Miniature Cruxtruder");
		add(MiniTotemLatheTileEntity.TITLE, "Miniature Totem Lathe");
		add(MiniAlchemiterTileEntity.TITLE, "Miniature Alchemiter");
		add(MiniPunchDesignixTileEntity.TITLE, "Miniature Punch Designix");
		add(UraniumCookerTileEntity.TITLE, "Cookalyzer");
		add(SendificatorTileEntity.TITLE, "Sendificator");
		add(GristWidgetTileEntity.TITLE, "GristWidget 12000");
		add(RedstoneClockTileEntity.TIME_CHANGE, "The clock now pulses every %s seconds");
		add(GuiUtil.NOT_ALCHEMIZABLE, "Not Alchemizable");
		add(GuiUtil.FREE, "Free!");
		add(MachineScreen.GO, "GO");
		add(MachineScreen.STOP, "STOP");
		add(GristSelectorScreen.TITLE, "Grist Selector");
		add(GristSelectorScreen.SELECT_GRIST, "Select Grist Type");
		add(ColorSelectorScreen.TITLE, "Color Selector");
		add(ColorSelectorScreen.SELECT_COLOR, "Select Color");
		add(ColorSelectorScreen.COLOR_SELECTED, "If you want to change the color, you can bring up the color selection gui again through the sburb client program, but only until you connect to a server player!");
		add(ColorSelectorScreen.DEFAULT_COLOR_SELECTED, "Default color selected. You can bring up the color selection gui again through the sburb client program, but only until you connect to a server player!");
		addColor("blue", "Blue");
		addColor("orchid", "Orchid");
		addColor("red", "Red");
		addColor("green", "Green");
		addColor("cyan", "Cyan");
		addColor("pink", "Pink");
		addColor("orange", "Orange");
		addColor("emerald", "Emerald");
		addColor("rust", "Rust");
		addColor("bronze", "Bronze");
		addColor("gold", "Gold");
		addColor("iron", "Iron");
		addColor("olive", "Olive");
		addColor("jade", "Jade");
		addColor("teal", "Teal");
		addColor("cobalt", "Cobalt");
		addColor("indigo", "Indigo");
		addColor("purple", "Purple");
		addColor("violet", "Violet");
		addColor("fuchsia", "Fuchsia");
		add(TreeSylladexScreen.AUTOBALANCE_ON, "Auto-balance Active");
		add(TreeSylladexScreen.AUTOBALANCE_OFF, "Auto-balance Inactive");
		add(HashMapSylladexScreen.EJECT_BY_CHAT_ON, "Quick Eject Active");
		add(HashMapSylladexScreen.EJECT_BY_CHAT_OFF, "Quick Eject Inactive");
		add(TitleSelectorScreen.TITLE, "Title Selector");
		add(TitleSelectorScreen.SELECT_TITLE, "Choose Your Title");
		add(TitleSelectorScreen.USED_TITLE, "%s is already used");
		add(TitleSelectorScreen.SELECT, "Select");
		add(TitleSelectorScreen.RANDOMIZE, "Randomize");
		add(EffectTogglePacket.ON, "Aspect Effects have been toggled on");
		add(EffectTogglePacket.OFF, "Aspect Effects have been toggled off");
		add(SkaianetHandler.PRIVATE_COMPUTER, "You are not allowed to access other players computers.");
		add(TransportalizerTileEntity.DISABLED, "This transportalizer is currently disabled with a redstone signal.");
		add(TransportalizerTileEntity.BLOCKED, "The transportalizer appears to need more space above it to function.");
		add(TransportalizerTileEntity.BLOCKED_DESTINATION, "The destination seems to be blocked.");
		add(TransportalizerTileEntity.FORBIDDEN, "Transportalizers have been disabled for this dimension.");
		add(TransportalizerTileEntity.FORBIDDEN_DESTINATION, "Transportalizers have been disabled for the destination dimension.");
		add(GateHandler.DESTROYED, "The destination gate seems to have been destroyed.");
		add(GateHandler.MISSING_LAND, "The land this gate leads to does not exist yet!");
		add(WirelessRedstoneReceiverBlock.NOW_AUTO, "Receiver will now unpower itself automatically.");
		add(WirelessRedstoneReceiverBlock.NOW_NOT_AUTO, "Receiver will now store the highest input power indefinitely.");
		add(SummonerBlock.SUMMON_TYPE_CHANGE, "Summoned entity type changed to %s.");
		add(HashMapModus.MESSAGE, "[HASHMAP] %s %% %s -> %s");
		add(ButtonListProgram.CLEAR_BUTTON, "Clear message");
		add(SburbClient.CLOSE_BUTTON, "Disconnect");
		add(SburbClient.CONNECT_BUTTON, "%s");
		add(SburbServer.EDIT_BUTTON, "Activate edit mode");
		add(SburbServer.GIVE_BUTTON, "Give items");
		add(SburbServer.OPEN_BUTTON, "Open to clients");
		add(SburbClient.RESUME_BUTTON, "Resume connection");
		add(SburbClient.SELECT_COLOR, "Select a Color");
		add(SburbClient.CONNECT, "Connected to %s");
		add(SburbClient.CLIENT_ACTIVE, "Client is already active");
		add(SkaianetHandler.CLOSED, "Connection closed");
		add(SkaianetHandler.CLOSED_SERVER, "Server closed");
		add(SburbServer.OFFLINE, "Server offline");
		add(SburbClient.SELECT, "Select a server below");
		add(SburbServer.SERVER_ACTIVE, "Server with your name exists");
		add(SburbClient.RESUME_CLIENT, "Waiting for server...");
		add(SburbServer.RESUME_SERVER, "Waiting for client...");
		add(SkaianetHandler.STOP_RESUME, "Stopped resuming");
		add(SburbClient.NAME, "Client");
		add(SburbServer.NAME, "Server");
		add(MergeResult.ABLE, "Able to merge");
		add(MergeResult.LOCKED, "Either session is locked");
		add(MergeResult.GLOBAL_SESSION_FULL, "Game session is full");
		add(MergeResult.SESSION_FULL, "The session is full");
		add(MergeResult.MERGED_SESSION_FULL, "Too many players in total in both player's sessions");
		add(MergeResult.BOTH_CUSTOM, "Can't merge two custom sessions");
		add(MergeResult.GENERIC_FAIL, "Merge failed");
		add(Generator.NO_AVAILABLE_TITLES, "No title was available to generate under current circumstances.");
		
		add(GristLayerInfo.INFO, "Grist types at this position; common: %s, uncommon: %s, any: %s");
		add(CheckLandCommand.CHECK, "You are currently in %s.");
		add(CheckLandCommand.FAIL, "You are currently not in a land dimension.");
		add(SendGristCommand.SUCCESS, "Successfully gave grist to %s: %s");
		add(SendGristCommand.RECEIVE, "Received grist from %s: %s");
		add(SendGristCommand.NOT_PERMITTED, "You are not permitted to send grist to %s.");
		add(SendGristCommand.CANT_AFFORD, "You do not have enough grist to send %s.");
		add(GristCommand.GET, "%s has: %s");
		add(GristCommand.ADD, "Successfully modified the grist cache for %s players.");
		add(GristCommand.SUCCESS, "Successfully modified the grist cache for %s.");
		add(GristCommand.FAILURE, "Failed to modify the grist cache for %s.");
		add(GristCommand.SET, "Set the grist cache for %s players to %s.");
		add(SetRungCommand.SUCCESS, "Successfully changed the echeladder of %s players to rung %d with %d%% progress.");
		add(PorkhollowCommand.SEND, "Successfully sent %s boondollars to %s.");
		add(PorkhollowCommand.RECEIVE, "Received %s boondollars from %s.");
		add(PorkhollowCommand.TAKE, "Successfully took out %s boondollars from your porkhollow.");
		add(PorkhollowCommand.INSUFFICIENT, "You do not have enough boondollars to do that.");
		add(TransportalizerCommand.NOT_FOUND, "Couldn't find transportalizer with ID \"%s\"");
		add(TransportalizerCommand.FAILURE, "Teleportation failed for %s");
		add(TransportalizerCommand.FAILURE_RESULT, "Failed the teleport anything.");
		add(TransportalizerCommand.RESULT, "Successfully teleported %s entities to transportalizer");
		add(SburbConnectionCommand.SUCCESS, "Successfully set %s's server player as %s");
		add(SburbConnectionCommand.LOCKED, "Their session is locked, and should no longer be modified");
		add(SburbConnectionCommand.ALREADY_CONNECTED, "Those players have already been connected");
		add(DebugLandsCommand.MUST_ENTER, "You must have entered before you can create debug lands");
		add(SburbPredefineCommand.SET_TITLE, "Predefined %s's title as %s");
		add(SburbPredefineCommand.SET_TERRAIN_LAND, "Predefined %s's terrain land type");
		add(SburbPredefineCommand.SET_TITLE_LAND, "Predefined %s's title land type");
		add(SburbPredefineCommand.DEFINE, "Predefined full data for %s");
		add(GristTypeArgument.INVALID, "Invalid grist type %s");
		add(GristSetArgument.INCOMPLETE, "Incomplete (expected pairs of integers and grist types)");
		add(GristSetArgument.DUPLICATE, "Duplicate grist type %s");
		add(TitleArgument.INVALID_CLASS, "Invalid class %s");
		add(TitleArgument.INVALID_ASPECT, "Invalid aspect %s");
		add(TitleArgument.INCOMPLETE, "Incomplete (expected a class and an aspect)");
		add(TitleLandTypeArgument.INVALID, "Invalid title land type %s");
		add(TerrainLandTypeArgument.INVALID, "Invalid terrain land type %s");
		add(LandTypePairArgument.INCOMPLETE, "Incomplete (expected two land aspects)");
		
		add(PredefineData.TITLE_ALREADY_SET, "That player already has their title set to %s");
		add(PredefineData.TITLE_ALREADY_USED, "The title %s is already used in that players session");
		add(PredefineData.RESETTING_TERRAIN_TYPE, "The currently set terrain type %s is not compatible with land type, and will be reset");
		add(PredefineData.GENERATED_TITLE, "Generated %s as predefined title");
		add(PredefineData.CHANGED_TITLE, "Changed predefined title from %s to %s due to a new title land type");
		add(PredefineData.GENERATED_TITLE_LAND, "Generated %s as predefined title land type");
		add(PredefineData.CHANGED_TITLE_LAND, "Changed predefined title land type from %s to %s due to a new terrain land type");
		
		add(JeiGristCost.GRIST_COSTS, "Grist Costs");
		
		add(MSKeyHandler.CATEGORY, "Minestuck");
		add(MSKeyHandler.STATS_GUI, "View General Minestuck Gui");
		add(MSKeyHandler.EXIT_EDIT_MODE, "Exit Edit Mode");
		add(MSKeyHandler.CAPTCHALOGUE, "Captchalogue Held Item");
		add(MSKeyHandler.ASPECT_EFFECT_TOGGLE, "Toggle Aspect Effects");
		add(MSKeyHandler.SYLLADEX, "Open Sylladex");
		
		add(LotusFlowerEntity.REGROW, "There are no petals on this plant, maybe it will regrow?");
		
		addDamageMessage(MSDamageSources.SPIKE, "%s was filled with too many holes from spikes");
		addDamageMessageWithKiller(MSDamageSources.SPIKE, "%1$s was caught in a spike trap whilst trying to escape %2$s");
		addDamageMessage(MSDamageSources.DECAPITATION, "%s had their head chopped off");
		addDamageMessageWithKiller(MSDamageSources.DECAPITATION, "%1$s lost their head whilst engaged with %2$s");
		
		add(ConsortMerchantInventory.CANT_AFFORD, "You don't have enough boondollars for that!");
		add(MessageType.MISSING_ITEM, "You need a %s for that!");
		addDialogue("thanks", "Thanks!");
		addDialogue("thank_you", "Thank you!");
		addDialogue("dots", "...");
		addDialogue("sadface", ":(");
		//Wind
		addDialogue("dad_wind", "My dad was blown away in one of the recent wind storms.");
		addDialogue("pyre.1", "If only I was faster than the wind! That would be fun!");
		addDialogue("pyre.2", "Actually, nevermind. I would be burned on a pyre for being a witch due to our primal society.");
		//Pulse
		addDialogue("koolaid", "Some people say the oceans of blood are actually kool-aid. I'm too scared to taste it for myself.");
		addDialogue("murder_rain", "You don't want to know what it's like to be outside when it rains. You can't tell who's a murderer or who forgot an umbrella!");
		addDialogue("swimming", "If you're looking for a good land to swim in, it's definitely not this one.");
		addDialogue("blood_surprise", "OH GOD IS THAT BLOOD oh wait nevermind.");
		//Thunder
		addDialogue("skeleton_horse", "Some people say at night, skeletons riding skeleton horses come through the town.");
		addDialogue("blue_moon", "Every once in a blue moon, lightning strikes and burns down the village. We have to rebuild it!");
		addDialogue("reckoning.1", "Those darn doomsayers, preaching about the Apocalypse and The Reckoning and such!");
		addDialogue("reckoning.2", "What's The Reckoning? It's when meteors from The Veil are sent towards Skaia.");
		addDialogue("reckoning.3", "Like any reasonable %s believes in that!");
		addDialogue("lightning_strike", "You don't want to be struck by lightning. No one does.");
		addDialogue("thunder_death.1", "We're lucky to have rain with this weather.");
		addDialogue("thunder_death.2", "Otherwise the thunder would surely have been our death.");
		addDialogue("hardcore", "This land is HARDCORE! There's lava and lightning wherever you go!");
		addDialogue("thunder_throw.1", "Nemesis has been throwing thunder for generations, not stopping for even a moment.");
		addDialogue("thunder_throw.2", "They are even doing it in their sleep. Can you believe that?");
		//Rabbits
		addDialogue("bunny_birthday", "Our daughter wants a bunny for her birthday, even though she caught six in the past three hours.");
		addDialogue("rabbit_eating", "One time our village ran out of food and we tried eating rabbits. It was a dark period in our village history.");
		addDialogue("edgy_life_hatred", "This place is just so full of life! I despise it.");
		addDialogue("rabbit.food_shortage.1", "This land is already pretty desolate. There being lots of rabbits eating everything they find doesn't help!");
		addDialogue("rabbit.food_shortage.2", "But with that many rabbits around, there sure are other ways of getting food...");
		addDialogue("rabbit.food.1", "I sure wonder where the rabbits are getting their food from.");
		addDialogue("rabbit.food.2a", "There's not really much food to be found in this desolate place.");
		addDialogue("rabbit.food.3a", "Except maybe cacti, but would rabbits eat something that prickly?");
		addDialogue("rabbit.food.2b", "I mean, there's not really much else than mushrooms around here.");
		//Monsters
		addDialogue("pet_zombie", "I've heard moaning coming from our son's bedroom. I found out he's keeping a pet zombie in there! Tamed it and everything!");
		addDialogue("spider_raid", "A few giant spiders raided our village last night, taking all of our bugs! Those monsters...");
		addDialogue("monstersona", "What's your monster-sona? Mine is a zombie.");
		//Towers
		addDialogue("bug_treasure", "Legends say underneath the tower to the north is a Captain Lizardtail's buried treasure! Literal tons of bugs, they say!");
		addDialogue("tower_gone", "That tower over there was built by my great grandpa Fjorgenheimer! You can tell by how its about to fall apa- oh it fell apart.");
		addDialogue("no_tower_treasure", "I feel ripped off. I was born in a land full of magical towers but none of them have treasure!");
		//Thought
		addDialogue("glass_books", "Our smartest villager read all the books in the library and now knows how to make glass jars! He's a gift from the big frog above!");
		addDialogue("book_food", "We ate all the books in the nearby college ruins. It turns out thousand-year-old leather doesn't make the best dinner.");
		addDialogue("to_eat", "To eat or not to eat, that is the question.");
		//Cake
		addDialogue("mystery_recipe", "All of the villagers here are trying to crack the mystery of how to make the frosted bread we see all day on our walks.");
		addDialogue("cake_regen", "I heard all the cakes magically regenerate if you don't completely eat them! That's completely stupid!");
		addDialogue("cake_recipe", "Let's see, the recipe calls for 5 tbsp. of sugar, 2 tbsp. vanilla, 1 large grasshopper... what are you looking at?");
		addDialogue("fire_cakes", "If you're not careful, anything can set you on fire here, even the cakes!");
		addDialogue("frosting", "When we start talking about cakes, the others start mentioning frosting. I'm not sure I get what they're talking about!");
		//Clockwork
		addDialogue("gear_technology", "Legends say the giant gears were used for technology no consort has ever seen before. That's absurd! It's obviously food!");
		addDialogue("evil_gears", "My neighbor says the gears are evil! He also said that swords are used for combat, so he's probably insane.");
		addDialogue("ticking", "The ticking keeps me up all night. It keeps us all up all night. Save us.");
		//Frogs
		addDialogue("frog_creation", "We are thankful for all the frogs that They gave to us when the universe was created. They, of course, is the genesis frog. I feel bad for the fool who has to make another!");
		addDialogue("frog_location", "You won't find many frogs where you find villages. Most of them live where the terrain is rougher.");
		addDialogue("frog_imitation", "Ribbit, ribbit! I'm a frog! I don't care what you say!");
		addDialogue("frog_variants.1", "Most people believe there aren't that many types of frogs. 4740, maybe? Anything beyond that would be proposterous.");
		addDialogue("frog_variants.2", "Here in %s, however, we know that there are 9.444731276889531e+22 types of frogs.");
		addDialogue("frog_hatred", "For whatever reason, residents of Derse HATE frogs! Why would someone hate frogs?");
		addDialogue("grasshopper_fishing.1", "My brother found a magic grasshopper while fishing recently!");
		addDialogue("grasshopper_fishing.2", "Usually all we find are rings!");
		addDialogue("gay_frogs", "The frogs around here are all so gay! Look at them happily hopping about!");
		addDialogue("non_teleporting_frogs", "While the rest of us are getting dizzy, teleporting at random in the tall grass, the frogs seem immune! Makes it harder to catch them, that's for sure.");
		//Buckets
		addDialogue("lewd_buckets", "Some may call our land lewd, but the buckets are just so fun to swim in!");
		addDialogue("water_buckets", "The buckets are a great source of water, as long as you pick the ones with water...");
		addDialogue("warm_buckets", "Did you know that some buckets provide warmth? I tend to curl up next to one from time to time.");
		addDialogue("oil_buckets.1", "Did you know that the buckets sometimes hold something other than oil?");
		addDialogue("oil_buckets.2", "In some cases, they even contain something drinkable!");
		//Light
		addDialogue("blindness", "God, it's bright. Half of our village is blind. It's beginning to become a serious problem.");
		addDialogue("doctors_inside", "Our best village doctors found that staying outside in the blinding light for too long is not good for us. Most of us stay inside all our lives. It's sad.");
		addDialogue("staring", "Are you staring at me? No, really! I can't see because I'm blind.");
		addDialogue("sunglasses.1", "You'd better wear sunglasses, else you might not see where you're going.");
		addDialogue("sunglasses.2", "This is not the best place to wander blindly in.");
		addDialogue("bright_snow.1", "You would think that the light would melt more snow.");
		addDialogue("bright_snow.2", "But nope, the snow stays as frozen as ever!");
		addDialogue("glimmering_snow", "Isn't it wonderful how much the snow is glimmering in the light?");
		addDialogue("glimmering_sand", "Isn't it wonderful how much the sand is glimmering in the light?");
		addDialogue("light_pillars", "Those light pillars... they somehow make me think of the legend of the wyrm.");
		//Silence
		addDialogue("murder_silence", "This is a great place for murder. No one will hear you scream.");
		addDialogue("silent_underlings", "This place is so quiet and peaceful. Too bad we can't hear underlings about to kill us.");
		addDialogue("listening.1", "Shhh, they can hear you...");
		addDialogue("listening.2", "Just kidding, no one can hear you! The land itself muffles your words!");
		addDialogue("calmness", "The sense of calmness in the air, it's kind of unnerving!");
		//Towers
		addDialogue("climb_high", "Climb up high and you'll be up for a great view!");
		addDialogue("height_fear.towers.1", "I'd climb up one of those towers and look at the view, but I am scared of heights.");
		addDialogue("height_fear.towers.2", "I mean, what if I slipped and fell off the stairs?");
		addDialogue("height_fear.rock.1", "I'd climb up one of those rocks and look at the view, but I am scared of heights.");
		addDialogue("height_fear.rock.2", "I mean what if I fell down and landed on my back?");
		addDialogue("height_fear.panic", "AAH, I am scared of heights!");
		//Shade
		addDialogue("mush_farm.1", "Someone's gotta be farmin' all these goddamn fuckin' mushrooms, pain in the ass through truly it be.");
		addDialogue("mush_farm.2", "So that's what I'm doing.");
		addDialogue("mush_farm.3", "Standing around here.");
		addDialogue("mush_farm.4", "farmin' all these");
		addDialogue("mush_farm.5", "goddamn");
		addDialogue("mush_farm.6", "fuckin");
		addDialogue("mush_farm.7", "mushrooms");
		addDialogue("mushroom_pizza", "Do you put glow mushrooms on your pizza or leave them off?");
		addDialogue("mushroom_pizza.on", "Put them on");
		addDialogue("mushroom_pizza.on.reply", "I put them on!");
		addDialogue("mushroom_pizza.on.consort_reply", "Good! I was afraid I'd have to kill you!");
		addDialogue("mushroom_pizza.off", "Leave them off");
		addDialogue("mushroom_pizza.off.reply", "I leave them off!");
		addDialogue("mushroom_pizza.off.consort_reply", "You are a despicable person.");
		addDialogue("fire_hazard", "Our land is a fire waiting to happen! Hopefully there isn't any lightning!");
		//Heat
		addDialogue("getting_hot", "Is it getting hot in here or is it just me?");
		addDialogue("lava_crickets", "Have you ever had a lava-roasted cricket? The lava really brings out the cricket juices.");
		addDialogue("step_into_fire", "You'd better watch where you're going. Wouldn't want you to step right into some fire.");
		//Wood
		addDialogue("wood_treatments", "We figured out how to treat the wood to make it less flammable. I hope we didn't miss a spot.");
		addDialogue("splinters.1", "Be careful not to walk barefoot here, you could get a splinter!");
		addDialogue("splinters.2", "Some of our kind have died due to the amount of splinters they received while on a walk.");
		//Sand & Sandstone
		addDialogue("sand_surfing", "Sand-surfing is my new favorite sport! Too bad you can't really move, though.");
		addDialogue("camel", "Want to buy a used camel? Only 2000 boondollars.");
		addDialogue("camel.yes", "Why not? Seems like a good price for a camel!");
		addDialogue("camel.yes.reply", "Sure!");
		addDialogue("camel.no_camel", "Hahaha! Sucker! I have no camel! Cya later! 8)");
		addDialogue("camel.no", "Of course not! You know better!");
		addDialogue("camel.no.reply", "Not at all!");
		addDialogue("camel.dancing_camel", "Are you sure? Too bad! The camel knew how to dance, too!");
		addDialogue("knockoff", "I kind of feel like we're a stale, knockoff sand land.");
		addDialogue("sandless.1", "According to legend, %s ate all the sand here leaving nothing but sandstone!");
		addDialogue("sandless.2", "I'm kidding, I made that up on the spot. I had no other dialogue.");
		addDialogue("red_better", "Red is much better than yellow, don't you think?");
		addDialogue("yellow_better", "In our village, we have tales of monsters that are atttracted to red. That's why everything is yellow!");
		//Frost
		addDialogue("frozen.1", "My neighbors were complaining the other night about the snow.");
		addDialogue("frozen.2", "Personally, the cold never really bothered me anyways.");
		addDialogue("frozen.2.desc", "You hear a faint \"ba-dum tss\" in the distance.");
		addDialogue("fur_coat", "Darn! I only need 100 more boondollars for a nice, fur coat! I'm going to freeze!");
		addDialogue("fur_coat.pay", "Give them the boondollars [Pay 100 boondollars]");
		addDialogue("fur_coat.pay.reply", "Here you go!");
		addDialogue("fur_coat.grattitude", "Oh, thank you! Now I won't freeze to death out here! Take this as a token of gratitude!");
		addDialogue("fur_coat.ignore", "Don't give them any of your hard-earned boondollars!");
		addDialogue("fur_coat.ignore.reply", "Sorry, but I can't help you.");
		addDialogue("fur_coat.death", "I guess I'll just die then...");
		addDialogue("tent_protection", "These tents doesn't protect against the cold very well, but they are good enough.");
		addDialogue("all_ores", "Jokes on the losers in other lands, we have ALL the resources! All of them!");
		addDialogue("rockfu", "Here in %s, we practice rock-fu! Learn the way of the rock to CRUSH your enemies into a fine rock powder!");
		addDialogue("all_trees", "Jokes on the losers in other lands, we have ALL the trees! All of them!");
		addDialogue("really_likes_trees", "Do you like trees? I really like trees. I am one with the tree. Trees. TREES. TREEEES!");
		//Fungi
		addDialogue("mildew", "Ah, the mildew on the grass in the morning makes the landscape so pretty!");
		addDialogue("mycelium.1", "Frog, don't you love the feeling of mycelium on your toes?");
		addDialogue("mycelium.2", "No? Is that just me?");
		addDialogue("adaptation.1", "At first, no one liked the mushrooms when our planet was cursed with the Dank.");
		addDialogue("adaptation.2", "Those who refused to adapt to the new food source Perished, obviously.");
		addDialogue("jacket", "It's so damp and cold. I wish I had a jacket!");
		addDialogue("mushroom_curse", "Curse %s! And curse all their mushrooms, too! I miss eating crickets instead of all these mushrooms!");
		addDialogue("fungus_destroyer", "According to legends of old, the %s will come one day and get the evil %s to clear up all this fungus!");
		//Rainbow
		addDialogue("generic_green", "Have you ever noticed rainbow wood looks green from a distance? I wonder if green is somehow more generic than other colors.");
		addDialogue("overwhelming_colors", "Even for us turtles, this place is too bright. All the light and colors around here can be really overwhelming!");
		addDialogue("saw_rainbow", "I saw a rainbow yesterday! Normally I see way more than that.");
		addDialogue("sunglasses", "Some sunglasses would be really great in a Land like this. Too bad I don't have ears!");
		addDialogue("what_is_wool", "I have no clue what the ground here is made of. I've never seen anything like it anywhere else!");
		addDialogue("love_colors", "People ask me, \"What's your favorite color?\" I can't pick! I love them all! They're all special in their own way! Well, except green.");
		addDialogue("types_of_colors.1", "In the additive color system, there are three primary colors: red, green, and blue.");
		addDialogue("types_of_colors.2", "In the subtractive color system, there are also three primary colors, but those are magenta, yellow, and cyan.");
		addDialogue("types_of_colors.3", "In the additive system, mixing red and green makes yellow, mixing green and blue makes cyan, and mixing blue and red makes magenta.");
		addDialogue("types_of_colors.4", "In the subtractive system, mixing magenta and yellow makes red, mixing yellow and cyan makes green, and mixing cyan and magenta makes blue!");
		addDialogue("types_of_colors.5", "These six colors make up the color wheel: red, yellow, green, cyan, blue, magenta, and then back to red.");
		addDialogue("types_of_colors.6", "When you look at a rainbow, you don't see magenta, because the blue on one end doesn't mix with the red on the other end.");
		addDialogue("types_of_colors.7", "You do, however, see purple, which is between magenta and blue. Short answer for why that is, your eyes are lying to you.");
		addDialogue("types_of_colors.8", "Beyond the six main colors, however, there are also six other colors: pink, brown, orange, lime, light blue, and purple.");
		addDialogue("types_of_colors.9", "In addition, there are also the tones of white, light gray, gray, and black.");
		addDialogue("types_of_colors.10", "In the additive system, mixing all the colors together makes white.");
		addDialogue("types_of_colors.11", "In the subtractive system, mixing all the colors together makes black.");
		addDialogue("types_of_colors.12", "When dealing with dye, however, you can find some unusual combinations, or lack of combinations.");
		addDialogue("types_of_colors.13", "Dyes work largely on the subtractive color system, but they don't always mix the way they should.");
		addDialogue("types_of_colors.14", "This is because dyes, while vibrant, are imperfect representations of their respective colors.");
		addDialogue("types_of_colors.15", "Lime, for example, should be a mix of yellow and green. To get lime dye, though, you need to mix cactus green with white dye instead.");
		addDialogue("types_of_colors.16", "When mixing red and blue to get magenta, the blue overpowers the red and you get purple. You have to mix the purple with not just red, but pink to get magenta.");
		addDialogue("types_of_colors.17", "Dye is weird like that.");
		addDialogue("types_of_colors.18", "...what, you're still listening to me? Wow. No one's ever listened to the whole thing before. Would you like to hear it again?");
		//End
		addDialogue("at_the_end", "This may be the start of our conversation, but now we're at the end.");
		addDialogue("chorus_fruit", "Never eat fruit. Last time I tried it, I blacked out and came to somewhere else! Stick to bugs like a normal person!");
		addDialogue("end_grass", "The grass in this place just keeps growing everywhere! You can bet that any patches of grass you find weren't there before. I don't even know how it takes root in the stone like that.");
		addDialogue("grass_curse", "Rumors say that %s got mad one day and cursed the world with all this grass everywhere. It gets into our homes!");
		addDialogue("tall_grass", "The taller grass is so disorienting to walk through! Unless you are careful it will just move you around.");
		addDialogue("useless_elytra", "One time, I saw a guy with some weird wing-looking things on his back. He could glide with them, but without being able to stay in the air, what's the point?");
		//Rain
		addDialogue("empty_ocean", "Our oceans used to be filled with life! Now they're all barren, thanks to %s.");
		addDialogue("forbidden_snack", "Contrary to popular belief, chalk is not safe for consumption... but how can I resist its allure?");
		addDialogue("cotton_candy", "Have you ever considered eating a rain cloud? Yum! Maybe it tastes like cotton candy...");
		addDialogue("monsters_below", "Do you know what lies deep beneath the ocean waters? Scary to think about!");
		addDialogue("keep_swimming", "Just keep swimming, just keep swimming! Yay, swimming!");
		//flora
		addDialogue("battle_site", "This land was the site of a battle ages and ages and ages ago.");
		addDialogue("blood_oceans", "The giant creatures who warred here long ago shed so much blood that, even now, the oceans are red with it.");
		addDialogue("giant_swords", "My grandpa told me that the giant swords everywhere were dropped by giants locked in combat ages ago.");
		addDialogue("bloodberries.1", "The strawberries here grow big and red thanks to all the blood in the water supply! The flowers thrive, too!");
		addDialogue("bloodberries.2", "Strawberry juice is the only thing safe to drink here. If I have any more, I'll scream. Please save us.");
		addDialogue("immortality_herb.1", "I have a herb that grants immortality! I'm going to eat it right now!");
		addDialogue("immortality_herb.2", "However, they are easily confused with an explosion-causing herb...");
		addDialogue("immortality_herb.3", "I'm taking the risk.");
		addDialogue("spices.1", "A good chef cooks with the spices found throughout the land.");
		addDialogue("spices.2", "Other chefs are envious that they don't live in %s.");
		addDialogue("sharp_slide", "Don't use the sharp sides of giant swords as slides. May her beautiful soul rest in pieces.");
		
		addDialogue("denizen_mention", "It's a wonderful day. Hopefully some monster underneath the planet's surface doesn't eat us all!");
		addDialogue("floating_island", "I heard a floating island just appeared somewhere near here recently and falling chunks destroyed a village underneath it!");
		addDialogue("ring_fishing", "My brother found a magic ring while fishing recently!");
		addDialogue("frog_walk", "Frog, it's such a wonderful day to just walk around a village.");
		addDialogue("delicious_hair", "Holy leapin' god, you have such wonderful hair! Can I eat some?");
		addDialogue("lazy_king", "I feel like our king just sits around doing nothing but eating weird glowing mushrooms! So lazy!");
		addDialogue("music_invention", "I invented music, y'kno! My favorite song goes like ba ba dum, dum ba dum.");
		addDialogue("wyrm", "Legends speak of the Wyrm, a giant ivory pillar that radiates joy and happiness and uselessness.");
		addDialogue("heroic_stench", "You smell kind of... heroic... like a hero, perhaps? It makes me kinda nervous to be around you!");
		addDialogue("leech_stench", "You smell like you're leeching from the success from another hero... is this true?");
		addDialogue("rap_battle", "I challenge you to a rap battle! Accept challenge? Y/N");
		addDialogue("rap_battle.accept", "Accept this consort's challenge!");
		addDialogue("rap_battle.accept.reply", "Y! I'll take you on! You can even go first.");
		addDialogue("rap_battle.deny", "Don't bother with this guy.");
		addDialogue("rap_battle.deny.reply", "N. Maybe later.");
		addDialogue("rap_battle.deny_answer", "Maybe one day I will find a challenger worthy of my greatness....");
		addDialogue("rap_battle.a1", "I see you carryin' a pick");
		addDialogue("rap_battle.a2", "You think you minin'? Sick");
		addDialogue("rap_battle.a3", "But uh...");
		addDialogue("rap_battle.a4", "you ain't. Word.");
		addDialogue("rap_battle.b1", "You're green and square, kinda beveled on the sides");
		addDialogue("rap_battle.b2", "And the corners I guess. Or are they called vertexes?");
		addDialogue("rap_battle.b3", "But I'm sayin' you're generic. Like, so generic");
		addDialogue("rap_battle.b4", "it doesn't make sense. ... uh, sorry for being a jerk.");
		addDialogue("rap_battle.c1", "Yeah. Yeah. Yeah. Yeah.");
		addDialogue("rap_battle.c2", "Ooh. Ooh. Ooh. Ooh.");
		addDialogue("rap_battle.c3", "%1$s. %1$s. %1$s. %1$s.");
		addDialogue("rap_battle.c4", "Yeah. Yeah. Yeah. Yeah.");
		addDialogue("rap_battle.d1", "I'm the Knight of Time, the god of sick beats");
		addDialogue("rap_battle.d2", "Settle down and lemme... why are you giving me that look?");
		addDialogue("rap_battle.d3", "This is my own original rap!");
		addDialogue("rap_battle.d4", "Really!");
		addDialogue("rap_battle.e1", "Incaseyoucouldn'ttell,");
		addDialogue("rap_battle.e2", "you'reuglyandyousmell!");
		addDialogue("rap_battle.e3", "OOOHHHHHHHHH!");
		addDialogue("rap_battle.e4", "...That's how rap works, right?");
		addDialogue("rap_battle.f1", "Have a nice trip and I'll see you next fall!");
		addDialogue("rap_battle.f2", "I hope you don't mind that my house isn't tall,");
		addDialogue("rap_battle.f3", "'Cuz them things is dang'rous and although no one cares,");
		addDialogue("rap_battle.f4", "I'm tellin' ya, dawg, I WARNED YOU 'BOUT STAIRS!");
		addDialogue("rap_battle.raps_desc", "... that rap was really awful.");
		addDialogue("rap_battle_school", "Schoo' that foo'!");
		addDialogue("rap_battle_school.reply", "All right, now it's my turn.");
		addDialogue("rap_battle_school.rap", "The %s proceeded to drop sick fire unlike any the %s had ever seen before.");
		addDialogue("rap_battle_school.final", "%s. You are the greatest rapper ever.");
		addDialogue("rap_battle_concede", "Let the poor guy think they won.");
		addDialogue("rap_battle_concede.reply", "... wow. I'm just... not going to try to go against something like that.");
		addDialogue("rap_battle_concede.final", "%s, yes! I am the greatest rapper ever!");
		
		
		addDialogue("useless_pogo", "I once found this piece of junk that launched me upward when I hit the ground with it. It really hurt when I came back down, and I didn't get anywhere!");
		addDialogue("await_hero", "Here, in the %s, we %s worship the %s. We wait and hope for the day that they awaken.");
		addDialogue("watch_skaia", "Sometimes, I look up in the sky to see Skaia and wish I could visit there some day...");
		addDialogue("at_skaia.1", "OH MY %s! I'M ACTUALLY ON SKAIA!");
		addDialogue("at_skaia.2", "Oh my...! I'm actually on Skaia!");
		addDialogue("visited_skaia", "You know, I have actually visited Skaia at one point!");
		addDialogue("zazzerpan", "Old wizard Zazzerpan would be turning in his grave if he saw the horrors that walk these lands. Those giclopes sure are terrifying!");
		addDialogue("texas_history", "The place was %s, the year, was 20XX.");
		addDialogue("disks", "I used to be an adventurer like you, then I never got the disks.");
		addDialogue("whoops", "Beware the man who speaks in hands, wait...wrong game.");
		addDialogue("fourth_wall", "Maybe you should do something more productive than talking to NPCs.");
		addDialogue("hats", "I like crumpled hats, they're comfy and easy to wear!");
		addDialogue("wwizard", "Secret wizards? Th-there are no secret wizards! Wh-what're you speaking of, o-outlandish traveller?");
		addDialogue("stock_market", "I bought a bunch of stocks on the market... Now I'm broke...");
		addDialogue("identity", "I heard that the true name of the %s is %s. Isn't that cool?");
		addDialogue("college.1", "Please, I need to pay for my children to attend college...");
		addDialogue("college.2", "Wow, you have so many boondollars! I'll never make that much in my short, amphibious lifetime.");
		addDialogue("unknown.1", "They are coming...");
		addDialogue("unknown.2", "Huh? 'Who the fuck is They'? What kind of question is that?! I don't know! Who the fuck are you?");
		addDialogue("cult.1", "We would love to invite you, %s, to our secret wizards cult.");
		addDialogue("cult.2", "Meet me by dawn with mercury, salt, and sulfur to begin the initiation.");
		addDialogue("peppy_offer", "Hey there! I've got a wonderful item here for just 1000 boondollars? How about it kid?");
		addDialogue("peppy_offer.desc", "This consort is way too nice to ever scam you! Surely you can trust them?");
		addDialogue("peppy_offer.buy", "Buy \"Wonderful item\" [Pay 1000 boondollars]");
		addDialogue("peppy_offer.buy.reply", "Sure! Why not?");
		addDialogue("peppy_offer.item", "Here you are!");
		addDialogue("peppy_offer.deny", "Do not buy from cheery salesman.");
		addDialogue("peppy_offer.deny.reply", "No thanks! I'm short on cash.");
		addDialogue("peppy_offer.next", "Oh! No worries! How about I sell it to you for just 500 boondollars instead??");
		addDialogue("peppy_offer.deny_again", "Still do not buy from cheery salesman.");
		addDialogue("peppy_offer.deny_again.reply", "I'm sorry, I meant *really* short on cash...");
		addDialogue("peppy_offer.buy_2", "Buy that cheap item! [pay 500 boondollars]");
		addDialogue("peppy_offer.buy_2.reply", "Sure! I'd be glad to!");
		addDialogue("peppy_offer.purchase", "Thank you for your money!");
		addDialogue("title_presence", "I sense the presence of the %s. Tell me if you see them, ok?");
		addDialogue("title_presence.iam", "Present yourself as the %s.");
		addDialogue("title_presence.iam.reply", "I am the %s.");
		addDialogue("title_presence.iam_answer", "OH MY %s");
		addDialogue("title_presence.agree", "\"Agree\" to do that.");
		addDialogue("title_presence.agree.reply", "Hehe, ok I will.");
		addDialogue("shady_offer", "Hey kid... I'll give you something special for 1000 boondollars...");
		addDialogue("shady_offer.desc", "This consort seems pretty shady. You're not sure whether or not to trust them...");
		addDialogue("shady_offer.buy", "Buy \"Something special\" [Pay 1000 boondollars]");
		addDialogue("shady_offer.buy.reply", "Ok... Sure??");
		addDialogue("shady_offer.item", "Here, kid.");
		addDialogue("shady_offer.deny", "Do not buy from the shadowy dealer.");
		addDialogue("shady_offer.deny.reply", "Uh, no thanks...");
		addDialogue("shady_offer.next", "You're missin' out kiddo. %s it. I'll sell you this thing for 500 boondollars.");
		addDialogue("shady_offer.deny_again", "It may be a deception, do not buy the \"thing\"!");
		addDialogue("shady_offer.deny_again.reply", "I said no already.");
		addDialogue("shady_offer.buy_2", "buy it already! [Pay 500 boondollars]");
		addDialogue("shady_offer.buy_2.reply", " Sure! Fine! Ok! Jeez...");
		addDialogue("shady_offer.purchase", "Thanks for your cash.");
		
		addDialogue("denizen", "%s has been sleeping for a thousand years. I shudder at the thought of their return.");
		addDialogue("denizen.what", "What?");
		addDialogue("denizen.what.reply", "The... what?");
		addDialogue("denizen.explain", "The Denizen is the One that Slumbers in our very soil. It is eternally waiting for the %s to awaken it. Then they will be given The Choice, and their victory will be determined by what they choose.");
		addDialogue("denizen.ask_alignment", "Ask if the denizens are bad or not.");
		addDialogue("denizen.ask_alignment.reply", "Were these 'denizens' bad?");
		addDialogue("denizen.alignment", "How am I supposed to know if they were good or bad? There's more to a living being than just black and white!");
		
		addDialogue("hungry", "I'm hungry. Have any bugs? Maybe a chocolate chip cookie? Mmm.");
		addDialogue("hungry.ask_food", "A %s! Could I have some?");
		addDialogue("hungry.accept", "Yes");
		addDialogue("hungry.accept.reply", "Sure, here.");
		addDialogue("hungry.deny", "No");
		addDialogue("hungry.deny.reply", "I don't really want to give this away.");
		addDialogue("hungry.thanks", "Thank you! I will remember your kindness for the rest of my short life.");
		addDialogue("hungry.starving", "But I am starving here! What if I paid you 10 boondollars for it?");
		addDialogue("hungry.agree", "Sure");
		addDialogue("hungry.agree.reply", "Sure, I can agree to that.");
		addDialogue("hungry.too_cheap", "Too Cheap");
		addDialogue("hungry.too_cheap.reply", "I won't let it go that cheap.");
		addDialogue("hungry.finally", "Finally!");
		addDialogue("hungry.finally.desc", "You are given 10 boondollars for the %s.");
		addDialogue("hungry.end", "Fine. I will just go and find a real food store.");
		
		addDialogue("breeze_food_shop", "It's hard to catch our food with the Breeze carrying them away and whatnot!");
		addDialogue("blood_food_shop", "Hope you like red meat!");
		addDialogue("rabbit_food_shop", "Rabbit stew! Mmmm!");
		addDialogue("lightning_food_shop", "Lightning-smoked meat really adds to the flavor!");
		addDialogue("frog_leg_food_shop", "Frog legs are good but eating them is heresy! Buy some of our food instead!");
		addDialogue("buckets_food_shop", "Ever soaked your grist candies in the liquids the buckets contain? It really enhances the taste!");
		addDialogue("time_food_shop", "Tick Tock, time's a-wasting! Eat something or leave!");
		addDialogue("thyme_food_shop", "Take your mind off of the limited time we have left alive with food!");
		addDialogue("library_food_shop", "I'm selling recipes I made from a nearby library's cookbook. Buy some!");
		addDialogue("cake_food_shop", "Who needs cake when you have crickets!");
		addDialogue("light_food_shop", "Crickets are nocturnal so our species' main food source is hard to find here. Oh well!");
		addDialogue("silence_food_shop", "This place used to be filled with the sounds of crickets until we captured them all for food!");
		addDialogue("rage_food_shop", "You're not you when you're hungry. Buy a snickers!");
		addDialogue("hope_food_shop", "I HOPE you're hungry!");
		addDialogue("hope_food_shop.desc", "You hear a faint ba-dum tss in the distance.");
		addDialogue("frog_food_shop", "We would never eat frogs here in the %s! Grasshoppers, though...");
		addDialogue("food_shop", "You hungry? I bet you are! Why else would you be talking to me?");
		addDialogue("fast_food", "Welcome to MacCricket's, what would you like?");
		addDialogue("grocery_store", "Thank you for choosing Stop and Hop, this village's #1 one grocer!");
		addDialogue("tasty_welcome", "Welcome. I hope you find something tasty among our wares.");
		
		addDialogue("breeze_general_shop", "The breeze has brought me many fine wares.");
		addDialogue("blood_general_shop", "I accept payment in blood. And boondollars. I also take checks.");
		addDialogue("life_general_shop", "Twenty years selling losers hats and shit really takes the life out of you.");
		addDialogue("doom_general_shop", "With my prices, my competitors are doomed!");
		addDialogue("frog_general_shop", "Get your frog merchandise here! Limited time only! ....Just kidding, I'm always here.");
		addDialogue("buckets_general_shop", "Here's a witty one-liner tying in buckets and general stores!");
		addDialogue("time_general_shop", "Future me has told me that some sucker would buy tons of \"goods\" from me... will that sucker be you?");
		addDialogue("book_general_shop", "Books have taught us how to sell as much useless crap as possible, want some?");
		addDialogue("cake_general_shop", "Don't buy goods here. Cake is our specialty, not general goods. Very low quality.");
		addDialogue("light_general_shop", "You may be blind but I'm sure you can see our prices are fantastic!");
		addDialogue("silence_general_shop", "This land may be silent but our prices will make you SCREAM!... with joy, of course!");
		addDialogue("rage_general_shop", "Other store's prices are INFURIATING! Our prices, however, will soothe that frustration!");
		addDialogue("tower_general_shop", "I got the goods; they're all recently raided from a nearby tower!");
		addDialogue("general_shop", "We have generic goods for generic people!");
		addDialogue("got_the_goods", "You want the goods? We got the goods.");
		addDialogue("rising_shop", "We have top tier goods for a top tier god!");
		addDialogue("boring_shop", "Looking for something that won't catch your eye? You've come to the right place!");
		
		//TODO Here are some unimplemented dialogue
		addDialogue("cant_see", "We spent a lot of time making this shop looks really nice, we may have overdone it though, I can barely see over this counter.");
		addDialogue("naked", "Special offer on shell polish, dear custom- wait a minute, where's your shell? Are you naked?");
		addDialogue("vines", "Please don't climb on the vines outside, I won't be able to reach you and it'll be really upsetting to watch me fruitlessly try.");
		addDialogue("skaia_rocket", "My house may be kind of in the ground, but my dreams are taller than any Giclops! One day I'm gonna fly a rocket to Skaia and prove that we're not all so timid.");
		addDialogue("advertisement", "Been to the shop? They've got the best %s in the area!");
		
		addSubtitles("warhorn", "Warhorn sounds");
		addSubtitles("whispers", "Spooky Whispers");
		addSubtitles("horn", "Horn honks");
		addSubtitles("screech", "Estrogen-empowered screech");
		addSubtitles("upcheladder", "Echeladder levels up");
		addSubtitles("electric_shock", "Electric Shock");
		addSubtitles("amajor_electric_autoharp_stroke", "A Major plays on electric autoharp");
		addSubtitles("bmajor_electric_autoharp_stroke", "B Major plays on electric autoharp");
		addSubtitles("bbmajor_electric_autoharp_stroke", "Bb Major plays on electric autoharp");
		addSubtitles("cmajor_electric_autoharp_stroke", "C Major plays on electric autoharp");
		addSubtitles("dmajor_electric_autoharp_stroke", "D Major plays on electric autoharp");
		addSubtitles("ebmajor_electric_autoharp_stroke", "Eb Major plays on electric autoharp");
		addSubtitles("emajor_electric_autoharp_stroke", "E Major plays on electric autoharp");
		addSubtitles("fmajor_electric_autoharp_stroke", "F Major plays on electric autoharp");
		addSubtitles("gmajor_electric_autoharp_stroke", "G Major plays on electric autoharp");
		
		addEntitySubtitles(MSEntityTypes.NAKAGATOR, "ambient", "Nakagator naks");
		addEntitySubtitles(MSEntityTypes.NAKAGATOR, "hurt", "Nakagator hurts");
		addEntitySubtitles(MSEntityTypes.NAKAGATOR, "death", "Nakagator dies");
		addEntitySubtitles(MSEntityTypes.IGUANA, "ambient", "Iguana thips");
		addEntitySubtitles(MSEntityTypes.IGUANA, "hurt", "Iguana hurts");
		addEntitySubtitles(MSEntityTypes.IGUANA, "death", "Iguana dies");
		addEntitySubtitles(MSEntityTypes.SALAMANDER, "ambient", "Salamander blubs");
		addEntitySubtitles(MSEntityTypes.SALAMANDER, "hurt", "Salamander hurts");
		addEntitySubtitles(MSEntityTypes.SALAMANDER, "death", "Salamander dies");
		addEntitySubtitles(MSEntityTypes.TURTLE, "hurt", "Turtle hurts");
		addEntitySubtitles(MSEntityTypes.TURTLE, "death", "Turtle dies");
		addEntitySubtitles(MSEntityTypes.FROG, "ambient", "Frog croaks");
		addEntitySubtitles(MSEntityTypes.FROG, "hurt", "Frog hurts");
		addEntitySubtitles(MSEntityTypes.FROG, "death", "Frog dies");
		addEntitySubtitles(MSEntityTypes.IMP, "ambient", "Imp screeches");
		addEntitySubtitles(MSEntityTypes.IMP, "hurt", "Imp hurts");
		addEntitySubtitles(MSEntityTypes.IMP, "death", "Imp dies");
		addEntitySubtitles(MSEntityTypes.OGRE, "ambient", "Ogre grunts");
		addEntitySubtitles(MSEntityTypes.OGRE, "hurt", "Ogre hurts");
		addEntitySubtitles(MSEntityTypes.OGRE, "death", "Ogre dies");
		addEntitySubtitles(MSEntityTypes.BASILISK, "ambient", "Basilisk hisses");
		addEntitySubtitles(MSEntityTypes.BASILISK, "hurt", "Basilisk hurts");
		addEntitySubtitles(MSEntityTypes.BASILISK, "death", "Basilisk dies");
		addEntitySubtitles(MSEntityTypes.LICH, "ambient", "Lich wispers");
		addEntitySubtitles(MSEntityTypes.LICH, "hurt", "Lich hurts");
		addEntitySubtitles(MSEntityTypes.LICH, "death", "Lich dies");
		addEntitySubtitles(MSEntityTypes.GICLOPS, "ambient", "Giclops wants to eat'cha");
		addEntitySubtitles(MSEntityTypes.GICLOPS, "hurt", "Giclops hurts");
		addEntitySubtitles(MSEntityTypes.GICLOPS, "death", "Giclops dies");
	}
}