package com.mraof.minestuck.data;

import com.mraof.minestuck.util.ExtraForgeTags;
import net.minecraft.block.Blocks;
import net.minecraft.data.BlockTagsProvider;
import net.minecraft.data.DataGenerator;
import net.minecraftforge.common.Tags;

import static com.mraof.minestuck.block.MSBlocks.*;
import static com.mraof.minestuck.util.MSTags.Blocks.*;
import static net.minecraft.tags.BlockTags.*;

public class MinestuckBlockTagsProvider extends BlockTagsProvider
{
	MinestuckBlockTagsProvider(DataGenerator generatorIn)
	{
		super(generatorIn);
	}
	
	@Override
	protected void registerTags()
	{
		getBuilder(PLANKS).add(GLOWING_PLANKS, FROST_PLANKS, RAINBOW_PLANKS, END_PLANKS, DEAD_PLANKS, TREATED_PLANKS).add(ASPECT_PLANKS);
		getBuilder(STONE_BRICKS).add(FLOWERY_MOSSY_STONE_BRICKS);
		getBuilder(WOODEN_BUTTONS).add(WOODEN_EXPLOSIVE_BUTTON);
		getBuilder(BUTTONS).add(STONE_EXPLOSIVE_BUTTON);
		getBuilder(WOODEN_STAIRS).add(RAINBOW_PLANKS_STAIRS, END_PLANKS_STAIRS, DEAD_PLANKS_STAIRS, TREATED_PLANKS_STAIRS);
		getBuilder(WOODEN_SLABS).add(RAINBOW_PLANKS_SLAB, END_PLANKS_SLAB, DEAD_PLANKS_SLAB, TREATED_PLANKS_SLAB);
		getBuilder(SAPLINGS).add(RAINBOW_SAPLING, END_SAPLING).add(ASPECT_SAPLINGS);
		getBuilder(LOGS).add(GLOWING_LOGS, FROST_LOGS, RAINBOW_LOGS, END_LOGS, VINE_LOGS, FLOWERY_VINE_LOGS, DEAD_LOGS, PETRIFIED_LOGS, ASPECT_LOGS);
		getBuilder(ENDERMAN_HOLDABLE).add(BLUE_DIRT, THOUGHT_DIRT);
		getBuilder(STAIRS).add(BLACK_CASTLE_BRICK_STAIRS, DARK_GRAY_CASTLE_BRICK_STAIRS, LIGHT_GRAY_CASTLE_BRICK_STAIRS, WHITE_CASTLE_BRICK_STAIRS, COARSE_STONE_STAIRS, SHADE_BRICK_STAIRS, FROST_BRICK_STAIRS, CAST_IRON_STAIRS, MYCELIUM_BRICK_STAIRS, CHALK_STAIRS, CHALK_BRICK_STAIRS, PINK_STONE_BRICK_STAIRS, BROWN_STONE_BRICK_STAIRS);
		getBuilder(SLABS).add(BLACK_CASTLE_BRICK_SLAB, DARK_GRAY_CASTLE_BRICK_SLAB, LIGHT_GRAY_CASTLE_BRICK_SLAB, WHITE_CASTLE_BRICK_SLAB, CHALK_SLAB, CHALK_BRICK_SLAB, PINK_STONE_BRICK_SLAB, BROWN_STONE_BRICK_SLAB);
		getBuilder(LEAVES).add(FROST_LEAVES, RAINBOW_LEAVES, END_LEAVES).add(ASPECT_LEAVES);
		getBuilder(Tags.Blocks.COBBLESTONE).add(FLOWERY_MOSSY_COBBLESTONE);
		getBuilder(Tags.Blocks.END_STONES).add(COARSE_END_STONE);
		getBuilder(Tags.Blocks.ORES).add(CRUXITE_ORES, ExtraForgeTags.Blocks.URANIUM_ORES);
		getBuilder(Tags.Blocks.ORES_COAL).add(COAL_ORES);
		getBuilder(Tags.Blocks.ORES_DIAMOND).add(DIAMOND_ORES);
		getBuilder(Tags.Blocks.ORES_GOLD).add(GOLD_ORES);
		getBuilder(Tags.Blocks.ORES_IRON).add(IRON_ORES);
		getBuilder(Tags.Blocks.ORES_LAPIS).add(LAPIS_ORES);
		getBuilder(Tags.Blocks.ORES_QUARTZ).add(QUARTZ_ORES);
		getBuilder(Tags.Blocks.ORES_REDSTONE).add(REDSTONE_ORES);
		getBuilder(Tags.Blocks.STONE).add(COARSE_STONE, SHADE_STONE, BLACK_STONE, COARSE_END_STONE, PINK_STONE, BROWN_STONE, GREEN_STONE);
		getBuilder(Tags.Blocks.STORAGE_BLOCKS).add(CRUXITE_STORAGE_BLOCKS, ExtraForgeTags.Blocks.URANIUM_STORAGE_BLOCKS);
		
		getBuilder(ExtraForgeTags.Blocks.URANIUM_ORES).add(URANIUM_ORES);
		getBuilder(ExtraForgeTags.Blocks.URANIUM_STORAGE_BLOCKS).add(URANIUM_BLOCK);
		getBuilder(ExtraForgeTags.Blocks.TERRACOTTA).add(Blocks.TERRACOTTA, Blocks.BLACK_GLAZED_TERRACOTTA, Blocks.BLACK_TERRACOTTA, Blocks.BLUE_GLAZED_TERRACOTTA, Blocks.BLUE_TERRACOTTA, Blocks.BROWN_GLAZED_TERRACOTTA, Blocks.BROWN_TERRACOTTA, Blocks.CYAN_GLAZED_TERRACOTTA, Blocks.CYAN_TERRACOTTA, Blocks.GRAY_GLAZED_TERRACOTTA, Blocks.GRAY_TERRACOTTA, Blocks.GREEN_GLAZED_TERRACOTTA, Blocks.GREEN_TERRACOTTA, Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA, Blocks.LIGHT_BLUE_TERRACOTTA, Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA, Blocks.LIGHT_GRAY_TERRACOTTA, Blocks.LIME_GLAZED_TERRACOTTA, Blocks.LIME_TERRACOTTA, Blocks.MAGENTA_GLAZED_TERRACOTTA, Blocks.MAGENTA_TERRACOTTA, Blocks.ORANGE_GLAZED_TERRACOTTA, Blocks.ORANGE_TERRACOTTA, Blocks.PINK_GLAZED_TERRACOTTA, Blocks.PINK_TERRACOTTA, Blocks.PURPLE_GLAZED_TERRACOTTA, Blocks.PURPLE_TERRACOTTA, Blocks.RED_GLAZED_TERRACOTTA, Blocks.RED_TERRACOTTA, Blocks.WHITE_GLAZED_TERRACOTTA, Blocks.WHITE_TERRACOTTA, Blocks.YELLOW_GLAZED_TERRACOTTA, Blocks.YELLOW_TERRACOTTA);
		
		getBuilder(GLOWING_LOGS).add(GLOWING_LOG, GLOWING_WOOD);
		getBuilder(FROST_LOGS).add(FROST_LOG, FROST_WOOD);
		getBuilder(RAINBOW_LOGS).add(RAINBOW_LOG, RAINBOW_WOOD);
		getBuilder(END_LOGS).add(END_LOG, END_WOOD);
		getBuilder(VINE_LOGS).add(VINE_LOG, VINE_WOOD);
		getBuilder(FLOWERY_VINE_LOGS).add(FLOWERY_VINE_LOG, FLOWERY_VINE_WOOD);
		getBuilder(DEAD_LOGS).add(DEAD_LOG, DEAD_WOOD);
		getBuilder(PETRIFIED_LOGS).add(PETRIFIED_LOG, PETRIFIED_WOOD);
		getBuilder(ASPECT_LOGS).add(BLOOD_ASPECT_LOG, BREATH_ASPECT_LOG, DOOM_ASPECT_LOG, HEART_ASPECT_LOG, HOPE_ASPECT_LOG, LIFE_ASPECT_LOG, LIGHT_ASPECT_LOG, MIND_ASPECT_LOG, RAGE_ASPECT_LOG, SPACE_ASPECT_LOG, TIME_ASPECT_LOG, VOID_ASPECT_LOG);
		getBuilder(ASPECT_PLANKS).add(BLOOD_ASPECT_PLANKS, BREATH_ASPECT_PLANKS, DOOM_ASPECT_PLANKS, HEART_ASPECT_PLANKS, HOPE_ASPECT_PLANKS, LIFE_ASPECT_PLANKS, LIGHT_ASPECT_PLANKS, MIND_ASPECT_PLANKS, RAGE_ASPECT_PLANKS, SPACE_ASPECT_PLANKS, TIME_ASPECT_PLANKS, VOID_ASPECT_PLANKS);
		getBuilder(ASPECT_LEAVES).add(BLOOD_ASPECT_LEAVES, BREATH_ASPECT_LEAVES, DOOM_ASPECT_LEAVES, HEART_ASPECT_LEAVES, HOPE_ASPECT_LEAVES, LIFE_ASPECT_LEAVES, LIGHT_ASPECT_LEAVES, MIND_ASPECT_LEAVES, RAGE_ASPECT_LEAVES, SPACE_ASPECT_LEAVES, TIME_ASPECT_LEAVES, VOID_ASPECT_LEAVES);
		getBuilder(ASPECT_SAPLINGS).add(BLOOD_ASPECT_SAPLING, BREATH_ASPECT_SAPLING, DOOM_ASPECT_SAPLING, HEART_ASPECT_SAPLING, HOPE_ASPECT_SAPLING, LIFE_ASPECT_SAPLING, LIGHT_ASPECT_SAPLING, MIND_ASPECT_SAPLING, RAGE_ASPECT_SAPLING, SPACE_ASPECT_SAPLING, TIME_ASPECT_SAPLING, VOID_ASPECT_SAPLING);
		getBuilder(CRUXITE_ORES).add(STONE_CRUXITE_ORE, NETHERRACK_CRUXITE_ORE, COBBLESTONE_CRUXITE_ORE, SANDSTONE_CRUXITE_ORE, RED_SANDSTONE_CRUXITE_ORE, END_STONE_CRUXITE_ORE, PINK_STONE_CRUXITE_ORE);
		getBuilder(URANIUM_ORES).add(STONE_URANIUM_ORE, NETHERRACK_URANIUM_ORE, COBBLESTONE_URANIUM_ORE, SANDSTONE_URANIUM_ORE, RED_SANDSTONE_URANIUM_ORE, END_STONE_URANIUM_ORE, PINK_STONE_URANIUM_ORE);
		getBuilder(COAL_ORES).add(NETHERRACK_COAL_ORE, PINK_STONE_COAL_ORE);
		getBuilder(IRON_ORES).add(END_STONE_IRON_ORE, SANDSTONE_IRON_ORE, RED_SANDSTONE_IRON_ORE);
		getBuilder(GOLD_ORES).add(SANDSTONE_GOLD_ORE, RED_SANDSTONE_GOLD_ORE, PINK_STONE_GOLD_ORE);
		getBuilder(REDSTONE_ORES).add(END_STONE_REDSTONE_ORE);
		getBuilder(QUARTZ_ORES).add(STONE_QUARTZ_ORE);
		getBuilder(LAPIS_ORES).add(PINK_STONE_LAPIS_ORE);
		getBuilder(DIAMOND_ORES).add(PINK_STONE_DIAMOND_ORE);
		getBuilder(CRUXITE_STORAGE_BLOCKS).add(CRUXITE_BLOCK);
		getBuilder(END_SAPLING_DIRT).add(Tags.Blocks.END_STONES).add(END_GRASS);
	}
	
	@Override
	public String getName()
	{
		return "Minestuck Block Tags";
	}
}
